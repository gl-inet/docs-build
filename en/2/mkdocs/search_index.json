{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome!\n\n\nGL.iNet is devoted to make hardware working easily with open-sourced software. This docs site is intended to advise newcomers to how open sourced software works on our hardware. As the product evolves, this docs site will be updated from time to time.\n\n\nOfficial Support\n\n\nWe try our best to solve your every technical problem when you use our products. We have built a community for you to share your ideas with other users on our \nDiscourse\n forum. Also, we can also offer helps on our \nFacebook\n page and our \nTwitter\n platform. If you have some really in-depth technical questions you want we to work on, please email them to \nsupport@gl-inet.com\n \n\n\nContribution\n\n\nThank You\n\n\nGL.iNet OpenWrt routers are brought to you by the GL.iNet Team based in Hong Kong and Shenzhen, and many other open source community members. As a community driven resource, the people who use and edit the docs would be very grateful if you followed the guidelines below. This page also has tips and tricks for making your article, which would also be fabulous.\n\n\nThanks,\nGL.iNet Team\n\n\nWikidevi\n\n\nGL-B1300 Gigabit AC Router: \nhttps://wikidevi.com/wiki/GL.iNet_GL-B1300\n\n\nGL-AR750 Travel AC Router: \nhttps://wikidevi.com/wiki/GL.iNet_GL-AR750\n\n\nGL-USB150 Microuter: \nhttps://wikidevi.com/wiki/GL.iNet_GL-USB150\n\n\nGL-AR300M Mini Smart Router: \nhttps://wikidevi.com/wiki/GL.iNet_GL-AR300M\n\n\nGL-AR150 Mini Smart Router: \nhttps://wikidevi.com/wiki/GL.iNet_GL-AR150\n\n\nGL-MiFi 4G Smart Router: TBA\n\n\nGL-MT300A Mini Smart Router: TBA\n\n\nGL-MT300N-V2 Mini Smart Router: TBA\n\n\nGL-MT300N Mini Smart Router: TBA\n\n\nGL.iNet 6416 Mini Smart Router: TBA\n\n\nMarkdown\n\n\nMarkdown Basics: \nhttps://help.github.com/articles/markdown-basics/\n\n\nMarkdown Syntax: \nhttp://daringfireball.net/projects/markdown/syntax\n\n\nTable Generator: \nhttp://www.tablesgenerator.com/markdown_tables", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome", 
            "text": "GL.iNet is devoted to make hardware working easily with open-sourced software. This docs site is intended to advise newcomers to how open sourced software works on our hardware. As the product evolves, this docs site will be updated from time to time.", 
            "title": "Welcome!"
        }, 
        {
            "location": "/#official-support", 
            "text": "We try our best to solve your every technical problem when you use our products. We have built a community for you to share your ideas with other users on our  Discourse  forum. Also, we can also offer helps on our  Facebook  page and our  Twitter  platform. If you have some really in-depth technical questions you want we to work on, please email them to  support@gl-inet.com", 
            "title": "Official Support"
        }, 
        {
            "location": "/#contribution", 
            "text": "", 
            "title": "Contribution"
        }, 
        {
            "location": "/#thank-you", 
            "text": "GL.iNet OpenWrt routers are brought to you by the GL.iNet Team based in Hong Kong and Shenzhen, and many other open source community members. As a community driven resource, the people who use and edit the docs would be very grateful if you followed the guidelines below. This page also has tips and tricks for making your article, which would also be fabulous.  Thanks,\nGL.iNet Team", 
            "title": "Thank You"
        }, 
        {
            "location": "/#wikidevi", 
            "text": "GL-B1300 Gigabit AC Router:  https://wikidevi.com/wiki/GL.iNet_GL-B1300  GL-AR750 Travel AC Router:  https://wikidevi.com/wiki/GL.iNet_GL-AR750  GL-USB150 Microuter:  https://wikidevi.com/wiki/GL.iNet_GL-USB150  GL-AR300M Mini Smart Router:  https://wikidevi.com/wiki/GL.iNet_GL-AR300M  GL-AR150 Mini Smart Router:  https://wikidevi.com/wiki/GL.iNet_GL-AR150  GL-MiFi 4G Smart Router: TBA  GL-MT300A Mini Smart Router: TBA  GL-MT300N-V2 Mini Smart Router: TBA  GL-MT300N Mini Smart Router: TBA  GL.iNet 6416 Mini Smart Router: TBA", 
            "title": "Wikidevi"
        }, 
        {
            "location": "/#markdown", 
            "text": "Markdown Basics:  https://help.github.com/articles/markdown-basics/  Markdown Syntax:  http://daringfireball.net/projects/markdown/syntax  Table Generator:  http://www.tablesgenerator.com/markdown_tables", 
            "title": "Markdown"
        }, 
        {
            "location": "/service/", 
            "text": "Services\n\n\nWe provide hardware services. The ideas is illustrated here:\n\n\n\n\nDue to limited resources, we now only provide such service based on Domino and Mini routers.\n\n\nMany people ask for a price break down. We cannot give precise information without detailed requirement. Such project cost thousands of USD to tens of thousands, depends on detailed requirements.\n\n\nWe have made several such projects and found this is very difficult. The reasons include:\n\n\n\n\nRequirements is not detailed and clear. Without a clear requirments the project cannot be started.\n\n\nChanging requirement. This is normal for product development, but it kills a ODM project easily because clients generally don't want to pay more for \nsmall\n changes but such a change can be very costly.\n\n\nCommunication cost is high and project schedule is delayed many times.\n\n\n\n\nIf you want to make hardware based on our products, here is what we suggested:\n\n\n\n\nReuse existing hardware as possible as you can. Focus on software.\n\n\nKnow your detailed requirements, e.g. size of your product, interfaces. Not just an idea.\n\n\nPrepare for some money to invest.\n\n\n\n\nDiscussions", 
            "title": "Services"
        }, 
        {
            "location": "/service/#services", 
            "text": "We provide hardware services. The ideas is illustrated here:   Due to limited resources, we now only provide such service based on Domino and Mini routers.  Many people ask for a price break down. We cannot give precise information without detailed requirement. Such project cost thousands of USD to tens of thousands, depends on detailed requirements.  We have made several such projects and found this is very difficult. The reasons include:   Requirements is not detailed and clear. Without a clear requirments the project cannot be started.  Changing requirement. This is normal for product development, but it kills a ODM project easily because clients generally don't want to pay more for  small  changes but such a change can be very costly.  Communication cost is high and project schedule is delayed many times.   If you want to make hardware based on our products, here is what we suggested:   Reuse existing hardware as possible as you can. Focus on software.  Know your detailed requirements, e.g. size of your product, interfaces. Not just an idea.  Prepare for some money to invest.", 
            "title": "Services"
        }, 
        {
            "location": "/service/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/hardware/ar150/", 
            "text": "GL-AR150 Series\n\n\nAR150 Series includes AR150, AR150-Ext, AR150-PoE and AR150-Ext-PoE.\n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-AR150\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nAtheros 9331 400MHz\n\n\n\n\n\n\nMemory\n\n\nDDRII 64MB\n\n\n\n\n\n\nStorage\n\n\n16MB flash\n\n\n\n\n\n\nInterfaces\n\n\n1 WAN, 1 LAN, 1 USB2.0, 1 Micro USB (power), 1 Reset Button, UART\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n150Mbps\n\n\n\n\n\n\nMax. Tx Power\n\n\n18dBm\n\n\n\n\n\n\nProtocol\n\n\n802.11 b/g/n\n\n\n\n\n\n\nExternal Drive Format Support\n\n\nFAT32/NTFS/exFAT/EXT4/EXT3/EXT2\n\n\n\n\n\n\nWebcam Support\n\n\nMJPEG, YUV (web cam not support any more from firmware v2.27)\n\n\n\n\n\n\nDIY Features\n\n\nUART, GPIO,  3.3V \n 5V power port\n\n\n\n\n\n\nExternal Antenna Support\n\n\nYes (optional)\n\n\n\n\n\n\nPoE Module Support\n\n\nYes (optional)\n\n\n\n\n\n\nPower Input\n\n\n5V/1A\n\n\n\n\n\n\nPower Consumption\n\n\n1.5W\n\n\n\n\n\n\nDimension, Weight\n\n\n58mmX58mmX25mm, 39g\n\n\n\n\n\n\n\n\nPCB Pinout\n\n\n\n\nRTC Setting\n\n\nYou can use a RTC (Real-time control) module in GL-AR150 mini router.\n\n\n\n\nInstall kernel modules\n\n\nIf you use our stock firmware, you can just install using \nopkg\n\n\nopkg update\nopkg install kmod-i2c-gpio-custom\nopkg install kmod-rtc-sd2068\n\n\n\n\nIf you want to compile your own firmware, choose these packages:\n\n\nKernel modules  ---\n  I2C support  ---\n  kmod-i2c-gpio-custom\nKernel modules  ---\n  Other modules  ---\n  kmod-rtc-sd2068\n\n\n\n\nSoftware\n\n\nThe GPIO used for RTC is below:\n\n\nSDA\n \n--\n \nGPIO1\n\n\nSCL\n \n--\n \nGPIO17\n\n\nNow you need in insert kernel modules and connect to the module\n\n\ninsmod i2c-gpio-custom.ko bus0=0,1,17\necho sd2068 0x32 \n /sys/bus/i2c/devices/i2c-0/new_device\n\n\n\n\nTo read the time from RTC module\n\n\nhwclock -r\n\n\n\n\nTo sync the RTC module's time to mini router\n\n\nhwclock -s\n\n\n\n\nTo write mini router's time to RTC module\n\n\nhwclock -w\n\n\n\n\nPoE Connection\n\n\nWe have a specific PoE module for GL-AR150 mini routers. You can find it in the PoE version of AR150 router.\n\n\nYou can only apply one power supply method at one time, either via PoE (Power over Ethernet) or micro USB Power. The compatible passive or active PoE injector should be 48V 802.3af/at.\n\n\nPoE only works on the \nWAN Port only\n\n\n\n\nPoE Setup Sample: \n\n\nThe following PoE injector is widely availabe in the market and it is very affordable. You can put you Ineternet cable in the \nData In\n port then connect the \nData \n Power Out\n port to AR150-PoE's \nWAN\n port.\n\n\nFor PoE Version Only", 
            "title": "GL-AR150 Series"
        }, 
        {
            "location": "/hardware/ar150/#gl-ar150-series", 
            "text": "AR150 Series includes AR150, AR150-Ext, AR150-PoE and AR150-Ext-PoE.", 
            "title": "GL-AR150 Series"
        }, 
        {
            "location": "/hardware/ar150/#hardware-specification", 
            "text": "Model  GL-AR150      CPU  Atheros 9331 400MHz    Memory  DDRII 64MB    Storage  16MB flash    Interfaces  1 WAN, 1 LAN, 1 USB2.0, 1 Micro USB (power), 1 Reset Button, UART    Frequency  2.4GHz    Transmission Rate  150Mbps    Max. Tx Power  18dBm    Protocol  802.11 b/g/n    External Drive Format Support  FAT32/NTFS/exFAT/EXT4/EXT3/EXT2    Webcam Support  MJPEG, YUV (web cam not support any more from firmware v2.27)    DIY Features  UART, GPIO,  3.3V   5V power port    External Antenna Support  Yes (optional)    PoE Module Support  Yes (optional)    Power Input  5V/1A    Power Consumption  1.5W    Dimension, Weight  58mmX58mmX25mm, 39g", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/ar150/#pcb-pinout", 
            "text": "", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/hardware/ar150/#rtc-setting", 
            "text": "You can use a RTC (Real-time control) module in GL-AR150 mini router.", 
            "title": "RTC Setting"
        }, 
        {
            "location": "/hardware/ar150/#install-kernel-modules", 
            "text": "If you use our stock firmware, you can just install using  opkg  opkg update\nopkg install kmod-i2c-gpio-custom\nopkg install kmod-rtc-sd2068  If you want to compile your own firmware, choose these packages:  Kernel modules  ---   I2C support  ---   kmod-i2c-gpio-custom\nKernel modules  ---   Other modules  ---   kmod-rtc-sd2068", 
            "title": "Install kernel modules"
        }, 
        {
            "location": "/hardware/ar150/#software", 
            "text": "The GPIO used for RTC is below:  SDA   --   GPIO1  SCL   --   GPIO17  Now you need in insert kernel modules and connect to the module  insmod i2c-gpio-custom.ko bus0=0,1,17\necho sd2068 0x32   /sys/bus/i2c/devices/i2c-0/new_device  To read the time from RTC module  hwclock -r  To sync the RTC module's time to mini router  hwclock -s  To write mini router's time to RTC module  hwclock -w", 
            "title": "Software"
        }, 
        {
            "location": "/hardware/ar150/#poe-connection", 
            "text": "We have a specific PoE module for GL-AR150 mini routers. You can find it in the PoE version of AR150 router.  You can only apply one power supply method at one time, either via PoE (Power over Ethernet) or micro USB Power. The compatible passive or active PoE injector should be 48V 802.3af/at.  PoE only works on the  WAN Port only   PoE Setup Sample:   The following PoE injector is widely availabe in the market and it is very affordable. You can put you Ineternet cable in the  Data In  port then connect the  Data   Power Out  port to AR150-PoE's  WAN  port.  For PoE Version Only", 
            "title": "PoE Connection"
        }, 
        {
            "location": "/hardware/ar300m/", 
            "text": "GL-AR300M Series\n\n\nBest Mini Router Ever\n\n\nAR300M is the our best mini router. It is small and powerful.\n\n\nIt has several sub-models:\n\n\n\n\n\n\n\n\nSub-model\n\n\nNor flash\n\n\nNand flash\n\n\nAntenna\n\n\n5G wifi\n\n\nUSB power control\n\n\n\n\n\n\n\n\n\n\nAR300M\n\n\n16MB\n\n\n128MB\n\n\nInternal\n\n\nNo\n\n\nYes\n\n\n\n\n\n\nAR300M-Ext\n\n\n16MB\n\n\n128MB\n\n\nExternal\n\n\nNo\n\n\nYes\n\n\n\n\n\n\nAR300M16\n\n\n16MB\n\n\nNo\n\n\nInternal\n\n\nNo\n\n\nYes\n\n\n\n\n\n\nAR300M16-Ext\n\n\n16MB\n\n\nNo\n\n\nExternal\n\n\nNo\n\n\nYes\n\n\n\n\n\n\nAR300M-Lite\n\n\n16MB\n\n\nNo\n\n\nInternal\n\n\nNo\n\n\nNo\n\n\n\n\n\n\nAR300MD*\n\n\n16MB\n\n\n128MB\n\n\nInternal\n\n\nYes\n\n\nYes\n\n\n\n\n\n\n\n\n*AR300MD 5Gwifi is suggested only to work at monitoring mode because of power consumption. \n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-AR300M Series\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nQCA9531 650MHz\n\n\n\n\n\n\nMemory\n\n\nDDRII 128MB\n\n\n\n\n\n\nStorage\n\n\n16MB Nor, 128 MB Nand (Optional)\n\n\n\n\n\n\nInterfaces\n\n\n1 WAN, 1 LAN, 1 USB2.0, 1 Micro USB (power), 1 Reset Button, PCIe, UART\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n300Mbps\n\n\n\n\n\n\nMax. Tx Power\n\n\n20dBm\n\n\n\n\n\n\nProtocol\n\n\n802.11 b/g/n\n\n\n\n\n\n\nExternal Drive Format Support\n\n\nFAT32/NTFS/exFAT/EXT4/EXT3/EXT2\n\n\n\n\n\n\nWebcam Support\n\n\nMJPEG, YUV (not support from firmware v2.27)\n\n\n\n\n\n\nDIY Features\n\n\nUART, GPIO, PCIe, 3.3V \n 5V power port\n\n\n\n\n\n\nExternal Antenna Support\n\n\nYes (optional)\n\n\n\n\n\n\nPoE Module Support\n\n\nNo\n\n\n\n\n\n\nPower Input\n\n\n5V/1A\n\n\n\n\n\n\nPower Consumption\n\n\n2W\n\n\n\n\n\n\nDimension, Weight\n\n\n58mmX58mmX25mm, 39g\n\n\n\n\n\n\nPCIe headers\n\n\nYes\n\n\n\n\n\n\n\n\nPCB Pinout\n\n\n\n\nNote: I2C is not working in some early version of the router.\n\n\nBy using 128MB Nand flash, space is not a problem and the writing speed is improved greatly. You can compile a firmware with tons of features and writing data is almost instant.\n\n\nBy adding PCIe interface, a 5G 802.11a/ac addon module can be connected and you can enjoy the wifi speed on a mini router.\n\n\nPerformance\n\n\nBy adding a fast Nand flash, you can feel how the performance is improved compared to a Nor flash router.\n\n\nThe performance comparision between AR300M (nand) with AR150 is below:\n\n\n\n\nIt only takes 6 seconds to upload and process 250 ovpn files. When installing packages to the router, it takes no more than 20% for the time spent than using nor flash, including the time to download resource from the Internet. So everything just happends in seconds.\n\n\nBuilding Firmware\n\n\nThe router has two flash so we have two firmwares. One firmware is installed on the Nor flash and one is installed on the nand flash. The two firmware is independent from each other. The router will always try to boot from the nand flash. If it fails for 3 times it will boot from the Nor flash.\n\n\nBy using two firmwares, businesses can have dual boot options to ensure the system can backup, upgrade and boot without problems.\n\n\nBuilding the generic firmware for nor flash\n\n\nThe simple instructions of building the firmware can be found here: https://github.com/gl-inet/lede-17.01\nYou need to have a Linux machine. In this example we use Ubuntu.\n\n\n$ sudo apt-get update\n$ sudo apt-get install subversion build-essential git-core libncurses5-dev zlib1g-dev gawk flex quilt libssl-dev xsltproc libxml-parser-perl mercurial bzr ecj cvs unzip git wget\n$ git clone https://github.com/domino-team/openwrt-cc.git\n$ cd openwrt-cc\n$ ./scripts/feeds update -a\n$ ./scripts/feeds install -a\n$ make menuconfig\n  ..choose your compile target and packages\n$ make\n\n\n\n\n\nIf you want to build the firmware for nor flash, choose \nGL-AR300M\n as the target.\n\n\n\n\nBuild the nand firmware for nand flash\n\n\nIf you want to build the firmware for nand flash, first choose subtarget \nGeneric devices with NAND flash\n then choose \nGL-AR300M Nand\n as the target.\n\n\n\n\nThe make process will takes around 1 hour for the first time because it needs to download a lot of data from t he Internet. After compiling finished, you will find the following firmware files in \nbin/ar71xx/\n\n\n\n\nopenwrt-ar71xx-generic-gl-ar300m-squashfs-sysupgrade.bin\n, for nor flash\n\n\nopenwrt-ar71xx-nand-gl-ar300m-squashfs-sysupgrade.tar\n, for nand flash firmware upgrade inside of a working Openwrt firmware\n\n\nopenwrt-ar71xx-nand-gl-ar300m-ubi.img\n, for initial nand flash firmware build, this is used when upgrading using uboot.\n\n\n\n\nNote\n\n\nThere is two file for nand firmware. The \nxxx-ubi.img\n is used for first time writing to the nand flash. If you are using uboot to upgrade the firmware, please use this one. The \nxxx-sysupgrade.tar\n is used for upgrading from openwrt. So if you use our stock firmware or already using an openwrt firmware, choose this one.\n\n\nUsing Firmware\n\n\nThe firmware has exactly the same UI as our other mini routers. To determine you are using nor flash or nand flash, please check the available space from the UI.\n\n\nControl which firmware you are booting into\n\n\nThere are two methods to control which firmware you can boot.\n\n\nMethod 1: set boot count\n\n\nThe router will always try to boot into the nand firmware. But if it fails for 3 times it will try to boot into the nor firmware. If you want to boot into the nor firmware, you can tell the router that it failed to boot for 3 times already by setting the uboot env. To do so, you can use the following command in a SSH terminal.\n\n\n$ fw_printenv\n$ fw_setenv bootcount 3\n$ reboot\n\n\n\n\nYou need to do this each time\n if you want to boot into nor firmware, no matter you which firmware you are using. Otherwise after the firmware boot, it will reset \nbootcount\n variable and next boot will always try to boot the nand firmware.\n\n\nMethod 2: using the switch\n\n\nThis is only valid in the new uboot (from Mar 2017).\n\n\nFirst ssh to the router and set uboot env \nboot_dev\n\n\n$ fw_printenv\n$ fw_setenv boot_dev on\n$ reboot\n\n\n\n\nThen when the router boot, the router will choose which firmware to boot using the hardware switch.\n1. Left side (near the reset button) --\n Nand flash\n2. Right side  --\n Nor flash\n\n\nTo disable using the switch to choose firmware function, clear \nboot_dev\n variable.\n\n\n$ fw_printenv\n$ fw_setenv boot_dev\n$ reboot\n\n\n\n\nDebrick\n\n\nIf you brick your router and it cannot boot, you can try to save it using uboot.\n\n\nUsing uboot web UI\n\n\nFollow \nthis guide\n for a general instruction to get access of uboot web UI.\n\n\nHere is a video guide for entering AR300M uboot failsafe. \n\n\n\nIn some early version of AR300M, the uboot boot very slowly. So be patient when you press and hold the reset button. The LEDs will start to flash around 5 seconds.\n\n\nThere is a bug in AR300M uboot and in some computers the connection will always reset when you upload firmware. Check \nthis post\n to find the discussion. You can either try chaning the MTU or just try another computer.\n\n\nNote\n: If you have an older version of uboot, the webUI will only be able to flash NAND flash. This is fixed in newer versions.\n\n\nNote\n: When flash NAND firmware, only use the firmware with \n.img\n in the name, not the one with \n.rar\n in the name.\n\n\nThe following figure is the web ui of the \nnew\n uboot.\n\n\n\n\nUsing uboot console\n\n\nIf you want to use uboot console, you need to open the case and solder the serial connectors.\n\n\nThen you need to set up a tftp server.\n\n\nin uboot console, the command to flash nor flash is \nrun lf\n to flash nand firmware is \nrun nlf\n\n\nDiscussions", 
            "title": "GL-AR300M Series"
        }, 
        {
            "location": "/hardware/ar300m/#gl-ar300m-series", 
            "text": "Best Mini Router Ever  AR300M is the our best mini router. It is small and powerful.  It has several sub-models:     Sub-model  Nor flash  Nand flash  Antenna  5G wifi  USB power control      AR300M  16MB  128MB  Internal  No  Yes    AR300M-Ext  16MB  128MB  External  No  Yes    AR300M16  16MB  No  Internal  No  Yes    AR300M16-Ext  16MB  No  External  No  Yes    AR300M-Lite  16MB  No  Internal  No  No    AR300MD*  16MB  128MB  Internal  Yes  Yes     *AR300MD 5Gwifi is suggested only to work at monitoring mode because of power consumption.", 
            "title": "GL-AR300M Series"
        }, 
        {
            "location": "/hardware/ar300m/#hardware-specification", 
            "text": "Model  GL-AR300M Series      CPU  QCA9531 650MHz    Memory  DDRII 128MB    Storage  16MB Nor, 128 MB Nand (Optional)    Interfaces  1 WAN, 1 LAN, 1 USB2.0, 1 Micro USB (power), 1 Reset Button, PCIe, UART    Frequency  2.4GHz    Transmission Rate  300Mbps    Max. Tx Power  20dBm    Protocol  802.11 b/g/n    External Drive Format Support  FAT32/NTFS/exFAT/EXT4/EXT3/EXT2    Webcam Support  MJPEG, YUV (not support from firmware v2.27)    DIY Features  UART, GPIO, PCIe, 3.3V   5V power port    External Antenna Support  Yes (optional)    PoE Module Support  No    Power Input  5V/1A    Power Consumption  2W    Dimension, Weight  58mmX58mmX25mm, 39g    PCIe headers  Yes", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/ar300m/#pcb-pinout", 
            "text": "Note: I2C is not working in some early version of the router.  By using 128MB Nand flash, space is not a problem and the writing speed is improved greatly. You can compile a firmware with tons of features and writing data is almost instant.  By adding PCIe interface, a 5G 802.11a/ac addon module can be connected and you can enjoy the wifi speed on a mini router.", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/hardware/ar300m/#performance", 
            "text": "By adding a fast Nand flash, you can feel how the performance is improved compared to a Nor flash router.  The performance comparision between AR300M (nand) with AR150 is below:   It only takes 6 seconds to upload and process 250 ovpn files. When installing packages to the router, it takes no more than 20% for the time spent than using nor flash, including the time to download resource from the Internet. So everything just happends in seconds.", 
            "title": "Performance"
        }, 
        {
            "location": "/hardware/ar300m/#building-firmware", 
            "text": "The router has two flash so we have two firmwares. One firmware is installed on the Nor flash and one is installed on the nand flash. The two firmware is independent from each other. The router will always try to boot from the nand flash. If it fails for 3 times it will boot from the Nor flash.  By using two firmwares, businesses can have dual boot options to ensure the system can backup, upgrade and boot without problems.", 
            "title": "Building Firmware"
        }, 
        {
            "location": "/hardware/ar300m/#building-the-generic-firmware-for-nor-flash", 
            "text": "The simple instructions of building the firmware can be found here: https://github.com/gl-inet/lede-17.01\nYou need to have a Linux machine. In this example we use Ubuntu.  $ sudo apt-get update\n$ sudo apt-get install subversion build-essential git-core libncurses5-dev zlib1g-dev gawk flex quilt libssl-dev xsltproc libxml-parser-perl mercurial bzr ecj cvs unzip git wget\n$ git clone https://github.com/domino-team/openwrt-cc.git\n$ cd openwrt-cc\n$ ./scripts/feeds update -a\n$ ./scripts/feeds install -a\n$ make menuconfig\n  ..choose your compile target and packages\n$ make  If you want to build the firmware for nor flash, choose  GL-AR300M  as the target.", 
            "title": "Building the generic firmware for nor flash"
        }, 
        {
            "location": "/hardware/ar300m/#build-the-nand-firmware-for-nand-flash", 
            "text": "If you want to build the firmware for nand flash, first choose subtarget  Generic devices with NAND flash  then choose  GL-AR300M Nand  as the target.   The make process will takes around 1 hour for the first time because it needs to download a lot of data from t he Internet. After compiling finished, you will find the following firmware files in  bin/ar71xx/   openwrt-ar71xx-generic-gl-ar300m-squashfs-sysupgrade.bin , for nor flash  openwrt-ar71xx-nand-gl-ar300m-squashfs-sysupgrade.tar , for nand flash firmware upgrade inside of a working Openwrt firmware  openwrt-ar71xx-nand-gl-ar300m-ubi.img , for initial nand flash firmware build, this is used when upgrading using uboot.   Note  There is two file for nand firmware. The  xxx-ubi.img  is used for first time writing to the nand flash. If you are using uboot to upgrade the firmware, please use this one. The  xxx-sysupgrade.tar  is used for upgrading from openwrt. So if you use our stock firmware or already using an openwrt firmware, choose this one.", 
            "title": "Build the nand firmware for nand flash"
        }, 
        {
            "location": "/hardware/ar300m/#using-firmware", 
            "text": "The firmware has exactly the same UI as our other mini routers. To determine you are using nor flash or nand flash, please check the available space from the UI.", 
            "title": "Using Firmware"
        }, 
        {
            "location": "/hardware/ar300m/#control-which-firmware-you-are-booting-into", 
            "text": "There are two methods to control which firmware you can boot.", 
            "title": "Control which firmware you are booting into"
        }, 
        {
            "location": "/hardware/ar300m/#method-1-set-boot-count", 
            "text": "The router will always try to boot into the nand firmware. But if it fails for 3 times it will try to boot into the nor firmware. If you want to boot into the nor firmware, you can tell the router that it failed to boot for 3 times already by setting the uboot env. To do so, you can use the following command in a SSH terminal.  $ fw_printenv\n$ fw_setenv bootcount 3\n$ reboot  You need to do this each time  if you want to boot into nor firmware, no matter you which firmware you are using. Otherwise after the firmware boot, it will reset  bootcount  variable and next boot will always try to boot the nand firmware.", 
            "title": "Method 1: set boot count"
        }, 
        {
            "location": "/hardware/ar300m/#method-2-using-the-switch", 
            "text": "This is only valid in the new uboot (from Mar 2017).  First ssh to the router and set uboot env  boot_dev  $ fw_printenv\n$ fw_setenv boot_dev on\n$ reboot  Then when the router boot, the router will choose which firmware to boot using the hardware switch.\n1. Left side (near the reset button) --  Nand flash\n2. Right side  --  Nor flash  To disable using the switch to choose firmware function, clear  boot_dev  variable.  $ fw_printenv\n$ fw_setenv boot_dev\n$ reboot", 
            "title": "Method 2: using the switch"
        }, 
        {
            "location": "/hardware/ar300m/#debrick", 
            "text": "If you brick your router and it cannot boot, you can try to save it using uboot.", 
            "title": "Debrick"
        }, 
        {
            "location": "/hardware/ar300m/#using-uboot-web-ui", 
            "text": "Follow  this guide  for a general instruction to get access of uboot web UI.  Here is a video guide for entering AR300M uboot failsafe.   In some early version of AR300M, the uboot boot very slowly. So be patient when you press and hold the reset button. The LEDs will start to flash around 5 seconds.  There is a bug in AR300M uboot and in some computers the connection will always reset when you upload firmware. Check  this post  to find the discussion. You can either try chaning the MTU or just try another computer.  Note : If you have an older version of uboot, the webUI will only be able to flash NAND flash. This is fixed in newer versions.  Note : When flash NAND firmware, only use the firmware with  .img  in the name, not the one with  .rar  in the name.  The following figure is the web ui of the  new  uboot.", 
            "title": "Using uboot web UI"
        }, 
        {
            "location": "/hardware/ar300m/#using-uboot-console", 
            "text": "If you want to use uboot console, you need to open the case and solder the serial connectors.  Then you need to set up a tftp server.  in uboot console, the command to flash nor flash is  run lf  to flash nand firmware is  run nlf", 
            "title": "Using uboot console"
        }, 
        {
            "location": "/hardware/ar300m/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/hardware/mt300a/", 
            "text": "GL-MT300A Mini Smart Router\n\n\nMT300A is a mini router which has a MicroSD card slot inside. Its wifi performance and computation power is higher than MT300N.\n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-MT300A\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nMTK 7620A 580MHz\n\n\n\n\n\n\nMemory\n\n\nDDRII 128MB\n\n\n\n\n\n\nStorage\n\n\n16MB Nor Flash\n\n\n\n\n\n\nInterfaces\n\n\n1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button, TF Card Slot (128GB Max. integrated on board)\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n300Mbps\n\n\n\n\n\n\nMax. Tx Power\n\n\n20dBm\n\n\n\n\n\n\nProtocol\n\n\n802.11 b/g/n\n\n\n\n\n\n\nExternal Drive Format Support\n\n\nFAT32/NTFS/exFAT/EXT4/EXT3/EXT2\n\n\n\n\n\n\nWebcam Support\n\n\nMJPEG, YUV (not support from firmware v2.27)\n\n\n\n\n\n\nDIY Features\n\n\nUART, 3.3V \n 5V power port\n\n\n\n\n\n\nExternal Antenna Support\n\n\nYes\n\n\n\n\n\n\nPoE Module Support\n\n\nNo\n\n\n\n\n\n\nPower Input\n\n\n5V/1A\n\n\n\n\n\n\nPower Consumption\n\n\n2W\n\n\n\n\n\n\nDimension, Weight\n\n\n58mmX58mmX25mm, 39g\n\n\n\n\n\n\n\n\nPCB Pinout\n\n\nMT300A has headers for EMMC microSD card connector and 5V power pins. \n\n\n \n\n\nMicroSD Card Slot\n\n\nGL-MT300A Router has a SD card slot inside. You need to open the case and insert the MicroSD card.", 
            "title": "GL-MT300A"
        }, 
        {
            "location": "/hardware/mt300a/#gl-mt300a-mini-smart-router", 
            "text": "MT300A is a mini router which has a MicroSD card slot inside. Its wifi performance and computation power is higher than MT300N.", 
            "title": "GL-MT300A Mini Smart Router"
        }, 
        {
            "location": "/hardware/mt300a/#hardware-specification", 
            "text": "Model  GL-MT300A      CPU  MTK 7620A 580MHz    Memory  DDRII 128MB    Storage  16MB Nor Flash    Interfaces  1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button, TF Card Slot (128GB Max. integrated on board)    Frequency  2.4GHz    Transmission Rate  300Mbps    Max. Tx Power  20dBm    Protocol  802.11 b/g/n    External Drive Format Support  FAT32/NTFS/exFAT/EXT4/EXT3/EXT2    Webcam Support  MJPEG, YUV (not support from firmware v2.27)    DIY Features  UART, 3.3V   5V power port    External Antenna Support  Yes    PoE Module Support  No    Power Input  5V/1A    Power Consumption  2W    Dimension, Weight  58mmX58mmX25mm, 39g", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/mt300a/#pcb-pinout", 
            "text": "MT300A has headers for EMMC microSD card connector and 5V power pins.", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/hardware/mt300a/#microsd-card-slot", 
            "text": "GL-MT300A Router has a SD card slot inside. You need to open the case and insert the MicroSD card.", 
            "title": "MicroSD Card Slot"
        }, 
        {
            "location": "/hardware/mt300n/", 
            "text": "GL-MT300N Mini Smart Router\n\n\nMT300N was the best selling router due to its performance and prices. It was replaced by MT300N-V2.\n\n\nThis model didn't has a external antenna version.\n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-MT300N\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nMTK 7620NN 580MHz\n\n\n\n\n\n\nMemory\n\n\nDDRI 64MB\n\n\n\n\n\n\nStorage\n\n\n16MB Nor Flash\n\n\n\n\n\n\nInterfaces\n\n\n1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n300Mbps\n\n\n\n\n\n\nMax. Tx Power\n\n\n20dBm\n\n\n\n\n\n\nProtocol\n\n\n802.11 b/g/n\n\n\n\n\n\n\nExternal Drive Format Support\n\n\nFAT32/NTFS/exFAT/EXT4/EXT3/EXT2\n\n\n\n\n\n\nWebcam Support\n\n\nMJPEG, YUV (not support from firmware v2.27)\n\n\n\n\n\n\nDIY Features\n\n\nUART, GPIO, 3.3V \n 5V power port\n\n\n\n\n\n\nExternal Antenna Support\n\n\nNo\n\n\n\n\n\n\nPoE Module Support\n\n\nYes (optional)\n\n\n\n\n\n\nPower Input\n\n\n5V/1A\n\n\n\n\n\n\nPower Consumption\n\n\n2W\n\n\n\n\n\n\nDimension, Weight\n\n\n58mmX58mmX25mm, 39g\n\n\n\n\n\n\n\n\nPCB Pinout\n\n\nMT300N has options to support PoE.", 
            "title": "GL-MT300N"
        }, 
        {
            "location": "/hardware/mt300n/#gl-mt300n-mini-smart-router", 
            "text": "MT300N was the best selling router due to its performance and prices. It was replaced by MT300N-V2.  This model didn't has a external antenna version.", 
            "title": "GL-MT300N Mini Smart Router"
        }, 
        {
            "location": "/hardware/mt300n/#hardware-specification", 
            "text": "Model  GL-MT300N      CPU  MTK 7620NN 580MHz    Memory  DDRI 64MB    Storage  16MB Nor Flash    Interfaces  1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button    Frequency  2.4GHz    Transmission Rate  300Mbps    Max. Tx Power  20dBm    Protocol  802.11 b/g/n    External Drive Format Support  FAT32/NTFS/exFAT/EXT4/EXT3/EXT2    Webcam Support  MJPEG, YUV (not support from firmware v2.27)    DIY Features  UART, GPIO, 3.3V   5V power port    External Antenna Support  No    PoE Module Support  Yes (optional)    Power Input  5V/1A    Power Consumption  2W    Dimension, Weight  58mmX58mmX25mm, 39g", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/mt300n/#pcb-pinout", 
            "text": "MT300N has options to support PoE.", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/hardware/mt300n-v2/", 
            "text": "GL-MT300N-V2\n\n\nThe best selling mini router.\n\n\nMT300N-V2 is an upgraded version of MT300N. The differences include:\n\n\n\n\nRAM is doubled to 128MB \n\n\nWiFi performance is improved using MTK proprietary driver. This driver doesn't support monitoring mode. But it support layer 2 bridging for all kinds of AP, which is not the case of opensource drivers.\n\n\nOpensource wifi drivers also work but it has some bugs and cause kernel panic. This problem was never solved by the community.  \n\n\nNo PoE options.\n\n\n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-MT300N-V2\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nMTK 7628NN 580MHz\n\n\n\n\n\n\nMemory\n\n\nDDRII 128MB\n\n\n\n\n\n\nStorage\n\n\n16MB Nor Flash\n\n\n\n\n\n\nInterfaces\n\n\n1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n300Mbps\n\n\n\n\n\n\nMax. Tx Power\n\n\n20dBm\n\n\n\n\n\n\nProtocol\n\n\n802.11 b/g/n\n\n\n\n\n\n\nExternal Drive Format Support\n\n\nFAT32/NTFS/exFAT/EXT4/EXT3/EXT2\n\n\n\n\n\n\nWebcam Support\n\n\nMJPEG, YUV (not supported from firmware v2.27)\n\n\n\n\n\n\nDIY Features\n\n\nUART, 4GPIOs, 3.3V \n 5V power port\n\n\n\n\n\n\nExternal Antenna Support\n\n\nNo\n\n\n\n\n\n\nPoE Module Support\n\n\nNo\n\n\n\n\n\n\nPower Input\n\n\n5V/1A\n\n\n\n\n\n\nPower Consumption\n\n\n2.75W\n\n\n\n\n\n\nDimension, Weight\n\n\n58mmX58mmX25mm, 39g\n\n\n\n\n\n\n\n\nPCB Pinout\n\n\nThe pins on the left side can be actually used for Ethernet port or EMMC. They cannot be used as GPIO.", 
            "title": "GL-MT300N-V2"
        }, 
        {
            "location": "/hardware/mt300n-v2/#gl-mt300n-v2", 
            "text": "The best selling mini router.  MT300N-V2 is an upgraded version of MT300N. The differences include:   RAM is doubled to 128MB   WiFi performance is improved using MTK proprietary driver. This driver doesn't support monitoring mode. But it support layer 2 bridging for all kinds of AP, which is not the case of opensource drivers.  Opensource wifi drivers also work but it has some bugs and cause kernel panic. This problem was never solved by the community.    No PoE options.", 
            "title": "GL-MT300N-V2"
        }, 
        {
            "location": "/hardware/mt300n-v2/#hardware-specification", 
            "text": "Model  GL-MT300N-V2      CPU  MTK 7628NN 580MHz    Memory  DDRII 128MB    Storage  16MB Nor Flash    Interfaces  1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button    Frequency  2.4GHz    Transmission Rate  300Mbps    Max. Tx Power  20dBm    Protocol  802.11 b/g/n    External Drive Format Support  FAT32/NTFS/exFAT/EXT4/EXT3/EXT2    Webcam Support  MJPEG, YUV (not supported from firmware v2.27)    DIY Features  UART, 4GPIOs, 3.3V   5V power port    External Antenna Support  No    PoE Module Support  No    Power Input  5V/1A    Power Consumption  2.75W    Dimension, Weight  58mmX58mmX25mm, 39g", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/mt300n-v2/#pcb-pinout", 
            "text": "The pins on the left side can be actually used for Ethernet port or EMMC. They cannot be used as GPIO.", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/hardware/ar750/", 
            "text": "GL-AR750 Travel AC Router\n\n\nThe first dual-band AC travel router. We added one more Ethernet port (totally 3) so that it fit better for fixed usage scenario as well. It has a MicroSD (TF) slot which increase your storage space up to 128GB.\n\n\nIt has PoE options which is the best choice for affordable wifi coverage.\n\n\nThe 2.4G antenna is on the PCB and don't have a uFL connector. While the 5G antenna has uFL connector.\n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-AR750\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nQCA9531 650MHz\n\n\n\n\n\n\nMemory\n\n\nDDRII 128MB\n\n\n\n\n\n\nStorage\n\n\n16MB Nor Flash\n\n\n\n\n\n\nInterfaces\n\n\n1 WAN (100Mbps), 2 LANs (100Mbps), 1 USB2.0, 1 Micro USB (power), 1 Reset Button, UART, TF Card Slot (128GB Max.)\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz, 5.8GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n300Mbps (2.4GHz) + 433Mbps (5GHz)\n\n\n\n\n\n\nMax. Tx Power\n\n\n20dBm (2.4GHz)/20dBm(5GHz)\n\n\n\n\n\n\nProtocol\n\n\n802.11 b/g/n/ac\n\n\n\n\n\n\nExternal Drive Format Support\n\n\nFAT32/NTFS/exFAT/EXT4/EXT3/EXT2\n\n\n\n\n\n\nWebcam Support\n\n\nMJPEG, YUV (not support from firmware v2.27)\n\n\n\n\n\n\nDIY Features\n\n\nUART, GPIO, 3.3V \n 5V power port\n\n\n\n\n\n\nExternal Antenna Support\n\n\nNo\n\n\n\n\n\n\nPoE Module Support\n\n\nYes\n\n\n\n\n\n\nPower Input\n\n\n5V/2A\n\n\n\n\n\n\nPower Consumption\n\n\n6W\n\n\n\n\n\n\nDimension, Weight\n\n\n88mmX68mmX24mm, 66g\n\n\n\n\n\n\n\n\nPCB Pinout", 
            "title": "GL-AR750 Series"
        }, 
        {
            "location": "/hardware/ar750/#gl-ar750-travel-ac-router", 
            "text": "The first dual-band AC travel router. We added one more Ethernet port (totally 3) so that it fit better for fixed usage scenario as well. It has a MicroSD (TF) slot which increase your storage space up to 128GB.  It has PoE options which is the best choice for affordable wifi coverage.  The 2.4G antenna is on the PCB and don't have a uFL connector. While the 5G antenna has uFL connector.", 
            "title": "GL-AR750 Travel AC Router"
        }, 
        {
            "location": "/hardware/ar750/#hardware-specification", 
            "text": "Model  GL-AR750      CPU  QCA9531 650MHz    Memory  DDRII 128MB    Storage  16MB Nor Flash    Interfaces  1 WAN (100Mbps), 2 LANs (100Mbps), 1 USB2.0, 1 Micro USB (power), 1 Reset Button, UART, TF Card Slot (128GB Max.)    Frequency  2.4GHz, 5.8GHz    Transmission Rate  300Mbps (2.4GHz) + 433Mbps (5GHz)    Max. Tx Power  20dBm (2.4GHz)/20dBm(5GHz)    Protocol  802.11 b/g/n/ac    External Drive Format Support  FAT32/NTFS/exFAT/EXT4/EXT3/EXT2    Webcam Support  MJPEG, YUV (not support from firmware v2.27)    DIY Features  UART, GPIO, 3.3V   5V power port    External Antenna Support  No    PoE Module Support  Yes    Power Input  5V/2A    Power Consumption  6W    Dimension, Weight  88mmX68mmX24mm, 66g", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/ar750/#pcb-pinout", 
            "text": "", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/hardware/mifi/", 
            "text": "GL-MiFi\n\n\nGL-MiFi is an innovative 4G LTE router which separate based band and CPU. By doing this  the carrier cannot issue command and control your devices. When using vpn it secures all your devices while travelling. \n\n\nIt has 5000mAh Li-Pol battery inside which works up to 10 hours in 4G mode.\n\n\nIt has 20+ GPIO exposed and it is a great IoT box. \n\n\nPlease choose the correct 4G module for your region.\n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-MiFi\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nAtheros AR9331, @400MHz\n\n\n\n\n\n\nMemory\n\n\nDDRII 64MB\n\n\n\n\n\n\nStorage\n\n\n16MB Nor Flash\n\n\n\n\n\n\nInterfaces\n\n\n1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), Micro SIM Card Slot, TF Card Slot(128Gb Max.), 1 Reset Button, 1 On/Off Switch\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n300Mbps\n\n\n\n\n\n\nMax. Tx Power\n\n\n18dBm\n\n\n\n\n\n\nProtocol\n\n\n802.11 b/g/n\n\n\n\n\n\n\nExternal Drive Format Support\n\n\nFAT32/NTFS/exFAT/EXT4/EXT3/EXT2\n\n\n\n\n\n\nWebcam Support\n\n\nMJPEG, YUV (not support any more from firmware v2.27)\n\n\n\n\n\n\nDIY Features\n\n\nUART, GPIO, 3.3V \n 5V power port, 20+ GPIOs\n\n\n\n\n\n\nExternal Antenna Support\n\n\nYes\n\n\n\n\n\n\n3G/4G Module Support\n\n\n3G/4G LTE (Mini PCIe Modem)\n\n\n\n\n\n\nPower Input\n\n\n5V/2A, Built-in Battery (5000mAh, Optional)\n\n\n\n\n\n\nPower Consumption\n\n\n3W\n\n\n\n\n\n\nDimension, Weight\n\n\n105mmX72mmX27mm, 170g\n\n\n\n\n\n\n\n\nPCB Pinout\n\n\n\n\nPCIe Modem Module List\n\n\n\n\nModem Manager\n\n\nFrom firmware v2.27, GL-MiFi has a modem manager in its UI. The functions include:\n\n\n\n\nDetect carrier and configure modem automatically\n\n\nDisplay signal strength\n\n\nRead and Send SMS\n\n\nIssue AT command and get the result\n\n\n\n\nPlease refer to \nmodem manager page", 
            "title": "GL-MiFi Series"
        }, 
        {
            "location": "/hardware/mifi/#gl-mifi", 
            "text": "GL-MiFi is an innovative 4G LTE router which separate based band and CPU. By doing this  the carrier cannot issue command and control your devices. When using vpn it secures all your devices while travelling.   It has 5000mAh Li-Pol battery inside which works up to 10 hours in 4G mode.  It has 20+ GPIO exposed and it is a great IoT box.   Please choose the correct 4G module for your region.", 
            "title": "GL-MiFi"
        }, 
        {
            "location": "/hardware/mifi/#hardware-specification", 
            "text": "Model  GL-MiFi      CPU  Atheros AR9331, @400MHz    Memory  DDRII 64MB    Storage  16MB Nor Flash    Interfaces  1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), Micro SIM Card Slot, TF Card Slot(128Gb Max.), 1 Reset Button, 1 On/Off Switch    Frequency  2.4GHz    Transmission Rate  300Mbps    Max. Tx Power  18dBm    Protocol  802.11 b/g/n    External Drive Format Support  FAT32/NTFS/exFAT/EXT4/EXT3/EXT2    Webcam Support  MJPEG, YUV (not support any more from firmware v2.27)    DIY Features  UART, GPIO, 3.3V   5V power port, 20+ GPIOs    External Antenna Support  Yes    3G/4G Module Support  3G/4G LTE (Mini PCIe Modem)    Power Input  5V/2A, Built-in Battery (5000mAh, Optional)    Power Consumption  3W    Dimension, Weight  105mmX72mmX27mm, 170g", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/mifi/#pcb-pinout", 
            "text": "", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/hardware/mifi/#pcie-modem-module-list", 
            "text": "", 
            "title": "PCIe Modem Module List"
        }, 
        {
            "location": "/hardware/mifi/#modem-manager", 
            "text": "From firmware v2.27, GL-MiFi has a modem manager in its UI. The functions include:   Detect carrier and configure modem automatically  Display signal strength  Read and Send SMS  Issue AT command and get the result   Please refer to  modem manager page", 
            "title": "Modem Manager"
        }, 
        {
            "location": "/hardware/usb150/", 
            "text": "GL-USB150 Microuter\n\n\nThe smallest travel router ever.\n\n\nGL-USB150 is also named as Microuter. It is the smallest travel router ever. It doesn't has an Ethernet port but it has a USB to Ethernet convetor. So when it is plugged into your PC, it creates a wired network.\n\n\nIt is mainly used to replace the wifi card of your PC or work as repeater. It is a firewall, separating your PC from public wifi networks.\n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-USB150\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nQCA 9331, 400MHz\n\n\n\n\n\n\nMemory\n\n\nDDRII 64MB\n\n\n\n\n\n\nStorage\n\n\n16MB Nor Flash\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n150Mbps\n\n\n\n\n\n\nMax. Tx Power\n\n\n20dBm\n\n\n\n\n\n\nProtocol\n\n\n802.11 b/g/n\n\n\n\n\n\n\nPower Input\n\n\n5V/1A, USB Power Supply\n\n\n\n\n\n\nPower Consumption\n\n\n1W\n\n\n\n\n\n\nDimension, Weight\n\n\n84mmX24mmX11mm, 10g\n\n\n\n\n\n\n\n\nPCB Pinout", 
            "title": "GL-USB150 (Microuter)"
        }, 
        {
            "location": "/hardware/usb150/#gl-usb150-microuter", 
            "text": "The smallest travel router ever.  GL-USB150 is also named as Microuter. It is the smallest travel router ever. It doesn't has an Ethernet port but it has a USB to Ethernet convetor. So when it is plugged into your PC, it creates a wired network.  It is mainly used to replace the wifi card of your PC or work as repeater. It is a firewall, separating your PC from public wifi networks.", 
            "title": "GL-USB150 Microuter"
        }, 
        {
            "location": "/hardware/usb150/#hardware-specification", 
            "text": "Model  GL-USB150      CPU  QCA 9331, 400MHz    Memory  DDRII 64MB    Storage  16MB Nor Flash    Frequency  2.4GHz    Transmission Rate  150Mbps    Max. Tx Power  20dBm    Protocol  802.11 b/g/n    Power Input  5V/1A, USB Power Supply    Power Consumption  1W    Dimension, Weight  84mmX24mmX11mm, 10g", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/usb150/#pcb-pinout", 
            "text": "", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/hardware/b1300/", 
            "text": "GL-B1300 Home AC Router\n\n\nHome WiFi Mesh System \n\n\nB1300 is a powerful home WiFi system. Powered by the newest Qualcomm WiFi SON technology, it provides the best WiFi performances.\n\n\nB1300 has Quad-core CPU which provides very powerful computation. \n\n\nIt has a big 32MB Nor flash which provide enough spaces for your customzied firmware.\n\n\nIt has a Mesh button which is used to paire routers. You don't need an APP for the mesh router any more.\n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-B1300\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nAtheros IPQ4028, Quad-core ARM,717MHz\n\n\n\n\n\n\nMemory\n\n\nDDR3L 256MB\n\n\n\n\n\n\nStorage\n\n\n32MB Nor Flash\n\n\n\n\n\n\nInterfaces\n\n\n1 WAN, 2 LANs 1 USB3.0, 1 Reset Button, 1 Mesh Button\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz / 5GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n400Mbps(2.4GHz) + 867Mbps(5GHz)\n\n\n\n\n\n\nMax. Tx Power\n\n\n20dBm\n\n\n\n\n\n\nProtocol\n\n\n802.11 a/b/g/n/ac\n\n\n\n\n\n\nExternal Drive Format Support\n\n\nFAT32/NTFS/exFAT/EXT4/EXT3/EXT2\n\n\n\n\n\n\nWebcam Support\n\n\nNo\n\n\n\n\n\n\nEthernet Port\n\n\n10/100/1000M\n\n\n\n\n\n\nPower Input\n\n\n12V/1.5A\n\n\n\n\n\n\nPower Consumption\n\n\n7W\n\n\n\n\n\n\nDimension, Weight\n\n\n116mmX116mmX37mm, 270g\n\n\n\n\n\n\n\n\nPCB Pinout\n\n\nB1300 has an internal USB2.0 connector. You can uses this connect to connect various devices inside of the case.", 
            "title": "GL-B1300"
        }, 
        {
            "location": "/hardware/b1300/#gl-b1300-home-ac-router", 
            "text": "Home WiFi Mesh System   B1300 is a powerful home WiFi system. Powered by the newest Qualcomm WiFi SON technology, it provides the best WiFi performances.  B1300 has Quad-core CPU which provides very powerful computation.   It has a big 32MB Nor flash which provide enough spaces for your customzied firmware.  It has a Mesh button which is used to paire routers. You don't need an APP for the mesh router any more.", 
            "title": "GL-B1300 Home AC Router"
        }, 
        {
            "location": "/hardware/b1300/#hardware-specification", 
            "text": "Model  GL-B1300      CPU  Atheros IPQ4028, Quad-core ARM,717MHz    Memory  DDR3L 256MB    Storage  32MB Nor Flash    Interfaces  1 WAN, 2 LANs 1 USB3.0, 1 Reset Button, 1 Mesh Button    Frequency  2.4GHz / 5GHz    Transmission Rate  400Mbps(2.4GHz) + 867Mbps(5GHz)    Max. Tx Power  20dBm    Protocol  802.11 a/b/g/n/ac    External Drive Format Support  FAT32/NTFS/exFAT/EXT4/EXT3/EXT2    Webcam Support  No    Ethernet Port  10/100/1000M    Power Input  12V/1.5A    Power Consumption  7W    Dimension, Weight  116mmX116mmX37mm, 270g", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/b1300/#pcb-pinout", 
            "text": "B1300 has an internal USB2.0 connector. You can uses this connect to connect various devices inside of the case.", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/hardware/6416/", 
            "text": "GL-iNet6416\n\n\nTraditional IoT box\n\n\nGL-iNet6416 is our first generation mini router. It is welcomed by makers and hobbyists, widely used in IoT, home automation and wifi control projects.\n\n\nThis model is discontinued and replaced by our most welcomed AR150 model.\n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-iNet6416\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nQualcomm Atheros 9331, @400MHz\n\n\n\n\n\n\nMemory\n\n\nDDRI 64MB\n\n\n\n\n\n\nStorage\n\n\n16MB Nor Flash\n\n\n\n\n\n\nInterfaces\n\n\n1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n150Mbps\n\n\n\n\n\n\nMax. Tx Power\n\n\n18dBm\n\n\n\n\n\n\nProtocol\n\n\n802.11 b/g/n\n\n\n\n\n\n\nExternal Drive Format Support\n\n\nFAT32/NTFS/exFAT/EXT4/EXT3/EXT2\n\n\n\n\n\n\nWebcam Support\n\n\nMJPEG, YUV\n\n\n\n\n\n\nDIY Features\n\n\nUART, 5GPIO, 3.3V \n 5V power port\n\n\n\n\n\n\nExternal Antenna Support\n\n\nNo\n\n\n\n\n\n\nPoE Module Support\n\n\nNo\n\n\n\n\n\n\nPower Input\n\n\n5V/1A\n\n\n\n\n\n\nPower Consumption\n\n\n1W\n\n\n\n\n\n\nDimension, Weight\n\n\n58mmX58mmX25mm, 39g\n\n\n\n\n\n\n\n\nPCB Pinout\n\n\nNote: The pin headers of GPIO is 2mm.", 
            "title": "GL.iNet6416"
        }, 
        {
            "location": "/hardware/6416/#gl-inet6416", 
            "text": "Traditional IoT box  GL-iNet6416 is our first generation mini router. It is welcomed by makers and hobbyists, widely used in IoT, home automation and wifi control projects.  This model is discontinued and replaced by our most welcomed AR150 model.", 
            "title": "GL-iNet6416"
        }, 
        {
            "location": "/hardware/6416/#hardware-specification", 
            "text": "Model  GL-iNet6416      CPU  Qualcomm Atheros 9331, @400MHz    Memory  DDRI 64MB    Storage  16MB Nor Flash    Interfaces  1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button    Frequency  2.4GHz    Transmission Rate  150Mbps    Max. Tx Power  18dBm    Protocol  802.11 b/g/n    External Drive Format Support  FAT32/NTFS/exFAT/EXT4/EXT3/EXT2    Webcam Support  MJPEG, YUV    DIY Features  UART, 5GPIO, 3.3V   5V power port    External Antenna Support  No    PoE Module Support  No    Power Input  5V/1A    Power Consumption  1W    Dimension, Weight  58mmX58mmX25mm, 39g", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/6416/#pcb-pinout", 
            "text": "Note: The pin headers of GPIO is 2mm.", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/hardware/ar300/", 
            "text": "GL-AR300 Router\n\n\nBusiness grade home router.\n\n\nAR300 is our first business grade home router. It has signal amplifier which provide the best coverage.\n\n\nDue to is high cost we discontinued this model. Firmware is not updated anymore. \n\n\nHardware Specification\n\n\n\n\n\n\n\n\nModel\n\n\nGL-AR300\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nAtheros 9344 560MHz\n\n\n\n\n\n\nMemory\n\n\nDDRII 128MB\n\n\n\n\n\n\nStorage\n\n\n16MB Nor Flash\n\n\n\n\n\n\nInterfaces\n\n\n1 WAN, 4 LANs 2 USB2.0, 1 Micro SD Slot (128GB Max.), 1 Reset Button\n\n\n\n\n\n\nFrequency\n\n\n2.4GHz\n\n\n\n\n\n\nTransmission Rate\n\n\n300Mbps\n\n\n\n\n\n\nMax. Tx Power\n\n\n21dBm\n\n\n\n\n\n\nProtocol\n\n\n802.11 b/g/n\n\n\n\n\n\n\nExternal Drive Format Support\n\n\nFAT32/NTFS/exFAT/EXT4/EXT3/EXT2\n\n\n\n\n\n\nWebcam Support\n\n\nMJPEG, YUV\n\n\n\n\n\n\nDIY Features\n\n\nSPI, JTAG, UART, GPIOs\n\n\n\n\n\n\nExternal Antenna Support\n\n\n2 X 5dBi Antenna\n\n\n\n\n\n\nPoE Module Support\n\n\nYes\n\n\n\n\n\n\nPower Input\n\n\n12V/2A\n\n\n\n\n\n\nPower Consumption\n\n\n6W\n\n\n\n\n\n\nDimension, Weight\n\n\n170mmX130mmX35mm, 105g\n\n\n\n\n\n\n\n\nPCB Pinout", 
            "title": "GL-AR300"
        }, 
        {
            "location": "/hardware/ar300/#gl-ar300-router", 
            "text": "Business grade home router.  AR300 is our first business grade home router. It has signal amplifier which provide the best coverage.  Due to is high cost we discontinued this model. Firmware is not updated anymore.", 
            "title": "GL-AR300 Router"
        }, 
        {
            "location": "/hardware/ar300/#hardware-specification", 
            "text": "Model  GL-AR300      CPU  Atheros 9344 560MHz    Memory  DDRII 128MB    Storage  16MB Nor Flash    Interfaces  1 WAN, 4 LANs 2 USB2.0, 1 Micro SD Slot (128GB Max.), 1 Reset Button    Frequency  2.4GHz    Transmission Rate  300Mbps    Max. Tx Power  21dBm    Protocol  802.11 b/g/n    External Drive Format Support  FAT32/NTFS/exFAT/EXT4/EXT3/EXT2    Webcam Support  MJPEG, YUV    DIY Features  SPI, JTAG, UART, GPIOs    External Antenna Support  2 X 5dBi Antenna    PoE Module Support  Yes    Power Input  12V/2A    Power Consumption  6W    Dimension, Weight  170mmX130mmX35mm, 105g", 
            "title": "Hardware Specification"
        }, 
        {
            "location": "/hardware/ar300/#pcb-pinout", 
            "text": "", 
            "title": "PCB Pinout"
        }, 
        {
            "location": "/setup/first-time_setup/", 
            "text": "Getting Start with GL.iNet Router\n\n\n1. Power on\n\n\nFor Mini Router series (MT300N, MT300A, AR150, AR300M), you need to use a standard USB 5V/1A power adapter..\n\n\nFor GL-MiFi, GL-AR750, B1300, you have to use a standard 5V/2A power adapter in order to ensure a sufficient power supply.\n\n\n2. Connect\n\n\nYou can connect your device to the router via Ethernet cable or Wi-Fi,\n\n\nWired connection:\n\n\nConnect your device to the LAN port of the router via Ethernet cable.\n\n\nWireless connection:\n\n\nSearch for the SSID of the router in your device and input the default password: \ngoodlife\n in order to connect.\n\n\nnote: The SSID should be printed on the bottom label of the router with the following format:\n\n\nGL-iNet-xxx\n  GL-MT300N-XXX\n  GL-MT300A-XXX\n  GL-AR150-XXX\n  GL-AR300M-XXX\n  GL-USB150-XXX\n  GL-AR750-XXX\n  GL-MIFI-XXX\n  GL-B1300-XXX\n\n\n3. Access the Web Admin Page\n\n\nOpen a browser (we recommend Chrome, firefox) and visit \nhttp://192.168.8.1\n You will see the welcome page. \n\n\n1) Language Setting\n\n\nYou need to select your language. Currently, the web admin page of all our routers only provide \nChinese\n and \nEnglish\n.\n\n\nNote: If your browser always redirect to Luci (http://192.168.8.1/cgi-bin/luci), you can visit: \nhttp://192.168.8.1/index.html\n\n\n2) Timezone Setting\n\n\nYou need to select your region. You can click on the map or select from the drop-down menu.\n\n\n\n\n3) Admin Password Setting\n\n\nYou have to set your own password for this web admin page and click \nFinish\n. There is no default password. The password should not less than 8 characters.\n\n\n\n\nNote: This password is for this web admin page and the embedded Linux system. It doesn't change your Wi-Fi password.\n\n\n3) Access Admin Page\n\n\nYou will be directed to the index of the web admin page.\n\n\n\n\nDiscussions", 
            "title": "First-time Setup"
        }, 
        {
            "location": "/setup/first-time_setup/#getting-start-with-glinet-router", 
            "text": "", 
            "title": "Getting Start with GL.iNet Router"
        }, 
        {
            "location": "/setup/first-time_setup/#1-power-on", 
            "text": "For Mini Router series (MT300N, MT300A, AR150, AR300M), you need to use a standard USB 5V/1A power adapter..  For GL-MiFi, GL-AR750, B1300, you have to use a standard 5V/2A power adapter in order to ensure a sufficient power supply.", 
            "title": "1. Power on"
        }, 
        {
            "location": "/setup/first-time_setup/#2-connect", 
            "text": "You can connect your device to the router via Ethernet cable or Wi-Fi,", 
            "title": "2. Connect"
        }, 
        {
            "location": "/setup/first-time_setup/#wired-connection", 
            "text": "Connect your device to the LAN port of the router via Ethernet cable.", 
            "title": "Wired connection:"
        }, 
        {
            "location": "/setup/first-time_setup/#wireless-connection", 
            "text": "Search for the SSID of the router in your device and input the default password:  goodlife  in order to connect.  note: The SSID should be printed on the bottom label of the router with the following format:  GL-iNet-xxx\n  GL-MT300N-XXX\n  GL-MT300A-XXX\n  GL-AR150-XXX\n  GL-AR300M-XXX\n  GL-USB150-XXX\n  GL-AR750-XXX\n  GL-MIFI-XXX\n  GL-B1300-XXX", 
            "title": "Wireless connection:"
        }, 
        {
            "location": "/setup/first-time_setup/#3-access-the-web-admin-page", 
            "text": "Open a browser (we recommend Chrome, firefox) and visit  http://192.168.8.1  You will see the welcome page.", 
            "title": "3. Access the Web Admin Page"
        }, 
        {
            "location": "/setup/first-time_setup/#1-language-setting", 
            "text": "You need to select your language. Currently, the web admin page of all our routers only provide  Chinese  and  English .  Note: If your browser always redirect to Luci (http://192.168.8.1/cgi-bin/luci), you can visit:  http://192.168.8.1/index.html", 
            "title": "1) Language Setting"
        }, 
        {
            "location": "/setup/first-time_setup/#2-timezone-setting", 
            "text": "You need to select your region. You can click on the map or select from the drop-down menu.", 
            "title": "2) Timezone Setting"
        }, 
        {
            "location": "/setup/first-time_setup/#3-admin-password-setting", 
            "text": "You have to set your own password for this web admin page and click  Finish . There is no default password. The password should not less than 8 characters.   Note: This password is for this web admin page and the embedded Linux system. It doesn't change your Wi-Fi password.", 
            "title": "3) Admin Password Setting"
        }, 
        {
            "location": "/setup/first-time_setup/#3-access-admin-page", 
            "text": "You will be directed to the index of the web admin page.", 
            "title": "3) Access Admin Page"
        }, 
        {
            "location": "/setup/first-time_setup/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/setup/internet_setting/", 
            "text": "Internet Setting\n\n\nThere are total 4 different connection methods that you can use to access the Internet:\n\n\n1)  Cable\n\n\n2)   Wireless / Wi-Fi Repeater\n\n\n3)   3G/4G Modem\n\n\n4)   USB Tethering\n\n\n\n\nYou can click \nNew Connection\n to create an Internet connection.\n\n\nCable\n\n\nDHCP\n\n\nDHCP is the default and most common method to connect to the Internet. You just need to choose \nDHCP\n and click \nSubmit\n.\n\n\n\n\nStatic\n\n\nStatic is required if you want your router have a fixed IP address given by your ISP or in the same subnet of your main router.\n\n\nThe current settings will be automatically filled. Change it according to your needs, then click \nSubmit\n.\n\n\n\n\nPPPoE\n\n\nPPPoE is required by many Internet service providers (ISP). Generally, your ISP will give you a modem and provide you a username and password that you are required to enter so as to access the Internet.\n\n\nEnter your username and password then click \nSubmit\n.\n\n\n\n\nRepeater\n\n\nYou can connect to an existing wireless network by setting it as a repeater. However, there are 2 different modes that you can choose. \n\n\nWISP\n\n\nIn WISP (Wireless Internet Service Provider) mode, the router will create its own subnet and act as a firewall which protect you from the public network. Therefore, we highly suggest you to chose WISP if you want to connect to a  public wifi.\n\n\nIn the following diagram, your main router has an IP 192.168.1.1. Suppose its netmask is 255.255.255.0, GL.iNet router will have two IP address:\n\n\n192.168.1.99\n which is obtained from your main router\n\n\n192.168.8.1\n which is created by itself\n\n\nSo all your devices connected to GL.iNet router will be protected by its firewall.\n\n\n\n\nTo set up repeater in WISP mode, first Click \nRepeater\n tab in \nInternet Settings\n, the router will search for the available Wi-Fi networks automatically. Then, choose a SSID and enter its password. Choose \nWISP\n in mode and click \nSubmit\n.\n\n\n\n\nWDS\n\n\nIn WDS (Wireless Distribution System), you can connect to an existing wireless network without creating a new subnet. Therefore, the router only act as a device to extend the wireless signal coverage of your main router. There is no firewall between the mini router and the main router.\n\n\nHowever, to use this mode, \nyour main router has to support WDS. Since WDS has different implementation, you'd be better to use the same GL.iNet router\n. Check your main router's manual to see if it supports this function.\n\n\nNote: OpenVPN client function of the mini router will not work in bridge mode.\n\n\n\n\nTo set up repeater in WDS mode, first, \nensure your main router supports WDS.\n Click \nRepeater\n tab in \nInternet Settings\n, the router will search for the available Wi-Fi networks automatically. Then, choose a SSID and enter its password. Choose \nWDS\n in mode and you can enter the LAN IP which will be used to access this router.\n\n\nThis LAN IP should be within the subnet of your main router, but it cannot conflict with any other devices's IP within the same subnet.\n\n\nIf you are not sure, just keep the LAN IP blank so that it will get a IP address from your main router automatically. However, you need to find out this IP in the admin UI of your main router if you want to access the web UI of GL.iNet router again.\n\n\nRelayd\n\n\nIn case your main router doesn't support WDS, you can create a WISP connection first, then set up a relayd overlay.\n\n\nHere is the \ndetailed instructions\n.\n\n\n3G/4G Modem\n\n\nYou can connect to the Internet using 3G or 4G modem. Plug in your modem and click the \n3G/4G\n tab in \nInternet Settings\n to enter the 3G/4G setting page. \n\n\nTo set up 3G/4G modem in \nGL-MiFi\n, you should follow the instructions in \nModem Manager\n.\n\n\n\n\nThe router has pre-configured values. You can choose \nCountry/Region\n,  \nService Provider\n first. The values below will be filled automatically. But this is not necessary if you know the settings. If you found that the data is not updated, please \nwrite to us\n.\n\n\nTo make the correct settings:\n\n\n\n\nModem device\n: Please choose \n/dev/cdc-wdm0\n if this modem support QMI, otherwise you need to choose \nttyUSB*\n. There may be several \nttyUSB\n from 1 to 3. You need to choose the correct one based on modem spec.\n\n\nService Type\n: This is needed for 3G connection only. For 4G connection, this setting is not necessary.\n\n\nAPN\n: This is the most important setting, check your ISP for the correct setting.\n\n\nDial Number\n: Generally, it is a default value and you don't need to set it by yourself. However, if you have this info, please input it.\n\n\nPin, Username and Password:\n Generally, these informations are not necessary for a unlocked SIM card. However, if you have a locked SIM card, please find these informations from your carrier.\n\n\n\n\nNote: Some modems work in host-less mode. If your modem cannot be detected in this setting page, you can click \ntethering\n to find you device.\n\n\nExample (US Verizon)\n\n\n\n\nCompatible Modems\n\n\nHere is a list of supported modems that we tested before. \n\n\nQMI\n\n\nThis modem supports QMI mode. Please choose \n/dev/cdc-wdm0\n in \n3/4G\n settings.\n\n\nHostless\n\n\nThis modem supports tethering mode, please set up by using tethering but not 3/4G.\n\n\n\n\n\n\n\n\nModel\n\n\n3G/4G\n\n\nTested\n\n\nTested by\n\n\nComments\n\n\n\n\n\n\n\n\n\n\nQuectel EC20-E, EC20-A, EC20-C\n\n\n4G\n\n\nYes\n\n\nGL.iNet\n\n\n\n\n\n\n\n\nQuectel EC25-E, EC25-A, EC25-V, EC25-C\n\n\n4G\n\n\nYes\n\n\nGL.iNet\n\n\n\n\n\n\n\n\nQuectel UC20-E\n\n\n3G\n\n\nYes\n\n\nGL.iNet\n\n\n\n\n\n\n\n\nZTE ME909s-821\n\n\n4G\n\n\nYes\n\n\nGL.iNet\n\n\n\n\n\n\n\n\nHuawei E1550\n\n\n3G\n\n\nYes\n\n\nGL.iNet\n\n\n\n\n\n\n\n\nHuawei E3276\n\n\n4G\n\n\nYes\n\n\nGL.iNet\n\n\n\n\n\n\n\n\nTP-Link MA260\n\n\n3G\n\n\nYes\n\n\nGL.iNet\n\n\n\n\n\n\n\n\nZTE M823\n\n\n4G\n\n\nYes\n\n\nArnas Risqianto\n\n\n\n\n\n\n\n\nZTE MF190\n\n\n3G\n\n\nYes\n\n\nArnas Risqianto\n\n\n\n\n\n\n\n\nHuawei E3372\n\n\n4G\n\n\nYes\n\n\nanonymous\n\n\n\n\n\n\n\n\nPantech UML290VW (Verizon)\n\n\n4G\n\n\nYes\n\n\nGL.iNet/steven\n\n\nQMI\n\n\n\n\n\n\nPantech UML295 (Verizon)\n\n\n4G\n\n\nYes\n\n\nGL.iNet/steven\n\n\nhostless\n\n\n\n\n\n\nNovatel USB551L (Verizon)\n\n\n4G\n\n\nYes\n\n\nGL.iNet/steven\n\n\nQMI\n\n\n\n\n\n\nVerizon U620L (Verizon)\n\n\n4G\n\n\nYes\n\n\n\n\nhostles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou can also refer to \nhttp://ofmodemsandmen.com/modems.html\n for a well supported modem list.\n\n\nTethering\n\n\nIf your modem works in host-less mode or you want to share the data of your smartphone, you can use \nTethering\n. \n\n\nFor host-less modem tethering, plug it into the USB port of GL.iNet router. Then, you should be able to find the device under the Phone Device list.\n\n\nFor smartphone tethering, connect it to the USB port of GL.iNet router and click Trust to continue when the message pops up in your smartphone. Then, turn on the personal hotspot of your phone. Finally, choose it from the Phone Device list.\n\n\nNote: A newly-added phone of host-less modem will be named beginning with \neth\nor \nusb\n. For example, \neht2\n, \nusb0\n.\n\n\n\n\nEasyTether\n\n\nSome carriers prohibit the sharing of the data and you may not able to use tethering. However, you can try \neasytethering\n. \n\n\nNote: Easytether is not a free service and we have no affiliate with them.\n\n\nDiscussions", 
            "title": "Internet Settings"
        }, 
        {
            "location": "/setup/internet_setting/#internet-setting", 
            "text": "There are total 4 different connection methods that you can use to access the Internet:  1)  Cable  2)   Wireless / Wi-Fi Repeater  3)   3G/4G Modem  4)   USB Tethering   You can click  New Connection  to create an Internet connection.", 
            "title": "Internet Setting"
        }, 
        {
            "location": "/setup/internet_setting/#cable", 
            "text": "", 
            "title": "Cable"
        }, 
        {
            "location": "/setup/internet_setting/#dhcp", 
            "text": "DHCP is the default and most common method to connect to the Internet. You just need to choose  DHCP  and click  Submit .", 
            "title": "DHCP"
        }, 
        {
            "location": "/setup/internet_setting/#static", 
            "text": "Static is required if you want your router have a fixed IP address given by your ISP or in the same subnet of your main router.  The current settings will be automatically filled. Change it according to your needs, then click  Submit .", 
            "title": "Static"
        }, 
        {
            "location": "/setup/internet_setting/#pppoe", 
            "text": "PPPoE is required by many Internet service providers (ISP). Generally, your ISP will give you a modem and provide you a username and password that you are required to enter so as to access the Internet.  Enter your username and password then click  Submit .", 
            "title": "PPPoE"
        }, 
        {
            "location": "/setup/internet_setting/#repeater", 
            "text": "You can connect to an existing wireless network by setting it as a repeater. However, there are 2 different modes that you can choose.", 
            "title": "Repeater"
        }, 
        {
            "location": "/setup/internet_setting/#wisp", 
            "text": "In WISP (Wireless Internet Service Provider) mode, the router will create its own subnet and act as a firewall which protect you from the public network. Therefore, we highly suggest you to chose WISP if you want to connect to a  public wifi.  In the following diagram, your main router has an IP 192.168.1.1. Suppose its netmask is 255.255.255.0, GL.iNet router will have two IP address:  192.168.1.99  which is obtained from your main router  192.168.8.1  which is created by itself  So all your devices connected to GL.iNet router will be protected by its firewall.   To set up repeater in WISP mode, first Click  Repeater  tab in  Internet Settings , the router will search for the available Wi-Fi networks automatically. Then, choose a SSID and enter its password. Choose  WISP  in mode and click  Submit .", 
            "title": "WISP"
        }, 
        {
            "location": "/setup/internet_setting/#wds", 
            "text": "In WDS (Wireless Distribution System), you can connect to an existing wireless network without creating a new subnet. Therefore, the router only act as a device to extend the wireless signal coverage of your main router. There is no firewall between the mini router and the main router.  However, to use this mode,  your main router has to support WDS. Since WDS has different implementation, you'd be better to use the same GL.iNet router . Check your main router's manual to see if it supports this function.  Note: OpenVPN client function of the mini router will not work in bridge mode.   To set up repeater in WDS mode, first,  ensure your main router supports WDS.  Click  Repeater  tab in  Internet Settings , the router will search for the available Wi-Fi networks automatically. Then, choose a SSID and enter its password. Choose  WDS  in mode and you can enter the LAN IP which will be used to access this router.  This LAN IP should be within the subnet of your main router, but it cannot conflict with any other devices's IP within the same subnet.  If you are not sure, just keep the LAN IP blank so that it will get a IP address from your main router automatically. However, you need to find out this IP in the admin UI of your main router if you want to access the web UI of GL.iNet router again.  Relayd  In case your main router doesn't support WDS, you can create a WISP connection first, then set up a relayd overlay.  Here is the  detailed instructions .", 
            "title": "WDS"
        }, 
        {
            "location": "/setup/internet_setting/#3g4g-modem", 
            "text": "You can connect to the Internet using 3G or 4G modem. Plug in your modem and click the  3G/4G  tab in  Internet Settings  to enter the 3G/4G setting page.   To set up 3G/4G modem in  GL-MiFi , you should follow the instructions in  Modem Manager .   The router has pre-configured values. You can choose  Country/Region ,   Service Provider  first. The values below will be filled automatically. But this is not necessary if you know the settings. If you found that the data is not updated, please  write to us .  To make the correct settings:   Modem device : Please choose  /dev/cdc-wdm0  if this modem support QMI, otherwise you need to choose  ttyUSB* . There may be several  ttyUSB  from 1 to 3. You need to choose the correct one based on modem spec.  Service Type : This is needed for 3G connection only. For 4G connection, this setting is not necessary.  APN : This is the most important setting, check your ISP for the correct setting.  Dial Number : Generally, it is a default value and you don't need to set it by yourself. However, if you have this info, please input it.  Pin, Username and Password:  Generally, these informations are not necessary for a unlocked SIM card. However, if you have a locked SIM card, please find these informations from your carrier.   Note: Some modems work in host-less mode. If your modem cannot be detected in this setting page, you can click  tethering  to find you device.", 
            "title": "3G/4G Modem"
        }, 
        {
            "location": "/setup/internet_setting/#example-us-verizon", 
            "text": "", 
            "title": "Example (US Verizon)"
        }, 
        {
            "location": "/setup/internet_setting/#compatible-modems", 
            "text": "Here is a list of supported modems that we tested before.", 
            "title": "Compatible Modems"
        }, 
        {
            "location": "/setup/internet_setting/#qmi", 
            "text": "This modem supports QMI mode. Please choose  /dev/cdc-wdm0  in  3/4G  settings.", 
            "title": "QMI"
        }, 
        {
            "location": "/setup/internet_setting/#hostless", 
            "text": "This modem supports tethering mode, please set up by using tethering but not 3/4G.     Model  3G/4G  Tested  Tested by  Comments      Quectel EC20-E, EC20-A, EC20-C  4G  Yes  GL.iNet     Quectel EC25-E, EC25-A, EC25-V, EC25-C  4G  Yes  GL.iNet     Quectel UC20-E  3G  Yes  GL.iNet     ZTE ME909s-821  4G  Yes  GL.iNet     Huawei E1550  3G  Yes  GL.iNet     Huawei E3276  4G  Yes  GL.iNet     TP-Link MA260  3G  Yes  GL.iNet     ZTE M823  4G  Yes  Arnas Risqianto     ZTE MF190  3G  Yes  Arnas Risqianto     Huawei E3372  4G  Yes  anonymous     Pantech UML290VW (Verizon)  4G  Yes  GL.iNet/steven  QMI    Pantech UML295 (Verizon)  4G  Yes  GL.iNet/steven  hostless    Novatel USB551L (Verizon)  4G  Yes  GL.iNet/steven  QMI    Verizon U620L (Verizon)  4G  Yes   hostles            You can also refer to  http://ofmodemsandmen.com/modems.html  for a well supported modem list.", 
            "title": "Hostless"
        }, 
        {
            "location": "/setup/internet_setting/#tethering", 
            "text": "If your modem works in host-less mode or you want to share the data of your smartphone, you can use  Tethering .   For host-less modem tethering, plug it into the USB port of GL.iNet router. Then, you should be able to find the device under the Phone Device list.  For smartphone tethering, connect it to the USB port of GL.iNet router and click Trust to continue when the message pops up in your smartphone. Then, turn on the personal hotspot of your phone. Finally, choose it from the Phone Device list.  Note: A newly-added phone of host-less modem will be named beginning with  eth or  usb . For example,  eht2 ,  usb0 .", 
            "title": "Tethering"
        }, 
        {
            "location": "/setup/internet_setting/#easytether", 
            "text": "Some carriers prohibit the sharing of the data and you may not able to use tethering. However, you can try  easytethering .   Note: Easytether is not a free service and we have no affiliate with them.", 
            "title": "EasyTether"
        }, 
        {
            "location": "/setup/internet_setting/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/setup/mac_clone/", 
            "text": "MAC Clone\n\n\nClone MAC address is used especially in hotels, hotspot etc when the server checks your mac address. For example, if you got your smartphone registered on the network, you can clone your smartphone's mac address to the router so that the router can connect.\n\n\nClieck the \nClone Mac\n button and you will have the following interface.\n\n\n\n\nYour current mac address will be displayed in \nWAN MAC Address\n. You can click \nClone\n to copy your device's mac address or click \nRestore\n to restore the factory set mac.\n\n\nDon't forget clicking \nApply\n and wait some seconds for it to take effect.\n\n\nDiscussions", 
            "title": "MAC Clone"
        }, 
        {
            "location": "/setup/mac_clone/#mac-clone", 
            "text": "Clone MAC address is used especially in hotels, hotspot etc when the server checks your mac address. For example, if you got your smartphone registered on the network, you can clone your smartphone's mac address to the router so that the router can connect.  Clieck the  Clone Mac  button and you will have the following interface.   Your current mac address will be displayed in  WAN MAC Address . You can click  Clone  to copy your device's mac address or click  Restore  to restore the factory set mac.  Don't forget clicking  Apply  and wait some seconds for it to take effect.", 
            "title": "MAC Clone"
        }, 
        {
            "location": "/setup/mac_clone/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/setup/dns/", 
            "text": "Custom DNS Server\n\n\nYou can set up custom DNS server for the router in order to prevent DNS leak or other purposes.\n\n\nClick Internet icon and you will see the Internet Status.\n\n\n\n\nClick \nDNS Settings\n to input custom DNS server IP address. You can input maximum two DNS servers.\n\n\nCheck \nForce all clients to use\n will capture the DNS request from all connected clients. For example Google Chrome cast. This option does not need to be used with custom DNS server.\n\n\nIf you are connecting to a network which requires authentication in Captive Portal page. It may not be able to pop up because of DNS problems. As a result, your browser will show you that the DNS cannot be resolved. In this case, you have to uncheck \nRebind Protection\n in \nDNS Settings\n.\n\n\nNote: You may need to reconnect the network in order to activate your DNS settings.\n\n\n\n\nDiscussions", 
            "title": "DNS Setting"
        }, 
        {
            "location": "/setup/dns/#custom-dns-server", 
            "text": "You can set up custom DNS server for the router in order to prevent DNS leak or other purposes.  Click Internet icon and you will see the Internet Status.   Click  DNS Settings  to input custom DNS server IP address. You can input maximum two DNS servers.  Check  Force all clients to use  will capture the DNS request from all connected clients. For example Google Chrome cast. This option does not need to be used with custom DNS server.  If you are connecting to a network which requires authentication in Captive Portal page. It may not be able to pop up because of DNS problems. As a result, your browser will show you that the DNS cannot be resolved. In this case, you have to uncheck  Rebind Protection  in  DNS Settings .  Note: You may need to reconnect the network in order to activate your DNS settings.", 
            "title": "Custom DNS Server"
        }, 
        {
            "location": "/setup/dns/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/setup/repeater_manager/", 
            "text": "Repeater Manager\n\n\nAll GL.iNet routers are equipped with repeater manager. When you use GL.iNet router as a repeater, repeater manager can enable the following features:\n\n\nManage Saved Stations\n\n\nAll repeater stations (WISP/WDS) you connected to will be saved in the router. You can choose if they will be auto connected to or not.\n\n\n\n\nAuto Search for Available Saved Stations\n\n\nThe router will search among all saved stations and try to connect a valid station. If none of the saved stations can be connected, the router will disable sta mode to ensure your AP is ON\n\n\n\n\nDiscussions", 
            "title": "Repeater Manager"
        }, 
        {
            "location": "/setup/repeater_manager/#repeater-manager", 
            "text": "All GL.iNet routers are equipped with repeater manager. When you use GL.iNet router as a repeater, repeater manager can enable the following features:", 
            "title": "Repeater Manager"
        }, 
        {
            "location": "/setup/repeater_manager/#manage-saved-stations", 
            "text": "All repeater stations (WISP/WDS) you connected to will be saved in the router. You can choose if they will be auto connected to or not.", 
            "title": "Manage Saved Stations"
        }, 
        {
            "location": "/setup/repeater_manager/#auto-search-for-available-saved-stations", 
            "text": "The router will search among all saved stations and try to connect a valid station. If none of the saved stations can be connected, the router will disable sta mode to ensure your AP is ON", 
            "title": "Auto Search for Available Saved Stations"
        }, 
        {
            "location": "/setup/repeater_manager/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/setup/lan_ip/", 
            "text": "LAN IP Setting\n\n\nLAN IP is the IP address you will use to connect to this router. If it conflicts with your main router, you can change it in the UI.\n\n\nDefault LAN IP\n\n\nThe default IP address of GL.iNet router is 192.168.8.1. \n\n\nChange LAN IP\n\n\nHowever, you can change the LAN IP address in the web admin page.Most of the routers use IP \n192.168.0.1\n, \n192.168.1,1\n, \n192.168.1.254\n, \n10.10.1.1\n etc. and subnet \n255.255.255.0\n (\n/24\n). If you want to connect GL.iNet router to another network, you have to ensure they have different IP address. Otherwise, you need to change the LAN IP of GL.iNet routers.\n\n\nClick the \nwireless icon\n and then \nLAN IP\n to change the LAN IP.\n\n\n\n\nDiscussions", 
            "title": "LAN IP"
        }, 
        {
            "location": "/setup/lan_ip/#lan-ip-setting", 
            "text": "LAN IP is the IP address you will use to connect to this router. If it conflicts with your main router, you can change it in the UI.", 
            "title": "LAN IP Setting"
        }, 
        {
            "location": "/setup/lan_ip/#default-lan-ip", 
            "text": "The default IP address of GL.iNet router is 192.168.8.1.", 
            "title": "Default LAN IP"
        }, 
        {
            "location": "/setup/lan_ip/#change-lan-ip", 
            "text": "However, you can change the LAN IP address in the web admin page.Most of the routers use IP  192.168.0.1 ,  192.168.1,1 ,  192.168.1.254 ,  10.10.1.1  etc. and subnet  255.255.255.0  ( /24 ). If you want to connect GL.iNet router to another network, you have to ensure they have different IP address. Otherwise, you need to change the LAN IP of GL.iNet routers.  Click the  wireless icon  and then  LAN IP  to change the LAN IP.", 
            "title": "Change LAN IP"
        }, 
        {
            "location": "/setup/lan_ip/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/setup/wifi_setting/", 
            "text": "Wireless Settings\n\n\nTurn On or Off the Radio\n\n\nYou can turn on or off the radio from the wen admin page by the switch beside the wireless icon.\n\n\n\n\nWireless Status\n\n\nYou can click the \nwireless icon\n to check the wireless status.\n\n\nThere are two parts in the wireless status. The first part is \nRadio information\n. The second part is \nInterface (Virtual AP) information\n.\n\n\nA single router may have one or more radio and one device can have multiple Virtual interfaces.\n\n\nIn this example, the channel is \n6\n and tx power is \n20\n. We have one AP interface with SSID \nGL-MT300M-164\n.\n\n\n\n\nWireless Settings\n\n\nClick the \nSetting\n button, you can change the wireless settings:\n\n\nMode\n: Change from 802.11 b/g/n, etc.\n\n\nChannel\n: The router will not choose the best channel itself. You need to choose one channel manually. You will have different choices based on the region you selected. In US, you can choose from 1 to 11. In China and EU, you can choose from 1 to 13. If you are using repeater, the channel will be fixed according to the main router.\n\n\nSSID\n: Change the name of the Wi-Fi. It is not suggested to use unicode characters such as \nChinese\n.\n\n\nEncryption\n: You can only choose from WPA, WPA2 or WPA-Mixed. You cannot choose WEP or open because it is insecure. If you want to use WEP or you don't need a password, you can configure in Advanced settings (Luci).\n\n\nPassword\n: If you keep the password value empty, it will use the old password. It must be at least 8 characters. We suggest you to change the Wi-Fi password when you get the router.\n\n\n\n\nDiscussions", 
            "title": "Wi-Fi Settings (AP)"
        }, 
        {
            "location": "/setup/wifi_setting/#wireless-settings", 
            "text": "", 
            "title": "Wireless Settings"
        }, 
        {
            "location": "/setup/wifi_setting/#turn-on-or-off-the-radio", 
            "text": "You can turn on or off the radio from the wen admin page by the switch beside the wireless icon.", 
            "title": "Turn On or Off the Radio"
        }, 
        {
            "location": "/setup/wifi_setting/#wireless-status", 
            "text": "You can click the  wireless icon  to check the wireless status.  There are two parts in the wireless status. The first part is  Radio information . The second part is  Interface (Virtual AP) information .  A single router may have one or more radio and one device can have multiple Virtual interfaces.  In this example, the channel is  6  and tx power is  20 . We have one AP interface with SSID  GL-MT300M-164 .", 
            "title": "Wireless Status"
        }, 
        {
            "location": "/setup/wifi_setting/#wireless-settings_1", 
            "text": "Click the  Setting  button, you can change the wireless settings:  Mode : Change from 802.11 b/g/n, etc.  Channel : The router will not choose the best channel itself. You need to choose one channel manually. You will have different choices based on the region you selected. In US, you can choose from 1 to 11. In China and EU, you can choose from 1 to 13. If you are using repeater, the channel will be fixed according to the main router.  SSID : Change the name of the Wi-Fi. It is not suggested to use unicode characters such as  Chinese .  Encryption : You can only choose from WPA, WPA2 or WPA-Mixed. You cannot choose WEP or open because it is insecure. If you want to use WEP or you don't need a password, you can configure in Advanced settings (Luci).  Password : If you keep the password value empty, it will use the old password. It must be at least 8 characters. We suggest you to change the Wi-Fi password when you get the router.", 
            "title": "Wireless Settings"
        }, 
        {
            "location": "/setup/wifi_setting/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/setup/firmware/", 
            "text": "Upgrade Firmware\n\n\nThis guide includes upgrading firmware from a stock firmware. If you want to check upgrading firmware using uboot web failsafe, please check troubleshooting page.\n\n\nFirmware Introduction\n\n\nThe firmware is under continuous development to include new features, fix bugs and improve user experience, etc. We will release new firmware frequently. When you receive the device, you have get a GL.iNet router with an old firmware version. Please upgrade to the latest firmware immediately.\n\n\nNew Firmware Notification\n\n\nA \nnew\n message will be shown when there is a new firmware available. Click the Firmware icon to check your current firmware version or perform other setting. You can enable the \nAuto Update\n option to upgrade automatically if it finds a newer firmware version. \n\n\nNote: \nDon't turn off\n the power during upgrade. Otherwise, the router will be bricked\n\n\n\n\nDownload Firmware\n\n\nDownload firmware automatically\n\n\nYou can also download firmware from the web admin page. Click \nDownload\n to download the firmware. The downloaded file will be verified automatically. Next, you will have a \nUpgrade\n button to upgrade the firmware.\n\n\nNote: It is suggested to uncheck the \nKeep setting\n. If you keep its settings and encounter problems after the upgrade, please reset the device.\n\n\n\n\nDownload from our official website manaully\n\n\nYou can download the firmware file from our \nwebsite\n. Moreover, we will upload testing firmware files to the \ntesting\n folder before official release.\n\n\nUpload Firmware\n\n\nYou can use the \nUpload Firmware\n button to upload the firmware file. Simply drag and drop your firmware file to the area indicated in the web admin page.\n\n\n\n\nCompile Firmware\n\n\nYou can compile your own firmware or use third-party firmware and upload it to the router. \n\n\nNote: If you uploaded a wrong firmware and bricked the router, please use Uboot to re-install the correct firmware.\n\n\nDiscussions", 
            "title": "Firmware Upgrading"
        }, 
        {
            "location": "/setup/firmware/#upgrade-firmware", 
            "text": "This guide includes upgrading firmware from a stock firmware. If you want to check upgrading firmware using uboot web failsafe, please check troubleshooting page.", 
            "title": "Upgrade Firmware"
        }, 
        {
            "location": "/setup/firmware/#firmware-introduction", 
            "text": "The firmware is under continuous development to include new features, fix bugs and improve user experience, etc. We will release new firmware frequently. When you receive the device, you have get a GL.iNet router with an old firmware version. Please upgrade to the latest firmware immediately.", 
            "title": "Firmware Introduction"
        }, 
        {
            "location": "/setup/firmware/#new-firmware-notification", 
            "text": "A  new  message will be shown when there is a new firmware available. Click the Firmware icon to check your current firmware version or perform other setting. You can enable the  Auto Update  option to upgrade automatically if it finds a newer firmware version.   Note:  Don't turn off  the power during upgrade. Otherwise, the router will be bricked", 
            "title": "New Firmware Notification"
        }, 
        {
            "location": "/setup/firmware/#download-firmware", 
            "text": "", 
            "title": "Download Firmware"
        }, 
        {
            "location": "/setup/firmware/#download-firmware-automatically", 
            "text": "You can also download firmware from the web admin page. Click  Download  to download the firmware. The downloaded file will be verified automatically. Next, you will have a  Upgrade  button to upgrade the firmware.  Note: It is suggested to uncheck the  Keep setting . If you keep its settings and encounter problems after the upgrade, please reset the device.", 
            "title": "Download firmware automatically"
        }, 
        {
            "location": "/setup/firmware/#download-from-our-official-website-manaully", 
            "text": "You can download the firmware file from our  website . Moreover, we will upload testing firmware files to the  testing  folder before official release.", 
            "title": "Download from our official website manaully"
        }, 
        {
            "location": "/setup/firmware/#upload-firmware", 
            "text": "You can use the  Upload Firmware  button to upload the firmware file. Simply drag and drop your firmware file to the area indicated in the web admin page.", 
            "title": "Upload Firmware"
        }, 
        {
            "location": "/setup/firmware/#compile-firmware", 
            "text": "You can compile your own firmware or use third-party firmware and upload it to the router.   Note: If you uploaded a wrong firmware and bricked the router, please use Uboot to re-install the correct firmware.", 
            "title": "Compile Firmware"
        }, 
        {
            "location": "/setup/firmware/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/setup/modem_manager/", 
            "text": "Modem Manager\n\n\nModem manager for MiFi\n\n\nModem manager is the UI to control the modem on MiFi from firmware v2.27. The modem manager can be used to configure modem automatically, read/send SMS or issue AT commands.\n\n\nPlease insert Micro SIM card before you turn on the device.\n\n\n\n\nYou will see \nModem Connection\n in \nInternet Status\n. You can check different information of your GL-MiFi and configure your 3G/4G modem settings.\n\n\nYou can find the following information in \nModem Connection\n:\n\n\nModel\n: The model of your 3G/4G module.\n\n\nIMEI\n: A unique number for your GL-MiFi router.\n\n\nCarrier\n: The service provider of your SIM card.\n\n\n\n\nModem Tools\n\n\nWe have developed a modem tools for you to configure your 3G/4G modem in GL-MiFi easily. Please click \nModem Tools\n.\n\n\n\n\nData\n\n\nThe configuration of Mobile Data should be auto detected by the modem manager. You can also change these settings manaually.\n\n\nInput the correct information in order to activate the 3/4G modem.\n\n\n\n\nModem device\n: Please choose \n/dev/cdc-wdm0\n if this modem support QMI, otherwise you need to choose \nttyUSB*\n. There may be several \nttyUSB\n from 1 to 3. You need to choose the correct one based on modem spec.\n\n\nService Type\n: This is needed for 3G connection only. For 4G connection, this setting is not necessary.\n\n\nAPN\n: This is the most important setting, check your ISP for the correct setting.\n\n\nDial Number\n: Generally, it is a default value and you don't need to set it by yourself. However, if you have this info, please input it.\n\n\nPin, Username and Password:\n Generally, these informations are not necessary for a unlocked SIM card. However, if you have a locked SIM card, please find these informations from your carrier.\n\n\n\n\n\n\nSend SMS\n\n\nYou will be able to use the SIM card in GL-MiFi to send message to others. \n\n\nNote: only support English at this moment. \n \n\n\n\n\nRead SMS\n\n\nYou will be able to use the SIM card in GL-MiFi. Therefore, if someone send a message to the phone number of your SIM card, you can read it in \nRead SMS\n.\n\n\n\n\nAT Tools\n\n\nYou can configure the 3G/4G modem by sending AT command to the router via \nAT Tools\n. You have to use the port \n/dev/ttyUSB2\n for all 3G/4G modules. We have pre-configured several AT commands that you can use directly in \nShortcut\n.\n\n\n\n\nRequest IMEI\n: Request International Mobile Equipment Identity of your MiFi\n\n\nCorrect result:\n\n\nAT+CIMI 460010529708870 OK\n\n\n\n\nWrong result:\n\n\nAT+CIMI ERROR\n\n\n\n\nRequest QCCID\n: Request the CCID number of your SIM card. If you get a number, it means that the connection of your SIM card is OK.\n\n\nCorrect result:\n\n\nAT+QCCID+QCCID: 89860115851079757018 OK\n\n\n\n\nWrong result:\n\n\nAT+CCIDI ERROR\n\n\n\n\nRequest IMSI\n: Request the International Mobile Subscriber Identity associated with your cellular network.\n\n\nCorrect result:\n\n\nAT+CIMI 460010529708870 OK\n\n\n\n\nWrong result:\n\n\nAT+CIMI ERROR\n\n\n\n\nCheck Signal Quality\n:\n\n\nCorrect result:\n\n\n+CSQ: 21,99 OK \n\n\n\n\nThis first number\u2014\u201c21\u201d is the result. We usually get the value number is 18~23.\n\n\nWrong result:\n\n\nAT+CSQ ERROR\n\n\n\n\nReset Modem\n: Reset the modem to its default state and erase all Data.\n\n\nOperator Name\n: Get the Name of current network operator.\n\n\nCorrect result:\n\n\nAT+COPS?+COPS: 0,0,\nCHN-UNICOM (Example only)\n,6 OK\n\n\n\n\nWrong result:\n\n\nAT+COPS? ERROR\n\n\n\n\nThere are other AT commands that you can input manually, please refer to Quectel_EC25\nEC21_AT_Commands_Manual_V1.0.\n\n\nDiscussions", 
            "title": "Momdem Manager"
        }, 
        {
            "location": "/setup/modem_manager/#modem-manager", 
            "text": "Modem manager for MiFi  Modem manager is the UI to control the modem on MiFi from firmware v2.27. The modem manager can be used to configure modem automatically, read/send SMS or issue AT commands.  Please insert Micro SIM card before you turn on the device.   You will see  Modem Connection  in  Internet Status . You can check different information of your GL-MiFi and configure your 3G/4G modem settings.  You can find the following information in  Modem Connection :  Model : The model of your 3G/4G module.  IMEI : A unique number for your GL-MiFi router.  Carrier : The service provider of your SIM card.", 
            "title": "Modem Manager"
        }, 
        {
            "location": "/setup/modem_manager/#modem-tools", 
            "text": "We have developed a modem tools for you to configure your 3G/4G modem in GL-MiFi easily. Please click  Modem Tools .", 
            "title": "Modem Tools"
        }, 
        {
            "location": "/setup/modem_manager/#data", 
            "text": "The configuration of Mobile Data should be auto detected by the modem manager. You can also change these settings manaually.  Input the correct information in order to activate the 3/4G modem.   Modem device : Please choose  /dev/cdc-wdm0  if this modem support QMI, otherwise you need to choose  ttyUSB* . There may be several  ttyUSB  from 1 to 3. You need to choose the correct one based on modem spec.  Service Type : This is needed for 3G connection only. For 4G connection, this setting is not necessary.  APN : This is the most important setting, check your ISP for the correct setting.  Dial Number : Generally, it is a default value and you don't need to set it by yourself. However, if you have this info, please input it.  Pin, Username and Password:  Generally, these informations are not necessary for a unlocked SIM card. However, if you have a locked SIM card, please find these informations from your carrier.", 
            "title": "Data"
        }, 
        {
            "location": "/setup/modem_manager/#send-sms", 
            "text": "You will be able to use the SIM card in GL-MiFi to send message to others.   Note: only support English at this moment.", 
            "title": "Send SMS"
        }, 
        {
            "location": "/setup/modem_manager/#read-sms", 
            "text": "You will be able to use the SIM card in GL-MiFi. Therefore, if someone send a message to the phone number of your SIM card, you can read it in  Read SMS .", 
            "title": "Read SMS"
        }, 
        {
            "location": "/setup/modem_manager/#at-tools", 
            "text": "You can configure the 3G/4G modem by sending AT command to the router via  AT Tools . You have to use the port  /dev/ttyUSB2  for all 3G/4G modules. We have pre-configured several AT commands that you can use directly in  Shortcut .   Request IMEI : Request International Mobile Equipment Identity of your MiFi  Correct result:  AT+CIMI 460010529708870 OK  Wrong result:  AT+CIMI ERROR  Request QCCID : Request the CCID number of your SIM card. If you get a number, it means that the connection of your SIM card is OK.  Correct result:  AT+QCCID+QCCID: 89860115851079757018 OK  Wrong result:  AT+CCIDI ERROR  Request IMSI : Request the International Mobile Subscriber Identity associated with your cellular network.  Correct result:  AT+CIMI 460010529708870 OK  Wrong result:  AT+CIMI ERROR  Check Signal Quality :  Correct result:  +CSQ: 21,99 OK   This first number\u2014\u201c21\u201d is the result. We usually get the value number is 18~23.  Wrong result:  AT+CSQ ERROR  Reset Modem : Reset the modem to its default state and erase all Data.  Operator Name : Get the Name of current network operator.  Correct result:  AT+COPS?+COPS: 0,0, CHN-UNICOM (Example only) ,6 OK  Wrong result:  AT+COPS? ERROR  There are other AT commands that you can input manually, please refer to Quectel_EC25 EC21_AT_Commands_Manual_V1.0.", 
            "title": "AT Tools"
        }, 
        {
            "location": "/setup/modem_manager/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/setup/rtc_setting/", 
            "text": "Installation\n\n\nBy default, it is missing dependency kernel modules. We should install them firstly. If you use our stock firmware, you can just install the kernel modules via \nopkg\n.  \n\n\nopkg update\nopkg install kmod-i2c-gpio-custom\nopkg install kmod-rtc-sd2068\n\n\n\n\nOtherwise, If you want to compile your own firmware, choose these packages:  \n\n\nKernel modules  ---\n  I2C support  ---\n  kmod-i2c-gpio-custom\nKernel modules  ---\n  Other modules  ---\n  kmod-rtc-sd2068\n\n\n\n\nRTC on GL-AR150\n\n\nPinout\n\n\n\n\nUsage\n\n\nThe GPIO used for RTC is below:\n\n\nSDA\n \n--\n \nGPIO1\n\n\nSCL\n \n--\n \nGPIO17\n\n\nNow you need in insert kernel modules and connect to the module.  \n\n\ninsmod i2c-gpio-custom.ko bus0=0,1,17\necho sd2068 0x32 \n /sys/bus/i2c/devices/i2c-0/new_device\n\n\n\n\nTo read the time from RTC module\n\n\nhwclock -r\n\n\n\n\nTo sync the RTC module's time to mini router\n\n\nhwclock -s\n\n\n\n\nTo write mini router's time to RTC module\n\n\nhwclock -w\n\n\n\n\nRTC on GL-MIFI\n\n\nRTC Pinout\n\n\n\n\nUsage\n\n\nThe GPIO used for RTC is below:\n\n\nSDA\n \n--\n \nGPIO13\n\n\nSCL\n \n--\n \nGPIO17\n\n\nNow you need in insert kernel modules and connect to the module.  \n\n\ninsmod i2c-gpio-custom.ko bus0=0,13,17\necho sd2068 0x32 \n /sys/bus/i2c/devices/i2c-0/new_device\n\n\n\n\nTo read the time from RTC module\n\n\nhwclock -r\n\n\n\n\nTo sync the RTC module's time to mini router\n\n\nhwclock -s\n\n\n\n\nTo write mini router's time to RTC module\n\n\nhwclock -w", 
            "title": "RTC Setting"
        }, 
        {
            "location": "/setup/rtc_setting/#installation", 
            "text": "By default, it is missing dependency kernel modules. We should install them firstly. If you use our stock firmware, you can just install the kernel modules via  opkg .    opkg update\nopkg install kmod-i2c-gpio-custom\nopkg install kmod-rtc-sd2068  Otherwise, If you want to compile your own firmware, choose these packages:    Kernel modules  ---   I2C support  ---   kmod-i2c-gpio-custom\nKernel modules  ---   Other modules  ---   kmod-rtc-sd2068", 
            "title": "Installation"
        }, 
        {
            "location": "/setup/rtc_setting/#rtc-on-gl-ar150", 
            "text": "", 
            "title": "RTC on GL-AR150"
        }, 
        {
            "location": "/setup/rtc_setting/#pinout", 
            "text": "", 
            "title": "Pinout"
        }, 
        {
            "location": "/setup/rtc_setting/#usage", 
            "text": "The GPIO used for RTC is below:  SDA   --   GPIO1  SCL   --   GPIO17  Now you need in insert kernel modules and connect to the module.    insmod i2c-gpio-custom.ko bus0=0,1,17\necho sd2068 0x32   /sys/bus/i2c/devices/i2c-0/new_device  To read the time from RTC module  hwclock -r  To sync the RTC module's time to mini router  hwclock -s  To write mini router's time to RTC module  hwclock -w", 
            "title": "Usage"
        }, 
        {
            "location": "/setup/rtc_setting/#rtc-on-gl-mifi", 
            "text": "", 
            "title": "RTC on GL-MIFI"
        }, 
        {
            "location": "/setup/rtc_setting/#rtc-pinout", 
            "text": "", 
            "title": "RTC Pinout"
        }, 
        {
            "location": "/setup/rtc_setting/#usage_1", 
            "text": "The GPIO used for RTC is below:  SDA   --   GPIO13  SCL   --   GPIO17  Now you need in insert kernel modules and connect to the module.    insmod i2c-gpio-custom.ko bus0=0,13,17\necho sd2068 0x32   /sys/bus/i2c/devices/i2c-0/new_device  To read the time from RTC module  hwclock -r  To sync the RTC module's time to mini router  hwclock -s  To write mini router's time to RTC module  hwclock -w", 
            "title": "Usage"
        }, 
        {
            "location": "/dev/serial/", 
            "text": "Connection UART serial\n\n\nConnections\n\n\nSerial pins are the most used pins for DIY users. You can connect to a \nUSB UART\n adapter as in the picture.\n\n\n\n\nLinux (ubuntu)/MAC\n\n\nIn Linux or OSX, when you plug the USB UART adapter to your computer, the driver should already be installed. Check if you have device registered.\n\n\n$ls /dev/ttyUSB*\n/dev/ttyUSB0\n\n\n\n\nyou need to have kermit to connect to serial.\n\n\n$sudo apt-get install gkermit\n\n\n\n\nThen you need to make the configuration file for kermit: ~/.kermrc. The content should be:\n\n\nset line /dev/ttyUSB0\nset speed 115200\nset carrier-watch off\nset handshake none\nset flow-control none\nrobust\nset file type bin\nset file name lit\nset rec pack 1000\nset send pack 1000\nset window 5\n\n\n\n\nNow connect to the device using root:\n\n\n$sudo kermit -c\nConnecting to /dev/ttyUSB0, speed 115200\n Escape character: Ctrl-\\ (ASCII 28, FS): enabled\nType the escape character followed by C to get back,\nor followed by ? to see other options.\n----------------------------------------------------\n\n\n\n\n\nWhen you have finished, press \nCtrl-\\\n then \nc\n to quit kermit.\n\n\nWindows\n\n\nWhen connecting the USB UART adapter to your computer, you may need to install drivers for them. The drivers can be download here: somewhere.\n\n\nNow you will be able to find the serial COM port (in this example: \nCOM3\n) in device manger.\n\n\n\n\nInstall a terminal software. \nputty\n is recommended. You need to set COM port \nCOM4\n, speed \n115200\n and connection type \nSerial\n. Click \"Open\".\n\n\n\n\nYou will be displayed a black window. If you turn on your device now, you will see the console output of the box.\n\n\n\n\nDual Serial connection on Domino Pi\n\n\nDomino Pi has dual serial connection, please refer to \nDomino Pi Serial\n for details.\n\n\nDiscussions", 
            "title": "UART Serial"
        }, 
        {
            "location": "/dev/serial/#connection-uart-serial", 
            "text": "", 
            "title": "Connection UART serial"
        }, 
        {
            "location": "/dev/serial/#connections", 
            "text": "Serial pins are the most used pins for DIY users. You can connect to a  USB UART  adapter as in the picture.", 
            "title": "Connections"
        }, 
        {
            "location": "/dev/serial/#linux-ubuntumac", 
            "text": "In Linux or OSX, when you plug the USB UART adapter to your computer, the driver should already be installed. Check if you have device registered.  $ls /dev/ttyUSB*\n/dev/ttyUSB0  you need to have kermit to connect to serial.  $sudo apt-get install gkermit  Then you need to make the configuration file for kermit: ~/.kermrc. The content should be:  set line /dev/ttyUSB0\nset speed 115200\nset carrier-watch off\nset handshake none\nset flow-control none\nrobust\nset file type bin\nset file name lit\nset rec pack 1000\nset send pack 1000\nset window 5  Now connect to the device using root:  $sudo kermit -c\nConnecting to /dev/ttyUSB0, speed 115200\n Escape character: Ctrl-\\ (ASCII 28, FS): enabled\nType the escape character followed by C to get back,\nor followed by ? to see other options.\n----------------------------------------------------  When you have finished, press  Ctrl-\\  then  c  to quit kermit.", 
            "title": "Linux (ubuntu)/MAC"
        }, 
        {
            "location": "/dev/serial/#windows", 
            "text": "When connecting the USB UART adapter to your computer, you may need to install drivers for them. The drivers can be download here: somewhere.  Now you will be able to find the serial COM port (in this example:  COM3 ) in device manger.   Install a terminal software.  putty  is recommended. You need to set COM port  COM4 , speed  115200  and connection type  Serial . Click \"Open\".   You will be displayed a black window. If you turn on your device now, you will see the console output of the box.", 
            "title": "Windows"
        }, 
        {
            "location": "/dev/serial/#dual-serial-connection-on-domino-pi", 
            "text": "Domino Pi has dual serial connection, please refer to  Domino Pi Serial  for details.", 
            "title": "Dual Serial connection on Domino Pi"
        }, 
        {
            "location": "/dev/serial/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/dev/uboot/", 
            "text": "Advance Usage of uboot\n\n\nFamiliarity with uboot is a skill that you should master in order to play with the routers.\n\n\nAbout uboot\n\n\nUboot (universial bootloader) is the bootloader we used on our boards and routers to start OpenWrt Linux. The bootloader heavily depends on the hardware so almost every device requires a different bootloader.\n\n\nTo use the bootloader, you have to \nconnect a UART serial connector\n to your device.\n\n\nTaking our Atheros 9331 boards for example, when powered up, uboot will output the following text:\n\n\n*********************************************\n*   U-Boot 1.1.4  (Sep  9 2014, 09:20:16)   *\n*********************************************\n\nAP121 (AR9331) U-Boot for GL.iNet\n\nDRAM:   64 MB DDR 16-bit\nFLASH:  Winbond W25Q128 (16 MB)\nCLOCKS: 400/400/200/33 MHz (CPU/RAM/AHB/SPI)\n\nLED on during eth initialization...\n\nHit any key to stop autobooting:  0\n\n\n\n\nQuickly press any key to stop booting.\n\n\nUboot console\n\n\nUboot is very useful to save your router. Here is some useful command in uboot.\n\n\nprintenv\n prints out the environment variables\n\n\nuboot\n printenv\nbootargs=console=ttyS0,115200 root=31:02 rootfstype=squashfs init=/sbin/init mtdparts=ar7240-nor0:128k(u-boot),1024k(kernel),2816k(rootfs),64k(config),64k(ART)\nbootcmd=bootm 0x9F020000\nbootdelay=1\nbaudrate=115200\nipaddr=192.168.1.1\nserverip=192.168.1.2\nbootfile=\nfirmware.bin\n\nloadaddr=0x80800000\nncport=6666\nuboot_addr=0x9F000000\nuboot_name=uboot.bin\nuboot_size=0x10000\nuboot_upg=if ping $serverip; then tftp $loadaddr $uboot_name \n if itest.l $filesize == $uboot_size; then erase $uboot_addr +$filesize \n cp.b $loadaddr $uboot_addr $filesize \n echo OK!; else echo ERROR! Wrong file size!; fi; else ERROR! Server not reachable!; fi\nfirmware_addr=0x9F020000\nfirmware_name=firmware.bin\nfirmware_upg=if ping $serverip; then tftp $loadaddr $firmware_name \n erase $firmware_addr +$filesize \n cp.b $loadaddr $firmware_addr $filesize \n echo OK!; else ERROR! Server not reachable!; fi\nstdin=serial\nstdout=serial\nstderr=serial\nethact=eth0\n\nEnvironment size: 937 bytes\n\nuboot\n\n\n\n\n\nmd\n displays data in flash or memory. The following command displays the data in flash from beginning, which is the binary of uboot itself.\n\n\nuboot\n md 0x9f000000\n9F000000: 100000FF 00000000 100000FD 00000000    ................\n9F000010: 1000018E 00000000 1000018C 00000000    ................\n9F000020: 1000018A 00000000 10000188 00000000    ................\n9F000030: 10000186 00000000 10000184 00000000    ................\n9F000040: 10000182 00000000 10000180 00000000    ................\n9F000050: 1000017E 00000000 1000017C 00000000    ...~.......|....\n9F000060: 1000017A 00000000 10000178 00000000    ...z.......x....\n9F000070: 10000176 00000000 10000174 00000000    ...v.......t....\n9F000080: 10000172 00000000 10000170 00000000    ...r.......p....\n9F000090: 1000016E 00000000 1000016C 00000000    ...n.......l....\n9F0000A0: 1000016A 00000000 10000168 00000000    ...j.......h....\n9F0000B0: 10000166 00000000 10000164 00000000    ...f.......d....\n9F0000C0: 10000162 00000000 10000160 00000000    ...b.......`....\n9F0000D0: 1000015E 00000000 1000015C 00000000    ...^.......\\....\n9F0000E0: 1000015A 00000000 10000158 00000000    ...Z.......X....\n9F0000F0: 10000156 00000000 10000154 00000000    ...V.......T....\n\n\n\n\nSetting up tftp server\n\n\nUbuntu Linux\n\n\nIn Ubuntu, you can install tftp using apt\n\n\nsudo apt-get install tftpd-hpa\n\n\n\n\nThe configuration file is \n/etc/default/tftpd-hpa\n. Modify its content and change the TFTP_DIRECTORY to your folder which will contains your files.\n\n\nTFTP_USERNAME=\nTFTP\n\nTFTP_DIRECTORY=\n/tftpboot\n\nTFTP_ADDRESS=\n[::]:69\n\nTFTP_OPTIONS=\n--secure\n\n\n\n\n\nSometime the service cannot be started because network is not available when it starts. Start the service manually.\n\n\nsudo service tftpd-hpa restart\n\n\n\n\nWindows\n\n\nDownload service edition of tftpd from http://tftpd32.jounin.net/tftpd32_download.html, then install it.\n\n\n \n\n\nTurn off windows firewall, which is the main reason causing tftpd failed to connect.\n\n\n \n\n\nRun tftpd64_SE Admin, choose your tftpd root (in this example D:\\tftp), choose the \"Server interface\" 192.168.1.2 When clients are connecting to this server, you can see them in the status window.\n\n\n \n\n\nCompiling uboot\n\n\nEach device has a different uboot because it is hardware related.\n\n\nGL-AR150, GL.iNet6416, GL-AR300, GL-AR300M\n\n\nFor these models you can use \nPepe2k's\n uboot, you can download the source from github.\n\n\n$ git clone https://github.com/pepe2k/u-boot_mod.git\n$ cd u-boot_mod\n\n\n\n\nTo compile the source, you need to have a cross complier toolchain. I am using openwrt toolchain. Make modification to the \nMakefile\n.\n\n\nexport BUILD_TOPDIR=$(PWD)\nexport STAGING_DIR=$(BUILD_TOPDIR)/tmp\n\n# **Replace the following line with your real path**\nexport TOOLPATH=$(BUILD_TOPDIR)/../openwrt/staging_dir/toolchain-mips_34kc_gcc-4.8-linaro_uClibc-0.9.33.2/\n\nexport PATH:=$(TOOLPATH)/bin:${PATH}\n\nexport MAKECMD=make --silent --no-print-directory ARCH=mips CROSS_COMPILE=mips-openwrt-linux-uclibc-\n\n# boot delay (time to autostart boot command)\nexport CONFIG_BOOTDELAY=1\n\n\n\n\nNow start to compile the source. For example, for GL.iNet 6416, you can use:\n\n\nmake gl-inet\n\n\n\n\n\nFor GL-AR150, you can do this:\n\n\nmake 8devices_carambola2\n\n\n\n\nFor GL-AR300 and GL-AR300M, we modified the code a lot so please consult us for details.\n\n\nIt should be very quick and finish in minutes. Then you will find \nuboot_for_gl-inet.bin\n in \nbin/\n.\n\n\nGL-AR150 uboot modify as IoT devices\n\n\nIf you connect IoT addon to AR150's UART, which talks to AR150 using serial. When the IoT addon send some data during uboot boot, it may stop the booting process so you never have the router alive. You need to modify the uboot a little bit so that it can succesffuly boot. \n\n\nUse this code from github \nhttps://github.com/domino-team/uboot-domino\n\n\nIn this uboot, you need to type \ngl\n quickly during uboot boot to enter uboot console.\n\n\nMT300A, MT300N, MT750\n\n\nMT series routers use a different uboot and different code. Consult us if you need.\n\n\nUsing uboot\n\n\nYou can use \nprintenv\n to display the environment variables in uboot. here are some quick guide of how to use uboot.\n\n\nFirst you need to set up tftp server as above and put your files in tftp root folder.\n\n\nbasic uboot command\n\n\nDownload file to router\n (AR150, Domino, 6416 as example)\n\n\ntftp 0x81000000 file.bin\n\n\n\n\nErase some part of flash\n\n\nerase 0x9f050000 +0x10000\n\n\n\n\nWrite file to flash\n\n\ncp.b 0x81000000 0x9f050000 0x10000\n\n\n\n\npredefined script\n\n\nActually it is not easy to use basic uboot command to do everyting. It is quite risky. Fortunately we have some pre-defined scripts that simplifeis the work.\n\n\nPlase do check using \nprintenv\n to find out the correct filename that the script trying to download. \nFor example, if you want to update uboot for AR150, the uboot file should be named as \nuboot_for_gl-ar150.bin\n and put in your tftp root folder.\n\n\nReplace uboot\n\n\nrun lu\n\n\n\n\nUpdate firmware\n\n\nrun lf\n\n\n\n\nUpdate mac address etc\n\n\nrun lc\n\n\n\n\nErase uboot env variables\n\nBe sure to use the right command for the right model\nFor AR150, Domino AR300, AR300M\n\n\nerase 0x9f040000 +0x10000\nreset\n\n\n\n\nFor 6416\n\n\nerase 0x9f010000 +0x10000\nreset\n\n\n\n\nUboot Web UI\n\n\nUboot has a webUI so that you can save your device without entering uboot console.\n\n\n\n\nCheck \nthis section\n  for how to enter uboot web UI using the reset button.\n\n\nIf you are in uboot console, you can start the WebUI the following command. This only works for AR series, not MT series.\n\n\nhttpd\n\n\n\n\nAR300M Specific\n\n\nAR300M uses dual flash so in uboot there are a lot of things to deal with dual flash. Please refer to \nAR300M\n for more details.\n\n\nDiscussions", 
            "title": "Advanced Uboot"
        }, 
        {
            "location": "/dev/uboot/#advance-usage-of-uboot", 
            "text": "Familiarity with uboot is a skill that you should master in order to play with the routers.", 
            "title": "Advance Usage of uboot"
        }, 
        {
            "location": "/dev/uboot/#about-uboot", 
            "text": "Uboot (universial bootloader) is the bootloader we used on our boards and routers to start OpenWrt Linux. The bootloader heavily depends on the hardware so almost every device requires a different bootloader.  To use the bootloader, you have to  connect a UART serial connector  to your device.  Taking our Atheros 9331 boards for example, when powered up, uboot will output the following text:  *********************************************\n*   U-Boot 1.1.4  (Sep  9 2014, 09:20:16)   *\n*********************************************\n\nAP121 (AR9331) U-Boot for GL.iNet\n\nDRAM:   64 MB DDR 16-bit\nFLASH:  Winbond W25Q128 (16 MB)\nCLOCKS: 400/400/200/33 MHz (CPU/RAM/AHB/SPI)\n\nLED on during eth initialization...\n\nHit any key to stop autobooting:  0  Quickly press any key to stop booting.", 
            "title": "About uboot"
        }, 
        {
            "location": "/dev/uboot/#uboot-console", 
            "text": "Uboot is very useful to save your router. Here is some useful command in uboot.  printenv  prints out the environment variables  uboot  printenv\nbootargs=console=ttyS0,115200 root=31:02 rootfstype=squashfs init=/sbin/init mtdparts=ar7240-nor0:128k(u-boot),1024k(kernel),2816k(rootfs),64k(config),64k(ART)\nbootcmd=bootm 0x9F020000\nbootdelay=1\nbaudrate=115200\nipaddr=192.168.1.1\nserverip=192.168.1.2\nbootfile= firmware.bin \nloadaddr=0x80800000\nncport=6666\nuboot_addr=0x9F000000\nuboot_name=uboot.bin\nuboot_size=0x10000\nuboot_upg=if ping $serverip; then tftp $loadaddr $uboot_name   if itest.l $filesize == $uboot_size; then erase $uboot_addr +$filesize   cp.b $loadaddr $uboot_addr $filesize   echo OK!; else echo ERROR! Wrong file size!; fi; else ERROR! Server not reachable!; fi\nfirmware_addr=0x9F020000\nfirmware_name=firmware.bin\nfirmware_upg=if ping $serverip; then tftp $loadaddr $firmware_name   erase $firmware_addr +$filesize   cp.b $loadaddr $firmware_addr $filesize   echo OK!; else ERROR! Server not reachable!; fi\nstdin=serial\nstdout=serial\nstderr=serial\nethact=eth0\n\nEnvironment size: 937 bytes\n\nuboot   md  displays data in flash or memory. The following command displays the data in flash from beginning, which is the binary of uboot itself.  uboot  md 0x9f000000\n9F000000: 100000FF 00000000 100000FD 00000000    ................\n9F000010: 1000018E 00000000 1000018C 00000000    ................\n9F000020: 1000018A 00000000 10000188 00000000    ................\n9F000030: 10000186 00000000 10000184 00000000    ................\n9F000040: 10000182 00000000 10000180 00000000    ................\n9F000050: 1000017E 00000000 1000017C 00000000    ...~.......|....\n9F000060: 1000017A 00000000 10000178 00000000    ...z.......x....\n9F000070: 10000176 00000000 10000174 00000000    ...v.......t....\n9F000080: 10000172 00000000 10000170 00000000    ...r.......p....\n9F000090: 1000016E 00000000 1000016C 00000000    ...n.......l....\n9F0000A0: 1000016A 00000000 10000168 00000000    ...j.......h....\n9F0000B0: 10000166 00000000 10000164 00000000    ...f.......d....\n9F0000C0: 10000162 00000000 10000160 00000000    ...b.......`....\n9F0000D0: 1000015E 00000000 1000015C 00000000    ...^.......\\....\n9F0000E0: 1000015A 00000000 10000158 00000000    ...Z.......X....\n9F0000F0: 10000156 00000000 10000154 00000000    ...V.......T....", 
            "title": "Uboot console"
        }, 
        {
            "location": "/dev/uboot/#setting-up-tftp-server", 
            "text": "", 
            "title": "Setting up tftp server"
        }, 
        {
            "location": "/dev/uboot/#ubuntu-linux", 
            "text": "In Ubuntu, you can install tftp using apt  sudo apt-get install tftpd-hpa  The configuration file is  /etc/default/tftpd-hpa . Modify its content and change the TFTP_DIRECTORY to your folder which will contains your files.  TFTP_USERNAME= TFTP \nTFTP_DIRECTORY= /tftpboot \nTFTP_ADDRESS= [::]:69 \nTFTP_OPTIONS= --secure   Sometime the service cannot be started because network is not available when it starts. Start the service manually.  sudo service tftpd-hpa restart", 
            "title": "Ubuntu Linux"
        }, 
        {
            "location": "/dev/uboot/#windows", 
            "text": "Download service edition of tftpd from http://tftpd32.jounin.net/tftpd32_download.html, then install it.     Turn off windows firewall, which is the main reason causing tftpd failed to connect.     Run tftpd64_SE Admin, choose your tftpd root (in this example D:\\tftp), choose the \"Server interface\" 192.168.1.2 When clients are connecting to this server, you can see them in the status window.", 
            "title": "Windows"
        }, 
        {
            "location": "/dev/uboot/#compiling-uboot", 
            "text": "Each device has a different uboot because it is hardware related.", 
            "title": "Compiling uboot"
        }, 
        {
            "location": "/dev/uboot/#gl-ar150-glinet6416-gl-ar300-gl-ar300m", 
            "text": "For these models you can use  Pepe2k's  uboot, you can download the source from github.  $ git clone https://github.com/pepe2k/u-boot_mod.git\n$ cd u-boot_mod  To compile the source, you need to have a cross complier toolchain. I am using openwrt toolchain. Make modification to the  Makefile .  export BUILD_TOPDIR=$(PWD)\nexport STAGING_DIR=$(BUILD_TOPDIR)/tmp\n\n# **Replace the following line with your real path**\nexport TOOLPATH=$(BUILD_TOPDIR)/../openwrt/staging_dir/toolchain-mips_34kc_gcc-4.8-linaro_uClibc-0.9.33.2/\n\nexport PATH:=$(TOOLPATH)/bin:${PATH}\n\nexport MAKECMD=make --silent --no-print-directory ARCH=mips CROSS_COMPILE=mips-openwrt-linux-uclibc-\n\n# boot delay (time to autostart boot command)\nexport CONFIG_BOOTDELAY=1  Now start to compile the source. For example, for GL.iNet 6416, you can use:  make gl-inet  For GL-AR150, you can do this:  make 8devices_carambola2  For GL-AR300 and GL-AR300M, we modified the code a lot so please consult us for details.  It should be very quick and finish in minutes. Then you will find  uboot_for_gl-inet.bin  in  bin/ .", 
            "title": "GL-AR150, GL.iNet6416, GL-AR300, GL-AR300M"
        }, 
        {
            "location": "/dev/uboot/#gl-ar150-uboot-modify-as-iot-devices", 
            "text": "If you connect IoT addon to AR150's UART, which talks to AR150 using serial. When the IoT addon send some data during uboot boot, it may stop the booting process so you never have the router alive. You need to modify the uboot a little bit so that it can succesffuly boot.   Use this code from github  https://github.com/domino-team/uboot-domino  In this uboot, you need to type  gl  quickly during uboot boot to enter uboot console.", 
            "title": "GL-AR150 uboot modify as IoT devices"
        }, 
        {
            "location": "/dev/uboot/#mt300a-mt300n-mt750", 
            "text": "MT series routers use a different uboot and different code. Consult us if you need.", 
            "title": "MT300A, MT300N, MT750"
        }, 
        {
            "location": "/dev/uboot/#using-uboot", 
            "text": "You can use  printenv  to display the environment variables in uboot. here are some quick guide of how to use uboot.  First you need to set up tftp server as above and put your files in tftp root folder.", 
            "title": "Using uboot"
        }, 
        {
            "location": "/dev/uboot/#basic-uboot-command", 
            "text": "Download file to router  (AR150, Domino, 6416 as example)  tftp 0x81000000 file.bin  Erase some part of flash  erase 0x9f050000 +0x10000  Write file to flash  cp.b 0x81000000 0x9f050000 0x10000", 
            "title": "basic uboot command"
        }, 
        {
            "location": "/dev/uboot/#predefined-script", 
            "text": "Actually it is not easy to use basic uboot command to do everyting. It is quite risky. Fortunately we have some pre-defined scripts that simplifeis the work.  Plase do check using  printenv  to find out the correct filename that the script trying to download. \nFor example, if you want to update uboot for AR150, the uboot file should be named as  uboot_for_gl-ar150.bin  and put in your tftp root folder.  Replace uboot  run lu  Update firmware  run lf  Update mac address etc  run lc  Erase uboot env variables \nBe sure to use the right command for the right model\nFor AR150, Domino AR300, AR300M  erase 0x9f040000 +0x10000\nreset  For 6416  erase 0x9f010000 +0x10000\nreset", 
            "title": "predefined script"
        }, 
        {
            "location": "/dev/uboot/#uboot-web-ui", 
            "text": "Uboot has a webUI so that you can save your device without entering uboot console.   Check  this section   for how to enter uboot web UI using the reset button.  If you are in uboot console, you can start the WebUI the following command. This only works for AR series, not MT series.  httpd", 
            "title": "Uboot Web UI"
        }, 
        {
            "location": "/dev/uboot/#ar300m-specific", 
            "text": "AR300M uses dual flash so in uboot there are a lot of things to deal with dual flash. Please refer to  AR300M  for more details.", 
            "title": "AR300M Specific"
        }, 
        {
            "location": "/dev/uboot/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/domino/", 
            "text": "Getting started with Domino Kits\n\n\nNote: The Domino Project is depreciated. Only Domino Core is still under production\n \n\n\nFAQ\n\n\n(1) What is the WiFi password?\n\n\n    It is \ngoodlife\n.\n\n\n\n\n(1) How can I connect to the board\n\n\n    You can connect to it via IP address, which is 192.168.8.1 via LAN/WiFi.\n    You can also connect to it via http://domino.local\n\n\n\n\n(2) Why cannot I connect to http://domino.local?\n\n\n    You need bonjour service. Download it from https://support.apple.com/kb/DL999?locale=en_US for windows.\n\n\n\n\n(3) Is it open hardware? \n\n\n    All the Domino boards are open hardware, which you can find the schematics and layout in [Github](https://github.com/domino-team/domino-hardware).\n    Domino Core is based on Atheros proprietary reference design and is not open hardware.\n\n\n\n\n\nWhat is in the whole kit\n\n\nDomino is a high-performance 802.11 bgn WiFi hardware platform, with a modular design architecture, unlimited extension capabilities and Arduino compatibility.\n\n\nDomino is designed using \nAtheros AR9331 WiSoC\n which is widely used in mini routers and IoT projects.\n\n\n\n\nThe Domino Family has now 11 boards and more extensions will be developed. The tree structure of the boards is as illustrated.\n\n\nAt the heart is Domino Core, which can then be extended into Domino Pi and Domino Qi. Domino Pi is a DEV platform for wifi and openwrt, it can be extended with various tile boards. Domino Qi is designed for Arduino compatible. Plug the Domino Qi Mini board onto the Domino Qi baseboard to turn it into a board fully compatible the ubiquitous Arduino Shield form factor.\n\n\nDomino Core\n\n\nDomino Core is the heart of Domino.IO. It is designed for makers to easily build their own products based on it. It is compact, \nonly 1.6 square inches with 60 castellated pins (2mm pitch), 3xEthernet, USB2.0, serial port, SPI, I2S, SLIC, SPDIF, JTAG, 9xLEDs and 29 GPIOs\n. Check the the beautiful pinout diagram below for details.\n\n\n\n\nGo to the \nDomino Core hardware\n for more details of the hardware.\n\n\nDomino Pi\n\n\nDomino Pi is designed both as a Domino Core development board and as an extension. You can develop your own board based on the Domino Pi. See the pinout diagram below. We have seven useful tile boards available, providing easy to use building blocks, enabling you to extend the Pi board as you wish.\n\n\nDomino Pi is with newest \nOpenWrt\n BB1407 and CC1505 firmware.\n\n\n\n\nFor more details on how to use the Pi, please check the below sections:\n-  \nDomino Pi Baseboard Section\n \n-  \nSingle Ethernet board Section\n \n-  \nDual Ethernet board Section\n \n-  \n3xUSB+MicroSD Combo Section\n \n-  \nI2S board Section\n \n-  \nSPI/JTAG Section\n \n-  \nLED Section\n \n\n\nDomino Qi\n\n\nDomino Qi Mini is a small board that is a fully compatible derivative of the original \nArduino Y\u00f9n\n, crammed into a tiny form factor. It is a low-cost, compact OpenWRT-based 802.11 bgn WiFi board based on Qualcomm/Atheros AR9331 WiSoC and on the Atmel \nATMega32U4 MCU\n. Communication between the two chips is achieved using Arduino Y\u00f9n-compatible Bridge hardware and software library.\nPlug the Domino Qi Mini board onto the Domino Qi baseboard to turn it into a board \nfully compatible with the ubiquitous Arduino Shield form factor\n and benefit from hundreds of already existing shields for rapid prototyping.\n\n\n\n\nFor more details on how to use the Qi, please check the below sections:\n-  \nDomino Qi section\n \n-  \nQi Baseboard section\n \n-  \nQi Mini section\n \n\n\nWhere to get help\n\n\nFirst you need to read this documentation. We will try our best to make the documentation complete and detailed.\n\n\nSecond, we will have our own forum open later, when you will be ask questions there.\n\n\nThird, go the existing community of \nOpenWrt\n if you want to explore the embedded Linux system, and go to \nArduino\n if you want to explore the features related to Arduino.\n\n\nDiscussions", 
            "title": "Domino Kit"
        }, 
        {
            "location": "/domino/#getting-started-with-domino-kits", 
            "text": "Note: The Domino Project is depreciated. Only Domino Core is still under production", 
            "title": "Getting started with Domino Kits"
        }, 
        {
            "location": "/domino/#faq", 
            "text": "(1) What is the WiFi password?      It is  goodlife .  (1) How can I connect to the board      You can connect to it via IP address, which is 192.168.8.1 via LAN/WiFi.\n    You can also connect to it via http://domino.local  (2) Why cannot I connect to http://domino.local?      You need bonjour service. Download it from https://support.apple.com/kb/DL999?locale=en_US for windows.  (3) Is it open hardware?       All the Domino boards are open hardware, which you can find the schematics and layout in [Github](https://github.com/domino-team/domino-hardware).\n    Domino Core is based on Atheros proprietary reference design and is not open hardware.", 
            "title": "FAQ"
        }, 
        {
            "location": "/domino/#what-is-in-the-whole-kit", 
            "text": "Domino is a high-performance 802.11 bgn WiFi hardware platform, with a modular design architecture, unlimited extension capabilities and Arduino compatibility.  Domino is designed using  Atheros AR9331 WiSoC  which is widely used in mini routers and IoT projects.   The Domino Family has now 11 boards and more extensions will be developed. The tree structure of the boards is as illustrated.  At the heart is Domino Core, which can then be extended into Domino Pi and Domino Qi. Domino Pi is a DEV platform for wifi and openwrt, it can be extended with various tile boards. Domino Qi is designed for Arduino compatible. Plug the Domino Qi Mini board onto the Domino Qi baseboard to turn it into a board fully compatible the ubiquitous Arduino Shield form factor.", 
            "title": "What is in the whole kit"
        }, 
        {
            "location": "/domino/#domino-core", 
            "text": "Domino Core is the heart of Domino.IO. It is designed for makers to easily build their own products based on it. It is compact,  only 1.6 square inches with 60 castellated pins (2mm pitch), 3xEthernet, USB2.0, serial port, SPI, I2S, SLIC, SPDIF, JTAG, 9xLEDs and 29 GPIOs . Check the the beautiful pinout diagram below for details.   Go to the  Domino Core hardware  for more details of the hardware.", 
            "title": "Domino Core"
        }, 
        {
            "location": "/domino/#domino-pi", 
            "text": "Domino Pi is designed both as a Domino Core development board and as an extension. You can develop your own board based on the Domino Pi. See the pinout diagram below. We have seven useful tile boards available, providing easy to use building blocks, enabling you to extend the Pi board as you wish.  Domino Pi is with newest  OpenWrt  BB1407 and CC1505 firmware.   For more details on how to use the Pi, please check the below sections:\n-   Domino Pi Baseboard Section  \n-   Single Ethernet board Section  \n-   Dual Ethernet board Section  \n-   3xUSB+MicroSD Combo Section  \n-   I2S board Section  \n-   SPI/JTAG Section  \n-   LED Section", 
            "title": "Domino Pi"
        }, 
        {
            "location": "/domino/#domino-qi", 
            "text": "Domino Qi Mini is a small board that is a fully compatible derivative of the original  Arduino Y\u00f9n , crammed into a tiny form factor. It is a low-cost, compact OpenWRT-based 802.11 bgn WiFi board based on Qualcomm/Atheros AR9331 WiSoC and on the Atmel  ATMega32U4 MCU . Communication between the two chips is achieved using Arduino Y\u00f9n-compatible Bridge hardware and software library.\nPlug the Domino Qi Mini board onto the Domino Qi baseboard to turn it into a board  fully compatible with the ubiquitous Arduino Shield form factor  and benefit from hundreds of already existing shields for rapid prototyping.   For more details on how to use the Qi, please check the below sections:\n-   Domino Qi section  \n-   Qi Baseboard section  \n-   Qi Mini section", 
            "title": "Domino Qi"
        }, 
        {
            "location": "/domino/#where-to-get-help", 
            "text": "First you need to read this documentation. We will try our best to make the documentation complete and detailed.  Second, we will have our own forum open later, when you will be ask questions there.  Third, go the existing community of  OpenWrt  if you want to explore the embedded Linux system, and go to  Arduino  if you want to explore the features related to Arduino.", 
            "title": "Where to get help"
        }, 
        {
            "location": "/domino/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/app/ssh/", 
            "text": "Using SSH and WinSCP\n\n\nSSH and WinSCP are basic tools if you want to play more with the mini router.\n\n\nSecure Shell (SSH) is a cryptographic network protocol for operating network services securely over an unsecured network. The best known example application is for remote login to computer systems by users. Sometime you need to have basic tools to ssh to the server (e.g. When you need to set up Shadowsocks server ). This guide is how to SSH login to the GL.iNet routers.\n\n\nWinSCP is the windows tool which runs on top of SSH to connect and edit files on the router. In Linux you can use \nscp\n. But WinSCP is the best tool on windows.\n\n\nSSH to the Router for Windows Users\n\n\n1. Download and install a PuTTY\n\n\nGo to the following webpage to download the latest PuTTY version\uff1a  \n\n\nhttps://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html\n\n\n2. Install PuTTY\n\n\n \n\n\n \n\n\n \n\n\n \n\n\n3. Launch PuTTY\n\n\nClick \nPuTTY\n in Start Menu \n\n\n \n\n\nYou will see the following Configuration Window: \n\n\n \n\n\nInput Host Name (or IP address) \n192.168.8.1\n, Keep Port as default \n22\n, select connection type: \nSSH\n,\n\n\nInput \nYour Session\n in saved sessions, and \nSave\n your content.\n\n\n  \n\n\nClick \nOpen\n at the bottom\n\n\n \n\n\nA security alert will pop-up, click \nYes\n.\n\n\nlogin as\uff1a\nroot\n\n\nThen input your admin password \n\n\nNote: You need to use your password which you set up the router at the first time\n\n\n  \n\n\nWhen you see above picture, that means you are now ssh login the router successfully.  \n\n\nWinSCP\n\n\nWinSCP is a much easier tool to edit files on the router if you are using Windows.\n\n\n1. Download WinSCP\n\n\nDownload WinSCP from here: https://winscp.net/eng/download.php and install in your Windows.\n\n\n2. Connect to the router\n\n\nRun WinSCP, choose \nSCP\n as the protocol. If you didn't change the IP of the router it should be \n192.168.8.1\n. Please use your real IP of the router. Port number should be \n22\n. Please \nroot\n as the username and input your real password. Then click \nLogin\n button.\n\n\n\n\nAfter login you have full control of the router now.\n\n\nYou can choose view, edit or transfer files from/to the router.\n\n\n\n\nFor example, if you want edit firewall config, you can go to /etc/config and find firewall file. Then click your right key of your mouse, then \nEdit\n.\n\n\n\n\nNow you can edit the file content freely. Be careful not to mess up the settings.\n\n\n\n\nSSH to the router for Linux/Mac User\n\n\nThe process on Linux and Mac OS are generally the same. Below we use Ubuntu as as example.\n\n\n \n\n\n1. Launch Terminal\n\n\nClick the \nTerminal\n icon to launch Terminal. Then, input the following command: \n\n\nSSH root@192.168.8.1\n \n\n\nIf you have ever connected to another router, host key verification failed may displayed as follow:\n\n\n \n\n\nIf this happens, run the command in the red box. Please copy the exact command which is displayed in your terminal.\n\n\nssh-kengen -f \"~/.ssh/known_hosts\" -R \"192.168.8.1\"\n\n\n\n\n2. Log In Router\n\n\nretry the ssh login command: \n\n\nssh root@192.168.8.1\n \n\n\n  \n\n\nType \"\nyes\n\"\n\n\n   \n\n\nInput your router password: (you can set this password when you first connect to your router)\n\n\n \n\n\nFinally, you login the router when the above message displayed.", 
            "title": "SSH to the router"
        }, 
        {
            "location": "/app/ssh/#using-ssh-and-winscp", 
            "text": "SSH and WinSCP are basic tools if you want to play more with the mini router.  Secure Shell (SSH) is a cryptographic network protocol for operating network services securely over an unsecured network. The best known example application is for remote login to computer systems by users. Sometime you need to have basic tools to ssh to the server (e.g. When you need to set up Shadowsocks server ). This guide is how to SSH login to the GL.iNet routers.  WinSCP is the windows tool which runs on top of SSH to connect and edit files on the router. In Linux you can use  scp . But WinSCP is the best tool on windows.", 
            "title": "Using SSH and WinSCP"
        }, 
        {
            "location": "/app/ssh/#ssh-to-the-router-for-windows-users", 
            "text": "", 
            "title": "SSH to the Router for Windows Users"
        }, 
        {
            "location": "/app/ssh/#1-download-and-install-a-putty", 
            "text": "Go to the following webpage to download the latest PuTTY version\uff1a    https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html", 
            "title": "1. Download and install a PuTTY"
        }, 
        {
            "location": "/app/ssh/#2-install-putty", 
            "text": "", 
            "title": "2. Install PuTTY"
        }, 
        {
            "location": "/app/ssh/#3-launch-putty", 
            "text": "Click  PuTTY  in Start Menu      You will see the following Configuration Window:      Input Host Name (or IP address)  192.168.8.1 , Keep Port as default  22 , select connection type:  SSH ,  Input  Your Session  in saved sessions, and  Save  your content.      Click  Open  at the bottom     A security alert will pop-up, click  Yes .  login as\uff1a root  Then input your admin password   Note: You need to use your password which you set up the router at the first time      When you see above picture, that means you are now ssh login the router successfully.", 
            "title": "3. Launch PuTTY"
        }, 
        {
            "location": "/app/ssh/#winscp", 
            "text": "WinSCP is a much easier tool to edit files on the router if you are using Windows.", 
            "title": "WinSCP"
        }, 
        {
            "location": "/app/ssh/#1-download-winscp", 
            "text": "Download WinSCP from here: https://winscp.net/eng/download.php and install in your Windows.", 
            "title": "1. Download WinSCP"
        }, 
        {
            "location": "/app/ssh/#2-connect-to-the-router", 
            "text": "Run WinSCP, choose  SCP  as the protocol. If you didn't change the IP of the router it should be  192.168.8.1 . Please use your real IP of the router. Port number should be  22 . Please  root  as the username and input your real password. Then click  Login  button.   After login you have full control of the router now.  You can choose view, edit or transfer files from/to the router.   For example, if you want edit firewall config, you can go to /etc/config and find firewall file. Then click your right key of your mouse, then  Edit .   Now you can edit the file content freely. Be careful not to mess up the settings.", 
            "title": "2. Connect to the router"
        }, 
        {
            "location": "/app/ssh/#ssh-to-the-router-for-linuxmac-user", 
            "text": "The process on Linux and Mac OS are generally the same. Below we use Ubuntu as as example.", 
            "title": "SSH to the router for Linux/Mac User"
        }, 
        {
            "location": "/app/ssh/#1-launch-terminal", 
            "text": "Click the  Terminal  icon to launch Terminal. Then, input the following command:   SSH root@192.168.8.1    If you have ever connected to another router, host key verification failed may displayed as follow:     If this happens, run the command in the red box. Please copy the exact command which is displayed in your terminal.  ssh-kengen -f \"~/.ssh/known_hosts\" -R \"192.168.8.1\"", 
            "title": "1. Launch Terminal"
        }, 
        {
            "location": "/app/ssh/#2-log-in-router", 
            "text": "retry the ssh login command:   ssh root@192.168.8.1        Type \" yes \"       Input your router password: (you can set this password when you first connect to your router)     Finally, you login the router when the above message displayed.", 
            "title": "2. Log In Router"
        }, 
        {
            "location": "/app/openvpn/", 
            "text": "OpenVPN Client Setting\n\n\nThis docs is only related to OpenVPN client.\n\n\nOpenVPN client is pre-installed in GL.iNet routers GL-AR150, GL-AR300M, GL-MT300N, GL-MT300A, GL-USB150, GL-AR750, GL-B1300 from firmware v2.19.\n\n\nDownload the firmware for each devices: http://downlaod.gl-inet.com/firmware/\n\n\nThe newest firmware maybe put in testing folder: http://download.gl-inet.com/firmware/testing/\n\n\nNote: You need to subscribe your own VPN service and get an OpenVPN configuration file (.ovpn) from your service provider. If you have subscribed but don't know how to download the configuration file, please read the section \"How to get the configuration file\".\n\n\nThis guide assumes that you have set up the router properly.\n\n\n1. Create an OpenVPN connection\n\n\n1) Go to OpenVPN page\n\n\nClick the OpenVPN icon on the toolbar. It will ask you to upload the configuration files. This file can be a single .ovpn file or a zip/tar.gz file which contains multiple .ovpn files.\n\n\nBe careful that some .ovpn files use separated ca, cert, crl files. These files must be zipped together with the .ovpn file before upload.\n\n\n\n\n2) Upload your configuration file\n\n\nSimply Drap and drop your file to the area indicated so that it will be uploaded to the router automatically. Next, the router will start to check the file. Refresh the page when you see the file has been successfully uploaded and the .ovpn file has been imported.\n\n\n\n\nFor zip/tar.gz file, the router will unzip the zip/tar.gz file  and check each .ovpn file inside.\n\n\n\n\nIn some cases, it will ask you to enter your username and password. This usually happen when your configuration file can be downloaded without login your personal account.\n\n\n\n\n3) Connect to the OpenVPN server\n\n\nAfter refreshing the page, you will be able to configure the OpenVPN connection.\n\n\n\n\nPlease create the VPN connection by following the steps below:\n\n\n\n\nCheck \"Enable\".\n\n\nCheck \"Force VPN\" if you want to force all Internet traffic to go through VPN. However, you will lose Internet access if the VPN is disconnected.\n\n\nThen choose a .ovpn file which you want to use.\n\n\nNow click \"Apply\"\n\n\n\n\nThe router will show the connection progress. Once it is connected, you will be able to see data sent and received.\n\n\n\n\n2. Manage ovpn files\n\n\nFrom firmware \nv2.20\n, there is a simple ovpn manager where you can check the current list of ovpn files. You can purge all the files and start to use another vpn service.\n\n\nWe would like to add more functions in the ovpn manager, you can send us a wish list via email or in the forum. Some proposed functions (this doesn't mean this feature will come in the near future) include:\n\n\n\n\nServer and port probe: to detect if the server is online. This is useful if you are in a censored area and some servers are not accessible at all. But this process is very time consuming.\n\n\nTo intergrate ovpn files into one. Generally the VPN service providers provides one ovpn file for each server then you will have hundreds of ovpn file. You can integrate these files into one and let the router to connect to a random sever.\n\n\nDelete, order and ranking servers. Now we don't have a algorithms to rank the servers, as you will not know the speed unless you try. We can record the speed if you have tried.\n\n\nManage multiple VPN services. While most people just use one service, we don't know if this is necessary.\n\n\n\n\n\n\n3. Get the config File\n\n\nWe have tested different VPN service providers. Therefore, if you don't know how to get the configuration file, you can follow the instruction below according to your service provider. However, you have to contact your service provider for the configuration file if they haven't been listed  below. \n\n\nIf you use other service providers and have problem of setting up the OpenVPN, please contact \nsupport@gl-inet.com\n\n\nOpenVPN Service providers:\n\n\nService providers are list according to their names as below,\n\n\nA - D\n\n\nAirVPN\n\n\nhttps://airvpn.org/?referred_by=402389\n\n\n\n\nLogin your AirVPN acoount\n\n\n\n\n\n\n\u200b\n\n\n\n\nChoose Config Generator on the left and then choose Linux as your operating system. Next, choose your preferred server.\n\n\n\n\n\n\n\u200b\n\n\n\n\nYou will be able to see the download page of the configuration file.\n\n\n\n\n\n\n\u200b\n\n\n\n\nAstrill\n\n\nhttps://www.astrill.com/\n\n\n*Information quoted from Astrill official instruction\n\n\nhttps://wiki.astrill.com/Astrill_Setup_Manual:How_to_configure_OpenVPN_with_OpenVPN_application_on_Windows\n\n\n\n\nGenerate and Download Astrill Openvpn configuration ZIP\n\n\n\n\n\n\n\n\n\u200b\n\n\n\n\nType a Description like OPENVPN_GUI.\n\n\n\n\n\u200b\n\n\n\n\nClick on ADD to my certificates button.\n\n\n\n\n\n\n\u200b\n\n\n\n\nOnce OpenVPN certificate is added, click on Download button.\n\n\n\n\n\n\n\u200b\n\n\n\n\nCactusVPN\n\n\nhttps://www.cactusvpn.com/\n\n\nDownload directly from: https://www.cactusvpn.com/downloads/\n\n\n\n\n\n\nE - H\n\n\nExpressVPN\n\n\nhttps://www.expressvpn.com/\n\n\n*Information quoted from ExpressVPN official instruction.\nhttps://www.expressvpn.com/support/vpn-setup/manual-config-for-linux-with-openvpn/#download\n\n\n\n\nLog in to your account.\n\n\n\n\n\n\n\u200b\n\n\n\n\nOnce you\u2019ve logged in to the website, click on Set Up ExpressVPN on the Active Subscriptions page. This will take you to the Downloads page.\n\n\n\n\n\n\n\u200b\n\n\n\n\nClick on Manual Config on the left side of the screen and then select the OpenVPN tab on the right. You will first see your username and password and then a list of OpenVPN configuration files.\n\n\n\n\nFind the location(s) you want to connect to (e.g., Los Angeles, New York, Hong Kong), then download and save the .ovpn file(s) to your desktop.\n\n\nNote: Please have your username and password ready, as you will be asked to enter them later in the setup process.\n\n\n\n\n\u200b\n\n\n\n\nFinchVPN\n\n\nhttps://www.finchvpn.com/\n\n\n\n\nLogin your FinchVPN account via https://www.finchvpn.com/login.\n\n\n\n\n\n\n\u200b\n\n\n\n\nGo to the Download page and click Download under FinchVPN OpenVPN Config.\n\n\n\n\n\n\n\u200b\n\n\n\n\nChoose Linux\n\n\n\n\n\n\n\u200b\n\n\n\n\nChoose the protocol based on your preference. Generally, you can choose the first one \u201cPort 8484 over UDP\u201d\n\n\n\n\n\n\n\u200b\n\n\n\n\nRemember to tick the box to include your username and password before download the file.\n\n\n\n\n\n\n\u200b\n\n\n\n\nFree VPN Software\n\n\nhttp://freevpnsoftware.net/\n\n\nDownload by right click the links below and save as.\nUS Server: http://freevpnsoftware.net/downloads/US.freevpnsoftware.net.ovpn\nUK Server: http://freevpnsoftware.net/downloads/UK.freevpnsoftware.net.ovpn\n\n\n\n\nHideMyAss\n\n\nhttps://www.hidemyass.com/\n\n\nDownload directly from: http://hidemyass.com/vpn-config/vpn-configs.zip\n\n\n\n\nI - P\n\n\nIvacy\n\n\nhttps://billing.ivacy.com/page/22852\n\n\nDownload directly from: https://s3.amazonaws.com/ivacy-apps/openvpn-files/OpenVPN-Configs.zip\n\n\n\n\nNordVPN\n\n\nhttps://go.nordvpn.net/aff_c?offer_id=15\naff_id=12016\nurl_id=902\n\n\nDownload directly from: \nhttps://downloads.nordcdn.com/configs/archives/servers/ovpn.zip\n\n\n\n\nPIA\n\n\nhttps://www.privateinternetaccess.com/pages/buy-vpn/glinet\n\n\nDownload directly from: \nhttps://www.privateinternetaccess.com/openvpn/openvpn.zip\n\n\n\n\nProxy.sh\n\n\nhttps://proxy.sh/panel/aff.php?aff=1458\n\n\nDownload according to the service that you have subscribed:\n\n\nFor $2 customers:https://proxy.sh/s/openvpn\n\n\nFor $5 customers:https://proxy.sh/m/openvpn\n\n\nFor $10 customers: https://proxy.sh/l/openvpn\n\n\nFor $20 customers:https://proxy.sh/p/openvpn\n\n\n\n\nProxpn\n\n\nhttps://secure.proxpn.com/?a_aid=5ac450e27df6f\n\n\n\n\nDownload the file here: \nhttps://www.proxpn.com/proxpn_mac_source.tar.gz. \n\n\n\n\nExtract the file. From the folder \u201cMaxOSX\u201d, find and open the folder \u201cconfig\u201d and then \u201cssl\u201d. You will see 3 files and 1 folder. Copy these 3 files \u201cca.crt\u201d, \u201cclient.crt\u201d, \u201cclient.key\u201d and paste them into the folder \u201cconfig\u201d.\n\n\n\n\n\n\nOpen \u201cproxpn.ovpn\u201d with text editor and delete the \u201c#\u201d in line 4.\n\n\n\n\n\n\nYou can also change to other services, including:\n\n\n```\n   uk.proxpn.com - United Kingdom\n   nl.proxpn.com - Netherlands\n   sg.proxpn.com - Singapore\n   seattle.proxpn.com - Seattle\n   miami.proxpn.com - Miami\n\n\n```\n\n\n\n\nZip them into one file and upload to the router.\n\n\n\n\n\n\n\n\nPureVPN\n\n\nhttps://billing.purevpn.com/aff.php?aff=35535\n\n\nDownload directly from: \nhttps://s3-us-west-1.amazonaws.com/heartbleed/linux/linux-files.zip\n\n\n\n\nS - T\n\n\nSaferVPN\n\n\nhttps://safervpn.com/?a_aid=563\n\n\nDownload directly from:\nhttps://www.safervpn.com/support/articles/214036025-What-are-SaferVPN-s-OpenVPN-configuration-files-for-manual-setup-\n\n\n\n\n\n\nStrongVPN\n\n\nhttps://strongvpn.com/\n\n\n\n\nLogin with your StrongVPN account and then you will be able to see the summary of your VPN account. Click \u201cChange Server\u201d.\n\n\n\n\n\n\n\u200b\n\n\n\n\nFilter the servers by clicking OPEN and choose one of the server from the list.\n\n\n\n\n\n\n\u200b\n\n\n\u200b\n\n\n\n\n\u200b\n\n\n\n\nGo back to accounts summary and click Account Setup Instructions.\n\n\n\n\n\n\n\u200b\n\n\n\n\nClick Linux/Max config file.\n\n\n\n\n\n\n\u200b\n\n\n\n\nTCPVPN\n\n\nhttps://www.tcpvpn.com/home\n\n\n\n\nYou can find different servers on their webpage: https://www.tcpvpn.com/home. Choose your preferred server.\n\n\n\n\n\n\n\u200b\n\n\n\n\nChoose your preferred server location.\n\n\n\n\n\n\n\u200b\n\n\n\n\nYou will see the download page of the configuration file. Click Dowload Config (.ovpv).\n\n\n\n\n\n\n\u200b\n\n\n\n\nTorGuard\n\n\nhttps://torguard.net/\n\n\n\n\n\n\nIf you are using TorGuard, you need to login the control panel and generate the ovpn file from the \"Tools\" menu. Please select \"All\", using udp or tcp and select Cipher. Then press \nGenerate Config\n and the zip file will be downloaded automatically.\n\n\n\n\n\n\nThe username and password for openvpn connection is different from your control panel login. You can change the service username and password in Security manual. You can generate a random login username and password.\n\n\n\n\n\n\n\n\nTotalVPN\n\n\nhttps://www.totalvpn.com\n\n\nDownload directly from: https://pseudio.freshdesk.com/helpdesk/attachments/8005828145\n\n\n\n\nV - W\n\n\nVPN.AC\n\n\nhttps://vpn.ac/aff.php?aff=1424\n\n\nDownload directly from: https://vpn.ac/ovpn/\n\n\n\n\n\n\nVPNBook\n\n\nhttps://www.vpnbook.com/\n\n\nThe OpenVPN configuration files are available on the website of VPNBook: https://www.vpnbook.com/. \nThe username and password are listed below the download link.\n\n\n\n\n\n\nVPNGate\n\n\nhttp://www.vpngate.net/en/\n\n\nThe OpenVPN configuration files are listed on the VPN Gate website: http://www.vpngate.net/en/\naccording to the server location.\n\n\n\n\nClick OpenVPN Config file under the column \u201cOpenVPN\u201d.\n\n\n\n\n\n\n\u200b\n\n\n\n\nYou will see the download page.\n\n\n\n\n\n\n\u200b\n\n\n\n\nVPN Unlimited\n\n\nhttps://www.vpnunlimitedapp.com/en\n\n\n*Information quoted from VPN unlimited official instruction\nhttps://www.vpnunlimitedapp.com/en/info/manuals/how-to-manually-create-vpn-conf\n\n\nStart out by logging in to your User Office, press Manage for the VPN Unlimited service, and follow a few simple steps:\n\n\n\n\nSelect a device\n\n\n\n\nPick a device from the list or create a new one. If you are out of free slots, delete an old device or buy extra slots.\n\n\n\n\n\u200b\n\n\n\n\n\n\nChoosethe desired server location\n\n\nVPN Unlimited offers a large variety ofservers, namely 400+ in 70+ locations. In this case, let it be Germany.\n\n\n\n\n\n\n\u200b\n\n\n\n\nSelect the VPN protocol\n\n\n\n\nFor the IKEv2 protocol, you will also need to specify your device\u2019s platform.\n\n\n\n\n\u200b\n\n\n\n\nCreate a configuration\n\n\n\n\nPress Generate and you will get all the data required to set up a VPN connection.\n\n\n\n\nOpenVPN Compatibilities\n\n\nWe have checked a number of public vpn service providers and tested the compatibilities. What you need to do is purchase a subscription from them and download the ovpn files.\n\n\nHere is a list of compatible services (v2.20).\n\n\nNote: For service issues, please contact the service provider directly.\n\n\n\n\nTorGuard,\nhttps://torguard.net/\n\n\nAstrill, https://www.astrill.com\n\n\nFinchVPN, https://www.finchvpn.com/\n\n\nFree Vpn Software, http://freevpnsoftware.net/\n\n\nVPNBook, http://www.vpnbook.com/\n\n\nVPNGate, http://www.vpngate.net/\n\n\nVPN Area, https://vpnarea.com\n\n\nNordVPN, \nhttps://go.nordvpn.net\n\n\nPIA, \nhttps://www.privateinternetaccess.com\n\n\nPureVPN, https://www.purevpn.com/\n\n\nTotalVPN, https://www.totalvpn.com\n\n\nStrong VPN, http://strongvpn.com/\n\n\nHideMyAss, https://www.hidemyass.com\n\n\nProxy.sh, \nhttps://proxy.sh\n\n\nTCPVPN, https://www.tcpvpn.com\n\n\nVpn.AC, \nhttps://vpn.ac\n\n\nProxpn, \nhttps://secure.proxpn.com\n\n\nExpressVPN, https://www.expressvpn.com/\n\n\nAirvpn, \nhttps://airvpn.org\n\n\nCactusVpn, https://www.cactusvpn.com/\n\n\nSaferVPN, \nhttps://safervpn.com\n\n\nIvacy, \nhttps://billing.ivacy.com\n\n\n\n\nDiscussions", 
            "title": "OpenVPN Client"
        }, 
        {
            "location": "/app/openvpn/#openvpn-client-setting", 
            "text": "This docs is only related to OpenVPN client.  OpenVPN client is pre-installed in GL.iNet routers GL-AR150, GL-AR300M, GL-MT300N, GL-MT300A, GL-USB150, GL-AR750, GL-B1300 from firmware v2.19.  Download the firmware for each devices: http://downlaod.gl-inet.com/firmware/  The newest firmware maybe put in testing folder: http://download.gl-inet.com/firmware/testing/  Note: You need to subscribe your own VPN service and get an OpenVPN configuration file (.ovpn) from your service provider. If you have subscribed but don't know how to download the configuration file, please read the section \"How to get the configuration file\".  This guide assumes that you have set up the router properly.", 
            "title": "OpenVPN Client Setting"
        }, 
        {
            "location": "/app/openvpn/#1-create-an-openvpn-connection", 
            "text": "", 
            "title": "1. Create an OpenVPN connection"
        }, 
        {
            "location": "/app/openvpn/#1-go-to-openvpn-page", 
            "text": "Click the OpenVPN icon on the toolbar. It will ask you to upload the configuration files. This file can be a single .ovpn file or a zip/tar.gz file which contains multiple .ovpn files.  Be careful that some .ovpn files use separated ca, cert, crl files. These files must be zipped together with the .ovpn file before upload.", 
            "title": "1) Go to OpenVPN page"
        }, 
        {
            "location": "/app/openvpn/#2-upload-your-configuration-file", 
            "text": "Simply Drap and drop your file to the area indicated so that it will be uploaded to the router automatically. Next, the router will start to check the file. Refresh the page when you see the file has been successfully uploaded and the .ovpn file has been imported.   For zip/tar.gz file, the router will unzip the zip/tar.gz file  and check each .ovpn file inside.   In some cases, it will ask you to enter your username and password. This usually happen when your configuration file can be downloaded without login your personal account.", 
            "title": "2) Upload your configuration file"
        }, 
        {
            "location": "/app/openvpn/#3-connect-to-the-openvpn-server", 
            "text": "After refreshing the page, you will be able to configure the OpenVPN connection.   Please create the VPN connection by following the steps below:   Check \"Enable\".  Check \"Force VPN\" if you want to force all Internet traffic to go through VPN. However, you will lose Internet access if the VPN is disconnected.  Then choose a .ovpn file which you want to use.  Now click \"Apply\"   The router will show the connection progress. Once it is connected, you will be able to see data sent and received.", 
            "title": "3) Connect to the OpenVPN server"
        }, 
        {
            "location": "/app/openvpn/#2-manage-ovpn-files", 
            "text": "From firmware  v2.20 , there is a simple ovpn manager where you can check the current list of ovpn files. You can purge all the files and start to use another vpn service.  We would like to add more functions in the ovpn manager, you can send us a wish list via email or in the forum. Some proposed functions (this doesn't mean this feature will come in the near future) include:   Server and port probe: to detect if the server is online. This is useful if you are in a censored area and some servers are not accessible at all. But this process is very time consuming.  To intergrate ovpn files into one. Generally the VPN service providers provides one ovpn file for each server then you will have hundreds of ovpn file. You can integrate these files into one and let the router to connect to a random sever.  Delete, order and ranking servers. Now we don't have a algorithms to rank the servers, as you will not know the speed unless you try. We can record the speed if you have tried.  Manage multiple VPN services. While most people just use one service, we don't know if this is necessary.", 
            "title": "2. Manage ovpn files"
        }, 
        {
            "location": "/app/openvpn/#3-get-the-config-file", 
            "text": "We have tested different VPN service providers. Therefore, if you don't know how to get the configuration file, you can follow the instruction below according to your service provider. However, you have to contact your service provider for the configuration file if they haven't been listed  below.   If you use other service providers and have problem of setting up the OpenVPN, please contact  support@gl-inet.com", 
            "title": "3. Get the config File"
        }, 
        {
            "location": "/app/openvpn/#openvpn-service-providers", 
            "text": "Service providers are list according to their names as below,", 
            "title": "OpenVPN Service providers:"
        }, 
        {
            "location": "/app/openvpn/#a-d", 
            "text": "", 
            "title": "A - D"
        }, 
        {
            "location": "/app/openvpn/#airvpn", 
            "text": "https://airvpn.org/?referred_by=402389   Login your AirVPN acoount    \u200b   Choose Config Generator on the left and then choose Linux as your operating system. Next, choose your preferred server.    \u200b   You will be able to see the download page of the configuration file.    \u200b", 
            "title": "AirVPN"
        }, 
        {
            "location": "/app/openvpn/#astrill", 
            "text": "https://www.astrill.com/  *Information quoted from Astrill official instruction  https://wiki.astrill.com/Astrill_Setup_Manual:How_to_configure_OpenVPN_with_OpenVPN_application_on_Windows   Generate and Download Astrill Openvpn configuration ZIP     \u200b   Type a Description like OPENVPN_GUI.   \u200b   Click on ADD to my certificates button.    \u200b   Once OpenVPN certificate is added, click on Download button.    \u200b", 
            "title": "Astrill"
        }, 
        {
            "location": "/app/openvpn/#cactusvpn", 
            "text": "https://www.cactusvpn.com/  Download directly from: https://www.cactusvpn.com/downloads/", 
            "title": "CactusVPN"
        }, 
        {
            "location": "/app/openvpn/#e-h", 
            "text": "", 
            "title": "E - H"
        }, 
        {
            "location": "/app/openvpn/#expressvpn", 
            "text": "https://www.expressvpn.com/  *Information quoted from ExpressVPN official instruction.\nhttps://www.expressvpn.com/support/vpn-setup/manual-config-for-linux-with-openvpn/#download   Log in to your account.    \u200b   Once you\u2019ve logged in to the website, click on Set Up ExpressVPN on the Active Subscriptions page. This will take you to the Downloads page.    \u200b   Click on Manual Config on the left side of the screen and then select the OpenVPN tab on the right. You will first see your username and password and then a list of OpenVPN configuration files.   Find the location(s) you want to connect to (e.g., Los Angeles, New York, Hong Kong), then download and save the .ovpn file(s) to your desktop.  Note: Please have your username and password ready, as you will be asked to enter them later in the setup process.   \u200b", 
            "title": "ExpressVPN"
        }, 
        {
            "location": "/app/openvpn/#finchvpn", 
            "text": "https://www.finchvpn.com/   Login your FinchVPN account via https://www.finchvpn.com/login.    \u200b   Go to the Download page and click Download under FinchVPN OpenVPN Config.    \u200b   Choose Linux    \u200b   Choose the protocol based on your preference. Generally, you can choose the first one \u201cPort 8484 over UDP\u201d    \u200b   Remember to tick the box to include your username and password before download the file.    \u200b", 
            "title": "FinchVPN"
        }, 
        {
            "location": "/app/openvpn/#free-vpn-software", 
            "text": "http://freevpnsoftware.net/  Download by right click the links below and save as.\nUS Server: http://freevpnsoftware.net/downloads/US.freevpnsoftware.net.ovpn\nUK Server: http://freevpnsoftware.net/downloads/UK.freevpnsoftware.net.ovpn", 
            "title": "Free VPN Software"
        }, 
        {
            "location": "/app/openvpn/#hidemyass", 
            "text": "https://www.hidemyass.com/  Download directly from: http://hidemyass.com/vpn-config/vpn-configs.zip", 
            "title": "HideMyAss"
        }, 
        {
            "location": "/app/openvpn/#i-p", 
            "text": "", 
            "title": "I - P"
        }, 
        {
            "location": "/app/openvpn/#ivacy", 
            "text": "https://billing.ivacy.com/page/22852  Download directly from: https://s3.amazonaws.com/ivacy-apps/openvpn-files/OpenVPN-Configs.zip", 
            "title": "Ivacy"
        }, 
        {
            "location": "/app/openvpn/#nordvpn", 
            "text": "https://go.nordvpn.net/aff_c?offer_id=15 aff_id=12016 url_id=902  Download directly from:  https://downloads.nordcdn.com/configs/archives/servers/ovpn.zip", 
            "title": "NordVPN"
        }, 
        {
            "location": "/app/openvpn/#pia", 
            "text": "https://www.privateinternetaccess.com/pages/buy-vpn/glinet  Download directly from:  https://www.privateinternetaccess.com/openvpn/openvpn.zip", 
            "title": "PIA"
        }, 
        {
            "location": "/app/openvpn/#proxysh", 
            "text": "https://proxy.sh/panel/aff.php?aff=1458  Download according to the service that you have subscribed:  For $2 customers:https://proxy.sh/s/openvpn  For $5 customers:https://proxy.sh/m/openvpn  For $10 customers: https://proxy.sh/l/openvpn  For $20 customers:https://proxy.sh/p/openvpn", 
            "title": "Proxy.sh"
        }, 
        {
            "location": "/app/openvpn/#proxpn", 
            "text": "https://secure.proxpn.com/?a_aid=5ac450e27df6f   Download the file here:  https://www.proxpn.com/proxpn_mac_source.tar.gz.    Extract the file. From the folder \u201cMaxOSX\u201d, find and open the folder \u201cconfig\u201d and then \u201cssl\u201d. You will see 3 files and 1 folder. Copy these 3 files \u201cca.crt\u201d, \u201cclient.crt\u201d, \u201cclient.key\u201d and paste them into the folder \u201cconfig\u201d.    Open \u201cproxpn.ovpn\u201d with text editor and delete the \u201c#\u201d in line 4.    You can also change to other services, including:  ```\n   uk.proxpn.com - United Kingdom\n   nl.proxpn.com - Netherlands\n   sg.proxpn.com - Singapore\n   seattle.proxpn.com - Seattle\n   miami.proxpn.com - Miami  ```   Zip them into one file and upload to the router.", 
            "title": "Proxpn"
        }, 
        {
            "location": "/app/openvpn/#purevpn", 
            "text": "https://billing.purevpn.com/aff.php?aff=35535  Download directly from:  https://s3-us-west-1.amazonaws.com/heartbleed/linux/linux-files.zip", 
            "title": "PureVPN"
        }, 
        {
            "location": "/app/openvpn/#s-t", 
            "text": "", 
            "title": "S - T"
        }, 
        {
            "location": "/app/openvpn/#safervpn", 
            "text": "https://safervpn.com/?a_aid=563  Download directly from:\nhttps://www.safervpn.com/support/articles/214036025-What-are-SaferVPN-s-OpenVPN-configuration-files-for-manual-setup-", 
            "title": "SaferVPN"
        }, 
        {
            "location": "/app/openvpn/#strongvpn", 
            "text": "https://strongvpn.com/   Login with your StrongVPN account and then you will be able to see the summary of your VPN account. Click \u201cChange Server\u201d.    \u200b   Filter the servers by clicking OPEN and choose one of the server from the list.    \u200b  \u200b   \u200b   Go back to accounts summary and click Account Setup Instructions.    \u200b   Click Linux/Max config file.    \u200b", 
            "title": "StrongVPN"
        }, 
        {
            "location": "/app/openvpn/#tcpvpn", 
            "text": "https://www.tcpvpn.com/home   You can find different servers on their webpage: https://www.tcpvpn.com/home. Choose your preferred server.    \u200b   Choose your preferred server location.    \u200b   You will see the download page of the configuration file. Click Dowload Config (.ovpv).    \u200b", 
            "title": "TCPVPN"
        }, 
        {
            "location": "/app/openvpn/#torguard", 
            "text": "https://torguard.net/    If you are using TorGuard, you need to login the control panel and generate the ovpn file from the \"Tools\" menu. Please select \"All\", using udp or tcp and select Cipher. Then press  Generate Config  and the zip file will be downloaded automatically.    The username and password for openvpn connection is different from your control panel login. You can change the service username and password in Security manual. You can generate a random login username and password.", 
            "title": "TorGuard"
        }, 
        {
            "location": "/app/openvpn/#totalvpn", 
            "text": "https://www.totalvpn.com  Download directly from: https://pseudio.freshdesk.com/helpdesk/attachments/8005828145", 
            "title": "TotalVPN"
        }, 
        {
            "location": "/app/openvpn/#v-w", 
            "text": "", 
            "title": "V - W"
        }, 
        {
            "location": "/app/openvpn/#vpnac", 
            "text": "https://vpn.ac/aff.php?aff=1424  Download directly from: https://vpn.ac/ovpn/", 
            "title": "VPN.AC"
        }, 
        {
            "location": "/app/openvpn/#vpnbook", 
            "text": "https://www.vpnbook.com/  The OpenVPN configuration files are available on the website of VPNBook: https://www.vpnbook.com/. \nThe username and password are listed below the download link.", 
            "title": "VPNBook"
        }, 
        {
            "location": "/app/openvpn/#vpngate", 
            "text": "http://www.vpngate.net/en/  The OpenVPN configuration files are listed on the VPN Gate website: http://www.vpngate.net/en/\naccording to the server location.   Click OpenVPN Config file under the column \u201cOpenVPN\u201d.    \u200b   You will see the download page.    \u200b", 
            "title": "VPNGate"
        }, 
        {
            "location": "/app/openvpn/#vpn-unlimited", 
            "text": "https://www.vpnunlimitedapp.com/en  *Information quoted from VPN unlimited official instruction\nhttps://www.vpnunlimitedapp.com/en/info/manuals/how-to-manually-create-vpn-conf  Start out by logging in to your User Office, press Manage for the VPN Unlimited service, and follow a few simple steps:   Select a device   Pick a device from the list or create a new one. If you are out of free slots, delete an old device or buy extra slots.   \u200b    Choosethe desired server location  VPN Unlimited offers a large variety ofservers, namely 400+ in 70+ locations. In this case, let it be Germany.    \u200b   Select the VPN protocol   For the IKEv2 protocol, you will also need to specify your device\u2019s platform.   \u200b   Create a configuration   Press Generate and you will get all the data required to set up a VPN connection.", 
            "title": "VPN Unlimited"
        }, 
        {
            "location": "/app/openvpn/#openvpn-compatibilities", 
            "text": "We have checked a number of public vpn service providers and tested the compatibilities. What you need to do is purchase a subscription from them and download the ovpn files.  Here is a list of compatible services (v2.20).  Note: For service issues, please contact the service provider directly.   TorGuard, https://torguard.net/  Astrill, https://www.astrill.com  FinchVPN, https://www.finchvpn.com/  Free Vpn Software, http://freevpnsoftware.net/  VPNBook, http://www.vpnbook.com/  VPNGate, http://www.vpngate.net/  VPN Area, https://vpnarea.com  NordVPN,  https://go.nordvpn.net  PIA,  https://www.privateinternetaccess.com  PureVPN, https://www.purevpn.com/  TotalVPN, https://www.totalvpn.com  Strong VPN, http://strongvpn.com/  HideMyAss, https://www.hidemyass.com  Proxy.sh,  https://proxy.sh  TCPVPN, https://www.tcpvpn.com  Vpn.AC,  https://vpn.ac  Proxpn,  https://secure.proxpn.com  ExpressVPN, https://www.expressvpn.com/  Airvpn,  https://airvpn.org  CactusVpn, https://www.cactusvpn.com/  SaferVPN,  https://safervpn.com  Ivacy,  https://billing.ivacy.com", 
            "title": "OpenVPN Compatibilities"
        }, 
        {
            "location": "/app/openvpn/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/app/tor/", 
            "text": "Using Tor in OpenWrt and GLi Routers\n\n\nFree Tor firmware for all\n\n\n!!! Note\n\n\nThis Tor firmware is totally free and no warranty.\n Refer to the forum for help!\n\n\nTo use the Tor firmware:\n\n\n\n\nDownload the correct firmware for your router.\n\n\nFlash it to the router according to \nthis guide\n, DO NOT reserve settings.\n\n\n\n\nIf you brick your router after flashing the wrong firmware or wrong way, please use uboot failsafe to debrick the router. \n\n\nVersions and supported devices\n\n\nWe have several version of Tor firmware and here is the summary. \n\n\nVersion 2.264:\n\n\nWe have upgrade Tor firmware for the following models to v2.264 on 2017-11-24.\n\n\nAR150, AR300M, AR300M Nand, MT300N, MT300A, MT300N-V2\n\n\nNow Tor firmware is generally by imagebuilder and you will be able to install from standard GLi software repositories using opkg. The source code is on \ngithub\n now.\n\n\nTo modify and compile the Tor firmware by yourself, please refer to the following imagebuilders.\n\n\n\n\nimagebuilder for AR150, AR300M, MiFi, 6416\n based on OpenWrt CC 1505\n\n\nimagebuilder for AR300M Nand\n based on OpenWrt CC 1505\n\n\nimagebuilder for MT300N, MT300A\n based on OpenWrt CC 1505\n\n\nimagebuilder for MT300N-V2\n based on LEDE 17.01.4\n\n\n\n\nVersion 1.4:\n\n\nOnly support \nGL-AR150\n, \nGL-AR300M\n, \nGL-MT300N\n, \nGL-MT300A\n, which has a \nswitch button\n controlling whether you traffice should go through Tor or not.\n\n\nMost of these instructions are for version 1.4.\n\n\nVersion 1.3:\n\n\nSupport \nGL-AR150\n,\nGL.iNet6416\n, \nGL-AR300\n. This firmware create two ssid: OpenWrt and Tor. If you conenct to OpenWrt you will have normal Internet. If you connect to Tor, you will be connect to Tor network. This firmware has a built-in UI based on Domino Pi which you can manage two SSIDs.\n\n\nVersion 1.0 with Luci:\n\n\nSupport \nGL-MT300A\n and \nGL-MT300N\n. This is the firmware created for MT300A and MT300N with Luci. This firmware create two ssid: OpenWrt and Tor. If you conenct to OpenWrt you will have normal Internet. If you connect to Tor, you will be connect to Tor network. Connection from LAN port will always have Tor. Luci is installed but there is no Domino Pi UI.\n\n\n!!! Note\n\n\nIf you have questions about versions, please ask here or in the forum.\n\n\nDownload and Flashing the firmware to the device\n\n\nAll the firmwares is available at \nhttp://download.gl-inet.com/firmware/\n\nFind your device name and then \"tor\" folder. Download the newest firmware.\n\n\nYou need to refer to \nthis guide\n for instructions to flash the firmware to the router. \n\n\n\n\n\n\n\n\nModel\n\n\nTor firmware path\n\n\nNewest Version\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nGL.iNet6416\n\n\nhttp://download.gl-inet.com/firmware/6416/tor/\n\n\n1.3\n\n\n\n\n\n\n\n\nAR150\n\n\nhttp://download.gl-inet.com/firmware/ar150/tor/\n\n\n2.264\n\n\n\n\n\n\n\n\nAR300M\n\n\nhttp://download.gl-inet.com/firmware/ar300m/nand/tor/\n\n\n2.264\n\n\n.rar is for web upgrade .img is for uboot upgrade\n\n\n\n\n\n\nAR300M-Nor\n\n\nhttp://download.gl-inet.com/firmware/ar300m/tor/\n\n\n2.264\n\n\n\n\n\n\n\n\nMT300N\n\n\nhttp://download.gl-inet.com/firmware/mt300n/tor/\n\n\n2.264\n\n\n\n\n\n\n\n\nMT300A\n\n\nhttp://download.gl-inet.com/firmware/mt300a/tor/\n\n\n2.264\n\n\n\n\n\n\n\n\nGL-MiFi\n\n\nhttp://download.gl-inet.com/firmware/ar150/tor/\n\n\n1.3\n\n\nMiFi don't have a Tor firmware itself. Use AR150 1.3 instead\n\n\n\n\n\n\nGL-AR300\n\n\nhttp://download.gl-inet.com/firmware/ar300/tor/\n\n\n1.3\n\n\n\n\n\n\n\n\nGL-MT750\n\n\nNot supported yet\n\n\n\n\n\n\n\n\n\n\nAR750\n\n\nNot supported yet\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the firmware UI\n\n\nAfter you flash the firmware to your device, when it reboots you need to set up the device at \nhttp://192.168.8.1\n. \n\n\nIf\n you need to connect via WiFi, the default wifi password is \ngoodlife\n.\n\n\n!!! NOTE \n\n\nYou need to move the hardware switch to the right side if you want to access the UI\n. Otherwise you are connecting to the Tor network and will not be able to access the UI. This is for security reasons.\n\n\nFirst time setup\n\n\nThe first time you acess the setting UI, you will be asked to setup a new password immediatelly. Just choose a password and your TimeZone and submit. The device will \nNOT\n reboot in firmware 1.4.\n\n\nNOTE: \nThis doesn't change your WiFi password. Change it later.\n\n\n\n\nLogin\n\n\nYou will be asked to login using your \nNEW\n password now.\n\n\n\n\nHomepage\n\n\nThe UI is based on Domino Pi. It is quite simple. In your homepage you will be displayed with:\n\n\n\n\nYour network status\n\n\nTor status. Please note if your tor reconnects this information may not be accurate. \n\n\nUsage of your flash\n\n\n\n\n\n\nSystem and firmware upgrade\n\n\nYou can click the \nSYSTEM\n button from the left sidebar to view the system information, including:\n\n\n\n\nYour router's name\n\n\nChange your password\n\n\nChange your timezone\n\n\nCheck your firmware version and upgrade it, from online or mannually.\n\n\n\n\n\n\nIf the firmware on our website is newer, you can click \nDownload\n and follow the instructions to upgrade the firmware.\n\n\n\n\nNetwork Settings\n\n\nClick the \nNETWORK\n button on the left sidebar to view and change the network settings, including:\n\n\n\n\nInternet protocol: \ndhcp\n, \nstatic\n, \npppoe\n, \n3g\n, \ntethering\n or \nrepeater\n. Tethering only works in Android phones.\n\n\nWireless parameters: \nssid\n, \nencryption\n and \npasssword\n\n\nLAN IP\n\n\n\n\n\n\n3G 4G settings\n\n\nIf you connect a 3G or 4G USB modem, you can set the internet to the modem. You need to choose \n3G\n as protocol, choose modem device, usually \n/dev/ttyUSBx\n, choose \numts\n or \nevdo\n, then input your \napn\n etc. \n\n\n\n\nRepeater settings. It will search for available ssid automatically. You need to choose ssid and type your password. \n\n\n!!! NOTE \n\n\nThis firmware don't have repeater manager as our stock firmware.\n If you move to another location, your wifi maybe not work and you need to re-setup. Refer to the button action section in this page.\n\n\n\n\nLuci\n\n\nClick the \nLUCI\n button on the left sidebar you can have the LUCI UI. You can go back to Domino UI by clicking the \nDomino Web Panel\n link on the bottom right corner.\n\n\n\n\nReset button and hardware switch usage\n\n\nReset button and switch is assigned special functions.\n\n\n\n\nReset\n\n\n\n\nWhen you press down the reset button, the middle LED will start to flash once per second. Release your finger if the LED just flashed once (1 seconds), the Tor will try to change a new Exit node.\n\n\nIf you keep the button pressed for 3 seconds, it will flash quicker, twice per second. Now release your finger your network will reset, including disable repeater, set lanip back to 192.168.8.1 and enable dhcp. \nUse this function if your repeater cannot connect which causes your wifi down\n\n\nWhen you keep holding the reset button for 8 seconds, the middle LED will start to flash even quicker, 4 times per seconds. Release your finger now, your firmware will revert to factory status and reboot.\n\n\n\n\nSwitch\n\n\n\n\nLeft side: You will be connected to \nTor network\n. \nYou cannot access the admin UI.\n\n\nRigth side: \nNormal Internet\n. You will be able to access the admin UI.", 
            "title": "Tor"
        }, 
        {
            "location": "/app/tor/#using-tor-in-openwrt-and-gli-routers", 
            "text": "Free Tor firmware for all  !!! Note  This Tor firmware is totally free and no warranty.  Refer to the forum for help!  To use the Tor firmware:   Download the correct firmware for your router.  Flash it to the router according to  this guide , DO NOT reserve settings.   If you brick your router after flashing the wrong firmware or wrong way, please use uboot failsafe to debrick the router.", 
            "title": "Using Tor in OpenWrt and GLi Routers"
        }, 
        {
            "location": "/app/tor/#versions-and-supported-devices", 
            "text": "We have several version of Tor firmware and here is the summary.", 
            "title": "Versions and supported devices"
        }, 
        {
            "location": "/app/tor/#version-2264", 
            "text": "We have upgrade Tor firmware for the following models to v2.264 on 2017-11-24.  AR150, AR300M, AR300M Nand, MT300N, MT300A, MT300N-V2  Now Tor firmware is generally by imagebuilder and you will be able to install from standard GLi software repositories using opkg. The source code is on  github  now.  To modify and compile the Tor firmware by yourself, please refer to the following imagebuilders.   imagebuilder for AR150, AR300M, MiFi, 6416  based on OpenWrt CC 1505  imagebuilder for AR300M Nand  based on OpenWrt CC 1505  imagebuilder for MT300N, MT300A  based on OpenWrt CC 1505  imagebuilder for MT300N-V2  based on LEDE 17.01.4", 
            "title": "Version 2.264:"
        }, 
        {
            "location": "/app/tor/#version-14", 
            "text": "Only support  GL-AR150 ,  GL-AR300M ,  GL-MT300N ,  GL-MT300A , which has a  switch button  controlling whether you traffice should go through Tor or not.  Most of these instructions are for version 1.4.", 
            "title": "Version 1.4:"
        }, 
        {
            "location": "/app/tor/#version-13", 
            "text": "Support  GL-AR150 , GL.iNet6416 ,  GL-AR300 . This firmware create two ssid: OpenWrt and Tor. If you conenct to OpenWrt you will have normal Internet. If you connect to Tor, you will be connect to Tor network. This firmware has a built-in UI based on Domino Pi which you can manage two SSIDs.", 
            "title": "Version 1.3:"
        }, 
        {
            "location": "/app/tor/#version-10-with-luci", 
            "text": "Support  GL-MT300A  and  GL-MT300N . This is the firmware created for MT300A and MT300N with Luci. This firmware create two ssid: OpenWrt and Tor. If you conenct to OpenWrt you will have normal Internet. If you connect to Tor, you will be connect to Tor network. Connection from LAN port will always have Tor. Luci is installed but there is no Domino Pi UI.  !!! Note  If you have questions about versions, please ask here or in the forum.", 
            "title": "Version 1.0 with Luci:"
        }, 
        {
            "location": "/app/tor/#download-and-flashing-the-firmware-to-the-device", 
            "text": "All the firmwares is available at  http://download.gl-inet.com/firmware/ \nFind your device name and then \"tor\" folder. Download the newest firmware.  You need to refer to  this guide  for instructions to flash the firmware to the router.      Model  Tor firmware path  Newest Version  Note      GL.iNet6416  http://download.gl-inet.com/firmware/6416/tor/  1.3     AR150  http://download.gl-inet.com/firmware/ar150/tor/  2.264     AR300M  http://download.gl-inet.com/firmware/ar300m/nand/tor/  2.264  .rar is for web upgrade .img is for uboot upgrade    AR300M-Nor  http://download.gl-inet.com/firmware/ar300m/tor/  2.264     MT300N  http://download.gl-inet.com/firmware/mt300n/tor/  2.264     MT300A  http://download.gl-inet.com/firmware/mt300a/tor/  2.264     GL-MiFi  http://download.gl-inet.com/firmware/ar150/tor/  1.3  MiFi don't have a Tor firmware itself. Use AR150 1.3 instead    GL-AR300  http://download.gl-inet.com/firmware/ar300/tor/  1.3     GL-MT750  Not supported yet      AR750  Not supported yet", 
            "title": "Download and Flashing the firmware to the device"
        }, 
        {
            "location": "/app/tor/#using-the-firmware-ui", 
            "text": "After you flash the firmware to your device, when it reboots you need to set up the device at  http://192.168.8.1 .   If  you need to connect via WiFi, the default wifi password is  goodlife .  !!! NOTE   You need to move the hardware switch to the right side if you want to access the UI . Otherwise you are connecting to the Tor network and will not be able to access the UI. This is for security reasons.", 
            "title": "Using the firmware UI"
        }, 
        {
            "location": "/app/tor/#first-time-setup", 
            "text": "The first time you acess the setting UI, you will be asked to setup a new password immediatelly. Just choose a password and your TimeZone and submit. The device will  NOT  reboot in firmware 1.4.  NOTE:  This doesn't change your WiFi password. Change it later.", 
            "title": "First time setup"
        }, 
        {
            "location": "/app/tor/#login", 
            "text": "You will be asked to login using your  NEW  password now.", 
            "title": "Login"
        }, 
        {
            "location": "/app/tor/#homepage", 
            "text": "The UI is based on Domino Pi. It is quite simple. In your homepage you will be displayed with:   Your network status  Tor status. Please note if your tor reconnects this information may not be accurate.   Usage of your flash", 
            "title": "Homepage"
        }, 
        {
            "location": "/app/tor/#system-and-firmware-upgrade", 
            "text": "You can click the  SYSTEM  button from the left sidebar to view the system information, including:   Your router's name  Change your password  Change your timezone  Check your firmware version and upgrade it, from online or mannually.    If the firmware on our website is newer, you can click  Download  and follow the instructions to upgrade the firmware.", 
            "title": "System and firmware upgrade"
        }, 
        {
            "location": "/app/tor/#network-settings", 
            "text": "Click the  NETWORK  button on the left sidebar to view and change the network settings, including:   Internet protocol:  dhcp ,  static ,  pppoe ,  3g ,  tethering  or  repeater . Tethering only works in Android phones.  Wireless parameters:  ssid ,  encryption  and  passsword  LAN IP    3G 4G settings  If you connect a 3G or 4G USB modem, you can set the internet to the modem. You need to choose  3G  as protocol, choose modem device, usually  /dev/ttyUSBx , choose  umts  or  evdo , then input your  apn  etc.    Repeater settings. It will search for available ssid automatically. You need to choose ssid and type your password.   !!! NOTE   This firmware don't have repeater manager as our stock firmware.  If you move to another location, your wifi maybe not work and you need to re-setup. Refer to the button action section in this page.", 
            "title": "Network Settings"
        }, 
        {
            "location": "/app/tor/#luci", 
            "text": "Click the  LUCI  button on the left sidebar you can have the LUCI UI. You can go back to Domino UI by clicking the  Domino Web Panel  link on the bottom right corner.", 
            "title": "Luci"
        }, 
        {
            "location": "/app/tor/#reset-button-and-hardware-switch-usage", 
            "text": "Reset button and switch is assigned special functions.", 
            "title": "Reset button and hardware switch usage"
        }, 
        {
            "location": "/app/tor/#reset", 
            "text": "When you press down the reset button, the middle LED will start to flash once per second. Release your finger if the LED just flashed once (1 seconds), the Tor will try to change a new Exit node.  If you keep the button pressed for 3 seconds, it will flash quicker, twice per second. Now release your finger your network will reset, including disable repeater, set lanip back to 192.168.8.1 and enable dhcp.  Use this function if your repeater cannot connect which causes your wifi down  When you keep holding the reset button for 8 seconds, the middle LED will start to flash even quicker, 4 times per seconds. Release your finger now, your firmware will revert to factory status and reboot.", 
            "title": "Reset"
        }, 
        {
            "location": "/app/tor/#switch", 
            "text": "Left side: You will be connected to  Tor network .  You cannot access the admin UI.  Rigth side:  Normal Internet . You will be able to access the admin UI.", 
            "title": "Switch"
        }, 
        {
            "location": "/app/tether/", 
            "text": "EasyTether\n\n\nThis article is about how to tether your phone to your router by using EasyTether.\n\n\nIntro\n\n\nThere is several reasons you need to share your smartphone's data  to your router:\n\n\n\n\nCarriers tries to give you a plan with plenty of data but actually you don't need that much.\n\n\n4G speed is quite fast and it beats your home Internet speed. You can use the data for your laptop.\n\n\nUsing your phone as a hotspot directly is easy, but you cannot connect too many devices.\n\n\n\n\nIt is very easy to share your data to GL.iNet mini router using router's control interfaces, but in some phone and carrier network, they limit sharing data directly, so you can try EasyTether.\n\n\nWe will use Android OS and GL mini router to demonstrate the procedure.\n\n\nStuff you need\n\n\nEquipment\n\n\n1)     Samsung Galaxy S6 with Android OS\n\n\n2)     GL-AR150 mini router (Other models are also OK)\n\n\n3)     4G sim card\n\n\nSoftware\n\n\n1)     WinSCP (\nhttps://winscp.net/eng/download.php\n)\n\n\n\n\n2)     PuTTY (\nhttps://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html\n)\n\n\n\n\n3)     EasyTether driver openssl (\nhttp://www.mobile-stream.com/easytether/drivers.html\n)\n\n\n\n\n\u200b         \nNote: For MT300N-V2, please choose LEDE.\n\n\n\n\n4)     EasyTether Android App (Search in Google Play Store)\n\n\nProcedure\n\n\nPreparing your router\n\n\n1) Set up the router\n\n\nEnter 192.168.8.1 in your browser and get into the router web interface. Set the password which will be used for OpenWRT later. Next, update your router to the latest firmware.\n\n\n2) Transfer IPK driver package to the router\n\n\ni.\n Find out the chip of your model (for example Atheros 9531, MediaTek MT7620N, etc) from the website. It is because you have to choose the IPK driver package in the EasyTether driver file base on the chip of your router. (For GL router, you can find the information on our website: www.gl-inet.com, and we will also indicate the position of the IPK driver file for our mini router in section iv.):\n\n\n\n\nii.\n Extract the EasyTether driver file. Open WinSCP, choose SCP as the file protocol and enter the information as the figure shown below:\n\n\n\n\nYou can see the following screen once your connection has been established (left-hand side: Your PC, right-hand side: Your router):\n\n\n\n\niii.\n Go to the main folder by clicking this button.\n\n\n\n\nYou will see the directory tree of the router:\n\n\n\n\niv.\n On the left-hand side (Your PC), find the IPK file of your router in EasyTether driver file you have extracted before. On the right-hand side (Your router), open the tmp folder. Lastly, right click the IPK file and choose upload:\n\n\nNote: For Atheros chip, choose 15.05.1\\ar71xx\\generic. For MediaTeck, choose 15.05.1\\ramips\\mt7620. For other chips, please find the similar file name.\n\n\nMT300N \n MT300A: \\15.05.1\\ramips\\mt7620\\ easytether-usb-openssl_0.8.7-1_ramips_24kec.ipk\n\n\nAR150 \n AR300M: \\15.05.1\\ar71xx\\generic\\easytether-usb-openssl_0.8.7-1_ar71xx.ipk\n\n\n\n\n3) Use SSH to install EasyTether driver\n\n\ni.\n Open PuTTY, enter the IP of your router and other information as the figure shown below, then click Open:\n\n\n\n\nii.\n Login by using your username and password of the router (username: root; password: same as the one you need for entering the web interface):\n\n\nNote: The password you entered will not be showed on the screen.\n\n\n\n\niii.\n You can now update the OpenWRT modules (internet connection required) by typing:\n\n\nopkg update\n\n\nHit enter and then it will update automatically.\n\n\nNote: You can skip the update and do it after you have finished tethering.\n\n\niv.\n Install the driver by typing the following command and then hit enter:\n\n\nopkg install /tmp/filename.ipk\n\n\nNote: The filename is the file you uploaded in Procedure A)2.ii.\n\n\nv.\n Type in the following command and hit enter:\n\n\neasytether-usb\n\n\nvi.\n Copy the following command to Putty:\n\n\ncat \n EOF \n /etc/config/network\n\nconfig interface 'wan'\noption ifname 'tap-easytether'\noption proto 'dhcp'\nEOF\n\n\n\n\nNote:  To paste it into Putty, just right click the black screen and then hit enter.\n\n\nvii.\n Type in the following command to reboot your router or unplug the power cable of your router. Afterward, plug in the power cable to turn on the router.\n\n\nreboot -f\n\n\nPreparing your smart phone\n\n\n1) Enable the Developer Options\n\n\ni.\n Go to Setting -\n About Device -\n Software info. Hitting the build number several times and it will announce that you have turn on the Developer Options.\n\n\n\n\nii.\n Go to Setting -\n Developer Options, turn on the Developer Options and also the USB debugging.\n\n\n\n\n2) Start tethering\n\n\ni.\n Open EasyTether App, tick the USB button, it will show \u201cwaiting for connection from the host\u201d. \n\n\n\n\nii.\n Connect your phone to the router via USB cable. Hit OK to allow the USB debugging.\n\n\n\n\niii.\n Your connection has been established.\n\n\n\n\nYou can now connect your device to the router and access the Internet. However, if you are using the lite version of EasyTether app, you will not able to access the website with https like: https://www.youtube.com since this type of secure communication is being blocked by the lite version.", 
            "title": "EasyTether"
        }, 
        {
            "location": "/app/tether/#easytether", 
            "text": "This article is about how to tether your phone to your router by using EasyTether.", 
            "title": "EasyTether"
        }, 
        {
            "location": "/app/tether/#intro", 
            "text": "There is several reasons you need to share your smartphone's data  to your router:   Carriers tries to give you a plan with plenty of data but actually you don't need that much.  4G speed is quite fast and it beats your home Internet speed. You can use the data for your laptop.  Using your phone as a hotspot directly is easy, but you cannot connect too many devices.   It is very easy to share your data to GL.iNet mini router using router's control interfaces, but in some phone and carrier network, they limit sharing data directly, so you can try EasyTether.  We will use Android OS and GL mini router to demonstrate the procedure.", 
            "title": "Intro"
        }, 
        {
            "location": "/app/tether/#stuff-you-need", 
            "text": "", 
            "title": "Stuff you need"
        }, 
        {
            "location": "/app/tether/#equipment", 
            "text": "1)     Samsung Galaxy S6 with Android OS  2)     GL-AR150 mini router (Other models are also OK)  3)     4G sim card", 
            "title": "Equipment"
        }, 
        {
            "location": "/app/tether/#software", 
            "text": "1)     WinSCP ( https://winscp.net/eng/download.php )   2)     PuTTY ( https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html )   3)     EasyTether driver openssl ( http://www.mobile-stream.com/easytether/drivers.html )   \u200b          Note: For MT300N-V2, please choose LEDE.   4)     EasyTether Android App (Search in Google Play Store)", 
            "title": "Software"
        }, 
        {
            "location": "/app/tether/#procedure", 
            "text": "", 
            "title": "Procedure"
        }, 
        {
            "location": "/app/tether/#preparing-your-router", 
            "text": "", 
            "title": "Preparing your router"
        }, 
        {
            "location": "/app/tether/#1-set-up-the-router", 
            "text": "Enter 192.168.8.1 in your browser and get into the router web interface. Set the password which will be used for OpenWRT later. Next, update your router to the latest firmware.", 
            "title": "1) Set up the router"
        }, 
        {
            "location": "/app/tether/#2-transfer-ipk-driver-package-to-the-router", 
            "text": "i.  Find out the chip of your model (for example Atheros 9531, MediaTek MT7620N, etc) from the website. It is because you have to choose the IPK driver package in the EasyTether driver file base on the chip of your router. (For GL router, you can find the information on our website: www.gl-inet.com, and we will also indicate the position of the IPK driver file for our mini router in section iv.):   ii.  Extract the EasyTether driver file. Open WinSCP, choose SCP as the file protocol and enter the information as the figure shown below:   You can see the following screen once your connection has been established (left-hand side: Your PC, right-hand side: Your router):   iii.  Go to the main folder by clicking this button.   You will see the directory tree of the router:   iv.  On the left-hand side (Your PC), find the IPK file of your router in EasyTether driver file you have extracted before. On the right-hand side (Your router), open the tmp folder. Lastly, right click the IPK file and choose upload:  Note: For Atheros chip, choose 15.05.1\\ar71xx\\generic. For MediaTeck, choose 15.05.1\\ramips\\mt7620. For other chips, please find the similar file name.  MT300N   MT300A: \\15.05.1\\ramips\\mt7620\\ easytether-usb-openssl_0.8.7-1_ramips_24kec.ipk  AR150   AR300M: \\15.05.1\\ar71xx\\generic\\easytether-usb-openssl_0.8.7-1_ar71xx.ipk", 
            "title": "2) Transfer IPK driver package to the router"
        }, 
        {
            "location": "/app/tether/#3-use-ssh-to-install-easytether-driver", 
            "text": "i.  Open PuTTY, enter the IP of your router and other information as the figure shown below, then click Open:   ii.  Login by using your username and password of the router (username: root; password: same as the one you need for entering the web interface):  Note: The password you entered will not be showed on the screen.   iii.  You can now update the OpenWRT modules (internet connection required) by typing:  opkg update  Hit enter and then it will update automatically.  Note: You can skip the update and do it after you have finished tethering.  iv.  Install the driver by typing the following command and then hit enter:  opkg install /tmp/filename.ipk  Note: The filename is the file you uploaded in Procedure A)2.ii.  v.  Type in the following command and hit enter:  easytether-usb  vi.  Copy the following command to Putty:  cat   EOF   /etc/config/network\n\nconfig interface 'wan'\noption ifname 'tap-easytether'\noption proto 'dhcp'\nEOF  Note:  To paste it into Putty, just right click the black screen and then hit enter.  vii.  Type in the following command to reboot your router or unplug the power cable of your router. Afterward, plug in the power cable to turn on the router.  reboot -f", 
            "title": "3) Use SSH to install EasyTether driver"
        }, 
        {
            "location": "/app/tether/#preparing-your-smart-phone", 
            "text": "", 
            "title": "Preparing your smart phone"
        }, 
        {
            "location": "/app/tether/#1-enable-the-developer-options", 
            "text": "i.  Go to Setting -  About Device -  Software info. Hitting the build number several times and it will announce that you have turn on the Developer Options.   ii.  Go to Setting -  Developer Options, turn on the Developer Options and also the USB debugging.", 
            "title": "1) Enable the Developer Options"
        }, 
        {
            "location": "/app/tether/#2-start-tethering", 
            "text": "i.  Open EasyTether App, tick the USB button, it will show \u201cwaiting for connection from the host\u201d.    ii.  Connect your phone to the router via USB cable. Hit OK to allow the USB debugging.   iii.  Your connection has been established.   You can now connect your device to the router and access the Internet. However, if you are using the lite version of EasyTether app, you will not able to access the website with https like: https://www.youtube.com since this type of secure communication is being blocked by the lite version.", 
            "title": "2) Start tethering"
        }, 
        {
            "location": "/app/ss/", 
            "text": "Shadowsocks (SS) Setting\n\n\n===\n\n\nYou will learn how to set up shadowsocks server and client on the mini router in this guide. This guide is for DIY purpose and provided as is. To do the following steps, you have to learn how to use SSH and WinSCP to connect to the router first.\n\n\nSetup SS Server\n\n\nNote: If you want to use your router as Shadowsocks server, you have to have Internet IP address that it can be access everywhere. Your ISP should also allow you to use as servers otherwise it is not accessible worldwide.\n\n\n1. Edit Shadowsocks-server.json file\n\n\nInput the following command to edit the configuration file \"\nshadowsocks-server.json\n\u201c \n\n\nroot@GL-AR750:~# vi /etc/shadowsocks-server.json\n \n\n\nThen the following file content will display. \n\n\n\n\nswitch to edit mode by press \ni\n on your keyboard, then you can change parameter in the configuration file: \n\n\n\n\nServer\uff1a\n0.0.0.0\n (default, don't modify)\n\n\nserver_port: \n443\n (default, 443 is the port for https so it is good for camouflage)\n\n\npassword:  \nyour password\n This is the only thing that you have to set up by yourself.\n\n\nmethod: \nrc4-md5\n is default encrypt method, rc4-md5 is the fastest encryption method. \n\n\n\n\nwhen you finish all above modification, you can click \nEsc\n to exit edit mode, then click \n:\n, type\nwq\n to \nwrite\n the modification into the configuration files and \nquit\n. \n\n\n \n\n\n2. Edit ss-server init file\n\n\nType \nvi /etc/init.d/ss-server\n in the command line\n\n\n \n\n\nWhen you open ss-server configure file, you can see the following configuration\n\n\n \n\n\nPress \ni\n to switch to edit mode, remove the \"\n#\n\" before \n/usr/bin/ss-server - C /etc/shadowsocks-server.json -u \n, then click \"\nEsc\n\", to exit edit mode, and type \n:\n, type\nwq\n to \nwrite\n and \nquit\n the configuration file.\n\n\n3. Start SS Server services\n\n\nInput \n/etc/init.d/ss-server start\n , then the ss-serer services start on your router. \n\n\n \n\n\nAfter you start ss-server, the above information will display. \n\n\nYou can also restart the router so that the server is started automatically.\n\n\n4. Open Port on the mini Router\n\n\nThe port is not opened automatically so you can do this manually.\n\n\n  \n\n\n\n\nA window will pop-up warning you to separately login as a root user into advanced setting. \n\n\nClick \"\nOK\n\"\n\n\n\nLogin with your password as a root user.\n\n\n  \n\n\nAdvance Setting Page Review\n\n\n  \n\n\nClick \"\nTraffic Rules\n\" Tab to active external port forwarding in your network. \n\n\n  \n\n\nScroll down to the \"\nOpen ports on router\n\" and input information as following: \n\n\nName: \"\nyour rule name\n\"\n\n\nProtocol: \nTCP+UDP\n\n\nExternal Port: \n443\n\n\nClick \"\nAdd\n\" after filling relate information and scroll down to the bottom, then click \"\nsave\napply\n\" \n\n\nNow the port forwarding shall be activated and also the Shadowsocks Server is ready to use. \n\n\n5. Port forward\n\n\nYou don't need to setup port forward if you are using the GL router as the main router. \n\n\nBut if connect the mini router to your main router as a client, you need to setup port forwarding in your main router.\n\n\nTodo: port forward in other brand of router.\n\n\n6. Check your public IP address\n\n\nYou can use any of your PC, laptop, tablet or smartphone to connect your Wi-Fi, then open a web browser (IE, Chrome, Safari, Firefox etc.)\n\n\nOpen any IP address checking website, the following websites are for your options: \n\n\n\n\nwww.myipaddress.com\n\n\nwww.checkip.org \n\n\nhttps://www.whatismypublicip.com/\n\n\nhttps://www.showmyipaddress.eu/\n\n\nhttp://ip.w69b.com/\n\n\n\n\nThe webpage will detect and show your public IP address, \nrecord\n it. \n\n\n7. Configuration is ready\n\n\nNow your ss server info is ready. Please write this down so that you can use to connect to your server.\n\n Server IP: Your public server IP\n\n Encryption: rc4-md5\n* Password: your password\n\n\nUsing SS on PCs or Smartphones\n\n\n1. Download the clients of your OS platform:\n\n\nhttps://shadowsocks.org/en/download/clients.html\n\n\n2. Setup your client on different devices\n\n\nInstall the Shadowsocks Client on your device (iOS, Android or Windows devices), then setup the following information:\n\n\nHost: \nyour Public IP address\n (you checked in step \n3.2\n)\n\n\nPort: \n443\n\n\nPassword: \nyour password\n (same as you setup in ss-server)\n\n\nEncryption: \nrc4-md5\n (same as you select in ss-server)\n\n\n3. Start using Private Shadowsocks Services\n\n\nAfter setup, you just start your shadowsocks on your devices, enjoy it. \n\n\nYou can test or check whether it's workable by open a web browser on your smartphone (use 3G/4G data but not WiFi), then go to a IP address checking website to check if the IP address is same as your SS-server public IP address. \n\n\nShadowsocks Client Setup on the router\n\n\n1. Setup SS-Server in Luci\n\n\n  \n\n\nSelect \"\nShadowsocks\n\" in the services pull-down menu. \n\n\nClick \"\nServers Manage\n\" tab to setup SS-Client for GL-AR750 Router\n\n\n  \n\n\nClick \"\nAdd\n\", fill the following information: \n\n\nAlias\n (Optional): Any name you would display\n\n\nServer Address: \"\nYour Public IP\n\"\n\n\nServer Port: \n443\n\n\nPassword: \"\nYour Password\n\"\n\n\nEncrypt Method: \nRC4-MD5\n\n\nClick \"\nSave\nSupply\n\", \n\n\n\n\nThe following window will displayed, then click \"\nSave \n Apply\n\"\n\n\n \n\n\n2. Active SS-Server Client in GL-Router\n\n\nThen switch to General Settings tab, select \"\nYou defined Alias\n\" as \nMain Server\n in the Transparent Proxy \n\n\n\n\n \n\n\nAfter select the right Main Server, then click \"\nSave \n Apply\n\" at bottom of the General Setting Page\n\n\n\n\n \n\n\nAfter All Settings completed, the Transparent Status shall be \"\nRUNNING\n\" , enjoy your SS client.", 
            "title": "Shadowsocks"
        }, 
        {
            "location": "/app/ss/#shadowsocks-ss-setting", 
            "text": "===  You will learn how to set up shadowsocks server and client on the mini router in this guide. This guide is for DIY purpose and provided as is. To do the following steps, you have to learn how to use SSH and WinSCP to connect to the router first.", 
            "title": "Shadowsocks (SS) Setting"
        }, 
        {
            "location": "/app/ss/#setup-ss-server", 
            "text": "Note: If you want to use your router as Shadowsocks server, you have to have Internet IP address that it can be access everywhere. Your ISP should also allow you to use as servers otherwise it is not accessible worldwide.", 
            "title": "Setup SS Server"
        }, 
        {
            "location": "/app/ss/#1-edit-shadowsocks-serverjson-file", 
            "text": "Input the following command to edit the configuration file \" shadowsocks-server.json \u201c   root@GL-AR750:~# vi /etc/shadowsocks-server.json    Then the following file content will display.    switch to edit mode by press  i  on your keyboard, then you can change parameter in the configuration file:    Server\uff1a 0.0.0.0  (default, don't modify)  server_port:  443  (default, 443 is the port for https so it is good for camouflage)  password:   your password  This is the only thing that you have to set up by yourself.  method:  rc4-md5  is default encrypt method, rc4-md5 is the fastest encryption method.    when you finish all above modification, you can click  Esc  to exit edit mode, then click  : , type wq  to  write  the modification into the configuration files and  quit .", 
            "title": "1. Edit Shadowsocks-server.json file"
        }, 
        {
            "location": "/app/ss/#2-edit-ss-server-init-file", 
            "text": "Type  vi /etc/init.d/ss-server  in the command line     When you open ss-server configure file, you can see the following configuration     Press  i  to switch to edit mode, remove the \" # \" before  /usr/bin/ss-server - C /etc/shadowsocks-server.json -u  , then click \" Esc \", to exit edit mode, and type  : , type wq  to  write  and  quit  the configuration file.", 
            "title": "2. Edit ss-server init file"
        }, 
        {
            "location": "/app/ss/#3-start-ss-server-services", 
            "text": "Input  /etc/init.d/ss-server start  , then the ss-serer services start on your router.      After you start ss-server, the above information will display.   You can also restart the router so that the server is started automatically.", 
            "title": "3. Start SS Server services"
        }, 
        {
            "location": "/app/ss/#4-open-port-on-the-mini-router", 
            "text": "The port is not opened automatically so you can do this manually.       A window will pop-up warning you to separately login as a root user into advanced setting.   Click \" OK \"  \nLogin with your password as a root user.      Advance Setting Page Review      Click \" Traffic Rules \" Tab to active external port forwarding in your network.       Scroll down to the \" Open ports on router \" and input information as following:   Name: \" your rule name \"  Protocol:  TCP+UDP  External Port:  443  Click \" Add \" after filling relate information and scroll down to the bottom, then click \" save apply \"   Now the port forwarding shall be activated and also the Shadowsocks Server is ready to use.", 
            "title": "4. Open Port on the mini Router"
        }, 
        {
            "location": "/app/ss/#5-port-forward", 
            "text": "You don't need to setup port forward if you are using the GL router as the main router.   But if connect the mini router to your main router as a client, you need to setup port forwarding in your main router.  Todo: port forward in other brand of router.", 
            "title": "5. Port forward"
        }, 
        {
            "location": "/app/ss/#6-check-your-public-ip-address", 
            "text": "You can use any of your PC, laptop, tablet or smartphone to connect your Wi-Fi, then open a web browser (IE, Chrome, Safari, Firefox etc.)  Open any IP address checking website, the following websites are for your options:    www.myipaddress.com  www.checkip.org   https://www.whatismypublicip.com/  https://www.showmyipaddress.eu/  http://ip.w69b.com/   The webpage will detect and show your public IP address,  record  it.", 
            "title": "6. Check your public IP address"
        }, 
        {
            "location": "/app/ss/#7-configuration-is-ready", 
            "text": "Now your ss server info is ready. Please write this down so that you can use to connect to your server.  Server IP: Your public server IP  Encryption: rc4-md5\n* Password: your password", 
            "title": "7. Configuration is ready"
        }, 
        {
            "location": "/app/ss/#using-ss-on-pcs-or-smartphones", 
            "text": "", 
            "title": "Using SS on PCs or Smartphones"
        }, 
        {
            "location": "/app/ss/#1-download-the-clients-of-your-os-platform", 
            "text": "https://shadowsocks.org/en/download/clients.html", 
            "title": "1. Download the clients of your OS platform:"
        }, 
        {
            "location": "/app/ss/#2-setup-your-client-on-different-devices", 
            "text": "Install the Shadowsocks Client on your device (iOS, Android or Windows devices), then setup the following information:  Host:  your Public IP address  (you checked in step  3.2 )  Port:  443  Password:  your password  (same as you setup in ss-server)  Encryption:  rc4-md5  (same as you select in ss-server)", 
            "title": "2. Setup your client on different devices"
        }, 
        {
            "location": "/app/ss/#3-start-using-private-shadowsocks-services", 
            "text": "After setup, you just start your shadowsocks on your devices, enjoy it.   You can test or check whether it's workable by open a web browser on your smartphone (use 3G/4G data but not WiFi), then go to a IP address checking website to check if the IP address is same as your SS-server public IP address.", 
            "title": "3. Start using Private Shadowsocks Services"
        }, 
        {
            "location": "/app/ss/#shadowsocks-client-setup-on-the-router", 
            "text": "", 
            "title": "Shadowsocks Client Setup on the router"
        }, 
        {
            "location": "/app/ss/#1-setup-ss-server-in-luci", 
            "text": "Select \" Shadowsocks \" in the services pull-down menu.   Click \" Servers Manage \" tab to setup SS-Client for GL-AR750 Router      Click \" Add \", fill the following information:   Alias  (Optional): Any name you would display  Server Address: \" Your Public IP \"  Server Port:  443  Password: \" Your Password \"  Encrypt Method:  RC4-MD5  Click \" Save Supply \",    The following window will displayed, then click \" Save   Apply \"", 
            "title": "1. Setup SS-Server in Luci"
        }, 
        {
            "location": "/app/ss/#2-active-ss-server-client-in-gl-router", 
            "text": "Then switch to General Settings tab, select \" You defined Alias \" as  Main Server  in the Transparent Proxy       After select the right Main Server, then click \" Save   Apply \" at bottom of the General Setting Page      After All Settings completed, the Transparent Status shall be \" RUNNING \" , enjoy your SS client.", 
            "title": "2. Active SS-Server Client in GL-Router"
        }, 
        {
            "location": "/app/wireguard/", 
            "text": "WireGuard Setting\n\n\nThe future of VPN technology\n\n\nWireGuard is an extremely simple yet fast and modern VPN that utilizes \nstate-of-the-art cryptography\n. It aims to be \nfaster\n, \nsimpler\n, leaner, and more useful than IPSec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. \n\n\nFrom firmware V2.27, you can install wireguard easily using \nopkg\n.\n\n\nYou need to ssh to the router and do the following.\n\n\nInstall Wireguard\n\n\n# opkg update\n# opkg install wireguard\n\n\n\n\nConfiguration\n\n\nYou can install Wireguard either as Server or client.\n\n\nTo configure the mini router as Wireguard server or client, you need to do the following.\n\n\n1. Generate Key\n\n\nFirst you need to generate the privatekey and publickey. The following commands will generate two files for the key.\n\n\n# wg genkey \n privatekey\n# wg pubkey \n privatekey \n publickey\n\n\n\n\n2. Network Configuration\n\n\nYou need to edit \n/etc/config/network\n to configure client or server. Please use \nvi\n or \"winscp\" to edit these files.\n\n\nYou need to generate private key and public key in both Server side and Client side.\n\n\nTo configure Wireguard Server, add the following content to the end of \n/etc/config/network\n.\n\n\nNote: Be sure to replace the private_key and public_key using the real content.\n\n\nconfig interface 'wg0'                 \n    option proto 'wireguard'                                                \n    option listen_port '55555'                                              \n    list addresses '10.0.0.1/32'         \n    option private_key '......'  # The private key generated by itself just now    \n\nconfig wireguard_wg0\n    option public_key '......' # Client's public key\n    option route_allowed_ips '1'\n    list allowed_ips '10.0.0.0/24'\n\n\n\n\nTo configure Wireguard Client, apply the following content to \n/etc/config/network\n.\n\n\nconfig interface 'wg0'                 \n    option proto 'wireguard'                                                \n    option listen_port '55555'                                              \n    list addresses '10.0.0.2/32'         \n    option private_key '......'  # The private key generated by itself just now        \n\nconfig wireguard_wg0\n    option public_key '......' # Server's public key\n    option route_allowed_ips '1'\n    list allowed_ips '0.0.0.0/0'\n    option endpoint_host '......' # Server's public ip address\n    option endpoint_port '55555'\n    option persistent_keepalive '25'\n\n\n\n\n3. Firewall Configuration\n\n\nAppending the following stuff to firewall configuration \n/etc/config/firewall\n.  \n\n\nconfig rule                 \n    option target 'ACCEPT'\n    option src 'wan'      \n    option proto 'udp'     \n    option name 'Wireguard_VPN'\n    option family 'ipv4'\n    option dest_port '55555'\n\nconfig zone                  \n    option name 'wg-vpn'\n    option input 'ACCEPT'  \n    option forward 'ACCEPT'\n    option output 'ACCEPT'\n    option masq '1'  \n    option device 'wg0'\n\nconfig forwarding 'wg_wan'   \n    option src 'wg-vpn'\n    option dest 'wan'      \n\nconfig forwarding 'wg_lan'\n    option src 'wg-vpn'\n    option dest 'lan'\n\nconfig forwarding        \n    option src 'lan'\n    option dest 'wg-vpn'\n\n\n\n\n4. Restart Network\n\n\nFinally, restart network and firewall, or just reboot your router.\n\n\n/etc/init.d/network restart\n/etc/init.d/firewall restart", 
            "title": "WireGuard"
        }, 
        {
            "location": "/app/wireguard/#wireguard-setting", 
            "text": "The future of VPN technology  WireGuard is an extremely simple yet fast and modern VPN that utilizes  state-of-the-art cryptography . It aims to be  faster ,  simpler , leaner, and more useful than IPSec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN.   From firmware V2.27, you can install wireguard easily using  opkg .  You need to ssh to the router and do the following.", 
            "title": "WireGuard Setting"
        }, 
        {
            "location": "/app/wireguard/#install-wireguard", 
            "text": "# opkg update\n# opkg install wireguard", 
            "title": "Install Wireguard"
        }, 
        {
            "location": "/app/wireguard/#configuration", 
            "text": "You can install Wireguard either as Server or client.  To configure the mini router as Wireguard server or client, you need to do the following.", 
            "title": "Configuration"
        }, 
        {
            "location": "/app/wireguard/#1-generate-key", 
            "text": "First you need to generate the privatekey and publickey. The following commands will generate two files for the key.  # wg genkey   privatekey\n# wg pubkey   privatekey   publickey", 
            "title": "1. Generate Key"
        }, 
        {
            "location": "/app/wireguard/#2-network-configuration", 
            "text": "You need to edit  /etc/config/network  to configure client or server. Please use  vi  or \"winscp\" to edit these files.  You need to generate private key and public key in both Server side and Client side.  To configure Wireguard Server, add the following content to the end of  /etc/config/network .  Note: Be sure to replace the private_key and public_key using the real content.  config interface 'wg0'                 \n    option proto 'wireguard'                                                \n    option listen_port '55555'                                              \n    list addresses '10.0.0.1/32'         \n    option private_key '......'  # The private key generated by itself just now    \n\nconfig wireguard_wg0\n    option public_key '......' # Client's public key\n    option route_allowed_ips '1'\n    list allowed_ips '10.0.0.0/24'  To configure Wireguard Client, apply the following content to  /etc/config/network .  config interface 'wg0'                 \n    option proto 'wireguard'                                                \n    option listen_port '55555'                                              \n    list addresses '10.0.0.2/32'         \n    option private_key '......'  # The private key generated by itself just now        \n\nconfig wireguard_wg0\n    option public_key '......' # Server's public key\n    option route_allowed_ips '1'\n    list allowed_ips '0.0.0.0/0'\n    option endpoint_host '......' # Server's public ip address\n    option endpoint_port '55555'\n    option persistent_keepalive '25'", 
            "title": "2. Network Configuration"
        }, 
        {
            "location": "/app/wireguard/#3-firewall-configuration", 
            "text": "Appending the following stuff to firewall configuration  /etc/config/firewall .    config rule                 \n    option target 'ACCEPT'\n    option src 'wan'      \n    option proto 'udp'     \n    option name 'Wireguard_VPN'\n    option family 'ipv4'\n    option dest_port '55555'\n\nconfig zone                  \n    option name 'wg-vpn'\n    option input 'ACCEPT'  \n    option forward 'ACCEPT'\n    option output 'ACCEPT'\n    option masq '1'  \n    option device 'wg0'\n\nconfig forwarding 'wg_wan'   \n    option src 'wg-vpn'\n    option dest 'wan'      \n\nconfig forwarding 'wg_lan'\n    option src 'wg-vpn'\n    option dest 'lan'\n\nconfig forwarding        \n    option src 'lan'\n    option dest 'wg-vpn'", 
            "title": "3. Firewall Configuration"
        }, 
        {
            "location": "/app/wireguard/#4-restart-network", 
            "text": "Finally, restart network and firewall, or just reboot your router.  /etc/init.d/network restart\n/etc/init.d/firewall restart", 
            "title": "4. Restart Network"
        }, 
        {
            "location": "/video/product_intro/", 
            "text": "Product Intro\n\n\nThis page is listing the videos related to product introduction. We have an official \nYouTube\n Channel.\n\n\n2017 GL.iNet Product Collection", 
            "title": "Product Intro"
        }, 
        {
            "location": "/video/product_intro/#product-intro", 
            "text": "This page is listing the videos related to product introduction. We have an official  YouTube  Channel.", 
            "title": "Product Intro"
        }, 
        {
            "location": "/video/product_intro/#2017-glinet-product-collection", 
            "text": "", 
            "title": "2017 GL.iNet Product Collection"
        }, 
        {
            "location": "/video/tutor/", 
            "text": "Tutorials\n\n\nThis page is listing the videos related to product tutorials. We will update contents to our official \nYouTube\n Channel time to time.\n\n\nGL-AR150 Mini Router - Repeater Setup\n\n\n\n\nHow to Recover GL-AR150 by U-Boot FailSafe\n\n\n\n\nCreate your private network with Microuter GL-USB150\n\n\n\n\nHow to open the case of GL.iNet mini routers", 
            "title": "Tutorial"
        }, 
        {
            "location": "/video/tutor/#tutorials", 
            "text": "This page is listing the videos related to product tutorials. We will update contents to our official  YouTube  Channel time to time.", 
            "title": "Tutorials"
        }, 
        {
            "location": "/video/tutor/#gl-ar150-mini-router-repeater-setup", 
            "text": "", 
            "title": "GL-AR150 Mini Router - Repeater Setup"
        }, 
        {
            "location": "/video/tutor/#how-to-recover-gl-ar150-by-u-boot-failsafe", 
            "text": "", 
            "title": "How to Recover GL-AR150 by U-Boot FailSafe"
        }, 
        {
            "location": "/video/tutor/#create-your-private-network-with-microuter-gl-usb150", 
            "text": "", 
            "title": "Create your private network with Microuter GL-USB150"
        }, 
        {
            "location": "/video/tutor/#how-to-open-the-case-of-glinet-mini-routers", 
            "text": "", 
            "title": "How to open the case of GL.iNet mini routers"
        }, 
        {
            "location": "/video/review/", 
            "text": "Customer Review\n\n\nThis page is listing the videos related to customer review. We thanks for all the nice reviews from our users. We only select some of them to show here, because the limitation of space.  We will update contents to our official  \nYouTube\n Channel time to time.\n\n\nHidden Router Review: The Best VPN Router?\n\n\nBy Stefan Zanev | Product Mentioned:\nGL-B1300\n\n\n\n\nHow to Repeat Public Wifi Hotspot | Wifi Repeater/Extender | GL iNet AR750 Review\n\n\nBy LeverageLifestyle | Product Mentioned: \nGL-AR750\n\n\n\n\nHow to Use and Setup a Mini VPN Router\n\n\nBy Best10VPN | Product Mentioned: \nGL-AR300M\n\n\n\n\nOpenSpot using Wireless Mini Router GL-AR150\n\n\nBy Artemus714 | Product Mentioned: \nGL-AR150\n\n\n\n\nHow-To Setup the GLi GL-MT300N Mini VPN Router and Review\n\n\nBy Jabber Tech | Product Mentioned: \nGL-MT300N\n\n\n\n\nGL.iNet Mini OpenWrt Router with TOR! (Awesome)\n\n\nBy Bri Y the PC Guy | Product Mentioned: \nGL-MT300A\n\n\n\n\nAnleitung: Gl.iNet VPN-Client Router Einrichtung\n\n\nBy VPN Anbieter Vergleich Test  | Product Mentioned: \nGL-MT300A", 
            "title": "Customer Review"
        }, 
        {
            "location": "/video/review/#customer-review", 
            "text": "This page is listing the videos related to customer review. We thanks for all the nice reviews from our users. We only select some of them to show here, because the limitation of space.  We will update contents to our official   YouTube  Channel time to time.", 
            "title": "Customer Review"
        }, 
        {
            "location": "/video/review/#hidden-router-review-the-best-vpn-router", 
            "text": "By Stefan Zanev | Product Mentioned: GL-B1300", 
            "title": "Hidden Router Review: The Best VPN Router?"
        }, 
        {
            "location": "/video/review/#how-to-repeat-public-wifi-hotspot-wifi-repeaterextender-gl-inet-ar750-review", 
            "text": "By LeverageLifestyle | Product Mentioned:  GL-AR750", 
            "title": "How to Repeat Public Wifi Hotspot | Wifi Repeater/Extender | GL iNet AR750 Review"
        }, 
        {
            "location": "/video/review/#how-to-use-and-setup-a-mini-vpn-router", 
            "text": "By Best10VPN | Product Mentioned:  GL-AR300M", 
            "title": "How to Use and Setup a Mini VPN Router"
        }, 
        {
            "location": "/video/review/#openspot-using-wireless-mini-router-gl-ar150", 
            "text": "By Artemus714 | Product Mentioned:  GL-AR150", 
            "title": "OpenSpot using Wireless Mini Router GL-AR150"
        }, 
        {
            "location": "/video/review/#how-to-setup-the-gli-gl-mt300n-mini-vpn-router-and-review", 
            "text": "By Jabber Tech | Product Mentioned:  GL-MT300N", 
            "title": "How-To Setup the GLi GL-MT300N Mini VPN Router and Review"
        }, 
        {
            "location": "/video/review/#glinet-mini-openwrt-router-with-tor-awesome", 
            "text": "By Bri Y the PC Guy | Product Mentioned:  GL-MT300A", 
            "title": "GL.iNet Mini OpenWrt Router with TOR! (Awesome)"
        }, 
        {
            "location": "/video/review/#anleitung-glinet-vpn-client-router-einrichtung", 
            "text": "By VPN Anbieter Vergleich Test  | Product Mentioned:  GL-MT300A", 
            "title": "Anleitung: Gl.iNet VPN-Client Router Einrichtung"
        }, 
        {
            "location": "/troubleshooting/led/", 
            "text": "LED Status Indication\n\n\nMini Router\n\n\n\n\n\n\nPower\n: Solid green LED that indicates the router is powered up.\n\n\nWireless\n:  Solid Red LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.\n\n\nConfigurable\n: Can be customized by the user.\n\n\n\n\nGL-USB150 Microuter\n\n\n\n\n\n\nPower\n: Solid green LED that indicates the router is powered up.\n\n\nHotspot\n:  Solid green LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.\n\n\n\n\nGL-MiFi 4G Smart Router\n\n\n\n\n\n\nBattery\n: Indicate the battery, it will blink when the device is charging until fully charged.\n\n\nPower\n: This router is powered on\n\n\nWAN\n: This router is connected to the Internet via Ethernet port.  It will blink when the device has data transmission from Ethernet port\n\n\nLAN\n: This router is connected to client through LAN cable\n\n\nWI-Fi\n: Solid LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.\n\n\n3G/4G\n: This router is connected to the 3G/4G LTE network. It will blink when the device has data transmission from 3G/4G LTE network\n\n\n\n\nGL-AR750\n\n\n\n\n\n\nPower\n: Solid white LED that indicates the router is powered up.\n\n\n2.4GHz Wi-Fi\n: Solid white LED that indicates the router is broadcasting 2.4GHz Wi-Fi. It will flash when there is wireless data transfer\n\n\n5GHz Wi-Fi\n: Solid white LED that indicates the router is broadcasting 5GHz Wi-Fi. It will flash when there is wireless data transfer\n\n\n\n\nGL-B1300\n\n\n\n\n\n\nPower\n: Solid green LED that indicates the router is powered up.\n\n\nMesh\n: Flash green LED indicates that the router is pairing with another router. It will turn solid green when the Mesh network has been created.\n\n\nWireless\n: Solid green LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.\n\n\n\n\nLED Customization\n\n\nTo configure the LED of GL.iNet routers, please login to Luci by clicking \nAdvanced settings\n at the top-right corner of the web admin page. \n\n\n\n\nThen please choose \nSystem\n \n \nLED Configuration\n.", 
            "title": "LED Indicator"
        }, 
        {
            "location": "/troubleshooting/led/#led-status-indication", 
            "text": "", 
            "title": "LED Status Indication"
        }, 
        {
            "location": "/troubleshooting/led/#mini-router", 
            "text": "Power : Solid green LED that indicates the router is powered up.  Wireless :  Solid Red LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.  Configurable : Can be customized by the user.", 
            "title": "Mini Router"
        }, 
        {
            "location": "/troubleshooting/led/#gl-usb150-microuter", 
            "text": "Power : Solid green LED that indicates the router is powered up.  Hotspot :  Solid green LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.", 
            "title": "GL-USB150 Microuter"
        }, 
        {
            "location": "/troubleshooting/led/#gl-mifi-4g-smart-router", 
            "text": "Battery : Indicate the battery, it will blink when the device is charging until fully charged.  Power : This router is powered on  WAN : This router is connected to the Internet via Ethernet port.  It will blink when the device has data transmission from Ethernet port  LAN : This router is connected to client through LAN cable  WI-Fi : Solid LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.  3G/4G : This router is connected to the 3G/4G LTE network. It will blink when the device has data transmission from 3G/4G LTE network", 
            "title": "GL-MiFi 4G Smart Router"
        }, 
        {
            "location": "/troubleshooting/led/#gl-ar750", 
            "text": "Power : Solid white LED that indicates the router is powered up.  2.4GHz Wi-Fi : Solid white LED that indicates the router is broadcasting 2.4GHz Wi-Fi. It will flash when there is wireless data transfer  5GHz Wi-Fi : Solid white LED that indicates the router is broadcasting 5GHz Wi-Fi. It will flash when there is wireless data transfer", 
            "title": "GL-AR750"
        }, 
        {
            "location": "/troubleshooting/led/#gl-b1300", 
            "text": "Power : Solid green LED that indicates the router is powered up.  Mesh : Flash green LED indicates that the router is pairing with another router. It will turn solid green when the Mesh network has been created.  Wireless : Solid green LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.", 
            "title": "GL-B1300"
        }, 
        {
            "location": "/troubleshooting/led/#led-customization", 
            "text": "To configure the LED of GL.iNet routers, please login to Luci by clicking  Advanced settings  at the top-right corner of the web admin page.    Then please choose  System     LED Configuration .", 
            "title": "LED Customization"
        }, 
        {
            "location": "/troubleshooting/reset/", 
            "text": "How to Repair / Reset\n\n\nAll GL.iNet Routers have reset buttons, you can use them to repair your network or reset  your routers to factory defult. If you can neither access the web-based setup page nor the router, you can press the \nreset\n button:\n\n\nRepair\n\n\nPress and hold for \n3 seconds\n then release to repair your network.\n\n\nReset\n\n\nPress and hold for \n10 seconds\n then release to reset the router to factory settings. All user data will be cleared.\n\n\nReset Button\n\n\nMini Routers\n\n\n\n\nGL-USB150 Microuter\n\n\n\n\nGL-MiFi 4G Smart Router\n\n\n\n\nGL-AR750 Travel AC Router\n\n\n\n\nGL-B1300 Home AC Router\n\n\n\n\nNote: If factory reset is not working. You might need to follow the \nUboot tutorial\n to debrick your router.", 
            "title": "Repair or Reset"
        }, 
        {
            "location": "/troubleshooting/reset/#how-to-repair-reset", 
            "text": "All GL.iNet Routers have reset buttons, you can use them to repair your network or reset  your routers to factory defult. If you can neither access the web-based setup page nor the router, you can press the  reset  button:", 
            "title": "How to Repair / Reset"
        }, 
        {
            "location": "/troubleshooting/reset/#repair", 
            "text": "Press and hold for  3 seconds  then release to repair your network.", 
            "title": "Repair"
        }, 
        {
            "location": "/troubleshooting/reset/#reset", 
            "text": "Press and hold for  10 seconds  then release to reset the router to factory settings. All user data will be cleared.", 
            "title": "Reset"
        }, 
        {
            "location": "/troubleshooting/reset/#reset-button", 
            "text": "", 
            "title": "Reset Button"
        }, 
        {
            "location": "/troubleshooting/reset/#mini-routers", 
            "text": "", 
            "title": "Mini Routers"
        }, 
        {
            "location": "/troubleshooting/reset/#gl-usb150-microuter", 
            "text": "", 
            "title": "GL-USB150 Microuter"
        }, 
        {
            "location": "/troubleshooting/reset/#gl-mifi-4g-smart-router", 
            "text": "", 
            "title": "GL-MiFi 4G Smart Router"
        }, 
        {
            "location": "/troubleshooting/reset/#gl-ar750-travel-ac-router", 
            "text": "", 
            "title": "GL-AR750 Travel AC Router"
        }, 
        {
            "location": "/troubleshooting/reset/#gl-b1300-home-ac-router", 
            "text": "Note: If factory reset is not working. You might need to follow the  Uboot tutorial  to debrick your router.", 
            "title": "GL-B1300 Home AC Router"
        }, 
        {
            "location": "/troubleshooting/debrick/", 
            "text": "Using Uboot to Debrick Your Router\n\n\nYou may brick your router if you were doing some DIY projects or flashed a wrong firmware. You are not able to access your router but you can re-install the firmware by using Uboot failsafe.\n\n\nPlease follow the procedures below to access the Uboot Web UI and re-install the firmware:\n\n\n\n\n1. Connect\n\n\nConnect \nonly one\n cable to your router, and leave \nthe other port (LAN or WAN) unconnected\n.\n\n\n2. Press and Hold\n\n\nPress and hold the \nReset\n button firmly first, and then power on your device. \nMust obey the first and then procedure\n.\n\n\n3. Lights\n\n\nThe LEDs will start blinking.\n\n\n4. Release\n\n\nRelease your finger when you see the LEDs flashing:\n- 5 times for GL-AR150 and GL-AR300M16\n\n\n\n\n3 times for GL-MT300N, GL-MT300A, and GL-B1300\n\n\n\n\n5. Set IP\n\n\nSet your computer\u2019s IP address to \n192.168.1.2\n (see the cap-screen of Win 7 below)\n\n\n\n\n6. Enter Web UI\n\n\nUser Firefox or Chrome to visit \nhttp://192.168.1.1.\n Then you will enter Uboot Web UI.\n\n\n\n\n7. Update\n\n\nClick \nChoose File\n to find the firmware. Then click \nUpdate firmware\n. You can download the firmware here: \nhttp://download.gl-inet.com/firmware/\n\n\n8. Upgrading\n\n\nWait for around 3 minutes. Don\u2019t power off your device while upgrading. Revert the IP setting you did in step 5 and you will be able to access the router via 192.168.8.1 again.", 
            "title": "Debrick via Uboot"
        }, 
        {
            "location": "/troubleshooting/debrick/#using-uboot-to-debrick-your-router", 
            "text": "You may brick your router if you were doing some DIY projects or flashed a wrong firmware. You are not able to access your router but you can re-install the firmware by using Uboot failsafe.  Please follow the procedures below to access the Uboot Web UI and re-install the firmware:", 
            "title": "Using Uboot to Debrick Your Router"
        }, 
        {
            "location": "/troubleshooting/debrick/#1-connect", 
            "text": "Connect  only one  cable to your router, and leave  the other port (LAN or WAN) unconnected .", 
            "title": "1. Connect"
        }, 
        {
            "location": "/troubleshooting/debrick/#2-press-and-hold", 
            "text": "Press and hold the  Reset  button firmly first, and then power on your device.  Must obey the first and then procedure .", 
            "title": "2. Press and Hold"
        }, 
        {
            "location": "/troubleshooting/debrick/#3-lights", 
            "text": "The LEDs will start blinking.", 
            "title": "3. Lights"
        }, 
        {
            "location": "/troubleshooting/debrick/#4-release", 
            "text": "Release your finger when you see the LEDs flashing:\n- 5 times for GL-AR150 and GL-AR300M16   3 times for GL-MT300N, GL-MT300A, and GL-B1300", 
            "title": "4. Release"
        }, 
        {
            "location": "/troubleshooting/debrick/#5-set-ip", 
            "text": "Set your computer\u2019s IP address to  192.168.1.2  (see the cap-screen of Win 7 below)", 
            "title": "5. Set IP"
        }, 
        {
            "location": "/troubleshooting/debrick/#6-enter-web-ui", 
            "text": "User Firefox or Chrome to visit  http://192.168.1.1.  Then you will enter Uboot Web UI.", 
            "title": "6. Enter Web UI"
        }, 
        {
            "location": "/troubleshooting/debrick/#7-update", 
            "text": "Click  Choose File  to find the firmware. Then click  Update firmware . You can download the firmware here:  http://download.gl-inet.com/firmware/", 
            "title": "7. Update"
        }, 
        {
            "location": "/troubleshooting/debrick/#8-upgrading", 
            "text": "Wait for around 3 minutes. Don\u2019t power off your device while upgrading. Revert the IP setting you did in step 5 and you will be able to access the router via 192.168.8.1 again.", 
            "title": "8. Upgrading"
        }, 
        {
            "location": "/troubleshooting/stop_supporting/", 
            "text": "Stop supporting firmware 2.x\n\n\n_\n\n\nWe will stop support for firmware 2.x since September 10, 2020.\n\n\nWe recomend to upgrade to \nfirmware 3.x\n, if you still want to use the affected features, just ssh to router, add a line below to hosts file.\n\n\n52.41.190.83 www.gl-inet.com\n\n\nThe host file is at \n/etc/hosts\n.\n\n\nThe image below show where to add the line.\n\n\n\n\nIf you don't know how to ssh to router, please refer \nhere\n.\n\n\nIf you are using Windows, you can use WinSCP, please refer \nhere\n.\n\n\nHow do I know it is worked?\n\n\nTry to ping the url \nwww.gl-inet.com\n after September 10, 2020.\n\n\nIf the IP address is \n52.41.190.83\n, as the image show below, it worked.", 
            "title": "Stop Supporting"
        }, 
        {
            "location": "/troubleshooting/stop_supporting/#stop-supporting-firmware-2x", 
            "text": "_  We will stop support for firmware 2.x since September 10, 2020.  We recomend to upgrade to  firmware 3.x , if you still want to use the affected features, just ssh to router, add a line below to hosts file.  52.41.190.83 www.gl-inet.com  The host file is at  /etc/hosts .  The image below show where to add the line.   If you don't know how to ssh to router, please refer  here .  If you are using Windows, you can use WinSCP, please refer  here .  How do I know it is worked?  Try to ping the url  www.gl-inet.com  after September 10, 2020.  If the IP address is  52.41.190.83 , as the image show below, it worked.", 
            "title": "Stop supporting firmware 2.x"
        }, 
        {
            "location": "/domino/", 
            "text": "Getting started with Domino Kits\n\n\nNote: The Domino Project is depreciated. Only Domino Core is still under production\n \n\n\nFAQ\n\n\n(1) What is the WiFi password?\n\n\n    It is \ngoodlife\n.\n\n\n\n\n(1) How can I connect to the board\n\n\n    You can connect to it via IP address, which is 192.168.8.1 via LAN/WiFi.\n    You can also connect to it via http://domino.local\n\n\n\n\n(2) Why cannot I connect to http://domino.local?\n\n\n    You need bonjour service. Download it from https://support.apple.com/kb/DL999?locale=en_US for windows.\n\n\n\n\n(3) Is it open hardware? \n\n\n    All the Domino boards are open hardware, which you can find the schematics and layout in [Github](https://github.com/domino-team/domino-hardware).\n    Domino Core is based on Atheros proprietary reference design and is not open hardware.\n\n\n\n\n\nWhat is in the whole kit\n\n\nDomino is a high-performance 802.11 bgn WiFi hardware platform, with a modular design architecture, unlimited extension capabilities and Arduino compatibility.\n\n\nDomino is designed using \nAtheros AR9331 WiSoC\n which is widely used in mini routers and IoT projects.\n\n\n\n\nThe Domino Family has now 11 boards and more extensions will be developed. The tree structure of the boards is as illustrated.\n\n\nAt the heart is Domino Core, which can then be extended into Domino Pi and Domino Qi. Domino Pi is a DEV platform for wifi and openwrt, it can be extended with various tile boards. Domino Qi is designed for Arduino compatible. Plug the Domino Qi Mini board onto the Domino Qi baseboard to turn it into a board fully compatible the ubiquitous Arduino Shield form factor.\n\n\nDomino Core\n\n\nDomino Core is the heart of Domino.IO. It is designed for makers to easily build their own products based on it. It is compact, \nonly 1.6 square inches with 60 castellated pins (2mm pitch), 3xEthernet, USB2.0, serial port, SPI, I2S, SLIC, SPDIF, JTAG, 9xLEDs and 29 GPIOs\n. Check the the beautiful pinout diagram below for details.\n\n\n\n\nGo to the \nDomino Core hardware\n for more details of the hardware.\n\n\nDomino Pi\n\n\nDomino Pi is designed both as a Domino Core development board and as an extension. You can develop your own board based on the Domino Pi. See the pinout diagram below. We have seven useful tile boards available, providing easy to use building blocks, enabling you to extend the Pi board as you wish.\n\n\nDomino Pi is with newest \nOpenWrt\n BB1407 and CC1505 firmware.\n\n\n\n\nFor more details on how to use the Pi, please check the below sections:\n-  \nDomino Pi Baseboard Section\n \n-  \nSingle Ethernet board Section\n \n-  \nDual Ethernet board Section\n \n-  \n3xUSB+MicroSD Combo Section\n \n-  \nI2S board Section\n \n-  \nSPI/JTAG Section\n \n-  \nLED Section\n \n\n\nDomino Qi\n\n\nDomino Qi Mini is a small board that is a fully compatible derivative of the original \nArduino Y\u00f9n\n, crammed into a tiny form factor. It is a low-cost, compact OpenWRT-based 802.11 bgn WiFi board based on Qualcomm/Atheros AR9331 WiSoC and on the Atmel \nATMega32U4 MCU\n. Communication between the two chips is achieved using Arduino Y\u00f9n-compatible Bridge hardware and software library.\nPlug the Domino Qi Mini board onto the Domino Qi baseboard to turn it into a board \nfully compatible with the ubiquitous Arduino Shield form factor\n and benefit from hundreds of already existing shields for rapid prototyping.\n\n\n\n\nFor more details on how to use the Qi, please check the below sections:\n-  \nDomino Qi section\n \n-  \nQi Baseboard section\n \n-  \nQi Mini section\n \n\n\nWhere to get help\n\n\nFirst you need to read this documentation. We will try our best to make the documentation complete and detailed.\n\n\nSecond, we will have our own forum open later, when you will be ask questions there.\n\n\nThird, go the existing community of \nOpenWrt\n if you want to explore the embedded Linux system, and go to \nArduino\n if you want to explore the features related to Arduino.\n\n\nDiscussions", 
            "title": "Getting Started"
        }, 
        {
            "location": "/domino/#getting-started-with-domino-kits", 
            "text": "Note: The Domino Project is depreciated. Only Domino Core is still under production", 
            "title": "Getting started with Domino Kits"
        }, 
        {
            "location": "/domino/#faq", 
            "text": "(1) What is the WiFi password?      It is  goodlife .  (1) How can I connect to the board      You can connect to it via IP address, which is 192.168.8.1 via LAN/WiFi.\n    You can also connect to it via http://domino.local  (2) Why cannot I connect to http://domino.local?      You need bonjour service. Download it from https://support.apple.com/kb/DL999?locale=en_US for windows.  (3) Is it open hardware?       All the Domino boards are open hardware, which you can find the schematics and layout in [Github](https://github.com/domino-team/domino-hardware).\n    Domino Core is based on Atheros proprietary reference design and is not open hardware.", 
            "title": "FAQ"
        }, 
        {
            "location": "/domino/#what-is-in-the-whole-kit", 
            "text": "Domino is a high-performance 802.11 bgn WiFi hardware platform, with a modular design architecture, unlimited extension capabilities and Arduino compatibility.  Domino is designed using  Atheros AR9331 WiSoC  which is widely used in mini routers and IoT projects.   The Domino Family has now 11 boards and more extensions will be developed. The tree structure of the boards is as illustrated.  At the heart is Domino Core, which can then be extended into Domino Pi and Domino Qi. Domino Pi is a DEV platform for wifi and openwrt, it can be extended with various tile boards. Domino Qi is designed for Arduino compatible. Plug the Domino Qi Mini board onto the Domino Qi baseboard to turn it into a board fully compatible the ubiquitous Arduino Shield form factor.", 
            "title": "What is in the whole kit"
        }, 
        {
            "location": "/domino/#domino-core", 
            "text": "Domino Core is the heart of Domino.IO. It is designed for makers to easily build their own products based on it. It is compact,  only 1.6 square inches with 60 castellated pins (2mm pitch), 3xEthernet, USB2.0, serial port, SPI, I2S, SLIC, SPDIF, JTAG, 9xLEDs and 29 GPIOs . Check the the beautiful pinout diagram below for details.   Go to the  Domino Core hardware  for more details of the hardware.", 
            "title": "Domino Core"
        }, 
        {
            "location": "/domino/#domino-pi", 
            "text": "Domino Pi is designed both as a Domino Core development board and as an extension. You can develop your own board based on the Domino Pi. See the pinout diagram below. We have seven useful tile boards available, providing easy to use building blocks, enabling you to extend the Pi board as you wish.  Domino Pi is with newest  OpenWrt  BB1407 and CC1505 firmware.   For more details on how to use the Pi, please check the below sections:\n-   Domino Pi Baseboard Section  \n-   Single Ethernet board Section  \n-   Dual Ethernet board Section  \n-   3xUSB+MicroSD Combo Section  \n-   I2S board Section  \n-   SPI/JTAG Section  \n-   LED Section", 
            "title": "Domino Pi"
        }, 
        {
            "location": "/domino/#domino-qi", 
            "text": "Domino Qi Mini is a small board that is a fully compatible derivative of the original  Arduino Y\u00f9n , crammed into a tiny form factor. It is a low-cost, compact OpenWRT-based 802.11 bgn WiFi board based on Qualcomm/Atheros AR9331 WiSoC and on the Atmel  ATMega32U4 MCU . Communication between the two chips is achieved using Arduino Y\u00f9n-compatible Bridge hardware and software library.\nPlug the Domino Qi Mini board onto the Domino Qi baseboard to turn it into a board  fully compatible with the ubiquitous Arduino Shield form factor  and benefit from hundreds of already existing shields for rapid prototyping.   For more details on how to use the Qi, please check the below sections:\n-   Domino Qi section  \n-   Qi Baseboard section  \n-   Qi Mini section", 
            "title": "Domino Qi"
        }, 
        {
            "location": "/domino/#where-to-get-help", 
            "text": "First you need to read this documentation. We will try our best to make the documentation complete and detailed.  Second, we will have our own forum open later, when you will be ask questions there.  Third, go the existing community of  OpenWrt  if you want to explore the embedded Linux system, and go to  Arduino  if you want to explore the features related to Arduino.", 
            "title": "Where to get help"
        }, 
        {
            "location": "/domino/#discussions", 
            "text": "", 
            "title": "Discussions"
        }, 
        {
            "location": "/domino/hardware/core/", 
            "text": "Domino Core\n\n\nPinout diagram\n\n\nDomino Core is based on a Atheros AP121 design and protected by a NDA with Qualcomm. So we cannot publish the design. However, we have made comprehensive pinout diagram of the Core board. \n\n\n\n\nDomino Core Pinout PDF\n\n\nDomino Di base board\n\n\nDomino Di is a bare PCB for playing with Domino Core. You can solder the Domino Core onto the Di board as illustrated in this picture.\n\n\n\n\nThe design of Domino Di in github: https://github.com/domino-team/domino-hardware. Please check out the schematic, layout and BOM. \n\n\nThe components required\n\n\nTo make it work, here is the components that you should solder onto the Di board:\n\n\n\n\nThe minimum requirements is to solder the \nAMS1117\n for power and zero ohm \nR6\n.\n\n\n\n\nIt is better to solder \nC3\n and \nC7\n to make it works better.\n\n\nTo make the PCB antenna work, solder 0ohm \nR8\n and \nR10\n. Otherwise, connect a uFL antenna.\n\n\nTo use LED and toggle buttons, solder the other required components.", 
            "title": "Domore Core"
        }, 
        {
            "location": "/domino/hardware/core/#domino-core", 
            "text": "", 
            "title": "Domino Core"
        }, 
        {
            "location": "/domino/hardware/core/#pinout-diagram", 
            "text": "Domino Core is based on a Atheros AP121 design and protected by a NDA with Qualcomm. So we cannot publish the design. However, we have made comprehensive pinout diagram of the Core board.    Domino Core Pinout PDF", 
            "title": "Pinout diagram"
        }, 
        {
            "location": "/domino/hardware/core/#domino-di-base-board", 
            "text": "Domino Di is a bare PCB for playing with Domino Core. You can solder the Domino Core onto the Di board as illustrated in this picture.   The design of Domino Di in github: https://github.com/domino-team/domino-hardware. Please check out the schematic, layout and BOM.", 
            "title": "Domino Di base board"
        }, 
        {
            "location": "/domino/hardware/core/#the-components-required", 
            "text": "To make it work, here is the components that you should solder onto the Di board:   The minimum requirements is to solder the  AMS1117  for power and zero ohm  R6 .   It is better to solder  C3  and  C7  to make it works better.  To make the PCB antenna work, solder 0ohm  R8  and  R10 . Otherwise, connect a uFL antenna.  To use LED and toggle buttons, solder the other required components.", 
            "title": "The components required"
        }, 
        {
            "location": "/domino/pi/", 
            "text": "Getting started\n\n\nDomino Pi headers\n\n\nDomino Pi has a Domino Core mounted onboard. When you first get your Pi, you need to learn about its headers.\n\n\n\n\nWhen placed as shown in the picture, you can divide the header into a left part and a right part. The left part contains 18pins on each North and South connectors and the right part contains 10 pins from both North and South connectors. \n\n\nThe left part can be used to mount Ethernet boards (including Single Ethernet and Dual Ethernet boards) and I2S board. While the right part can be used to mount USB boards (including Single USB and 3xUSB boards) and JTAG/SPI boards. Refer to the hardware section to make sure you mount the right extension boards in the right headers, otherwise you may break your Domino.\n\n\nFor a more detailed marking of the headers, refer to this diagram.\n\n\n\n\n\n\nAssembly\n\n\nPut the Ethernet and USB tile boards aligned with Domino Pi as shown, then plug the tile boards to the headers. \n\n\n\n\nPress the tile board firmly to the Domino Pi board. You can do the same for the Dual Ethernet board and the 3xUSB+MicroSD board.\n\n\n\n\nFor the LED board, just plug in the LED board as in this picture. Please make sure the LED board is plugged into the correct position by checking the header markings on the bottom of Domino Pi.\n\n\n\n\nConnections\n\n\nConnect your Domino with an Ethernet cable to your router. Then connect power to the MicroUSB connector on Domino Pi board and your board will be powered up!\n\n\n\n\nUsing Domino Pi\n\n\nWhen you see the LEDS (WAN, WLAN) light up, your Domino has booted up. Now using a browser (use Firefox or Chrome) to visit \nhttp://domino.local/\n, you will be able to access the WebUi of Domino.\n\n\nPlease visit \nthis page\n to get more details on how to use the Domino Pi WebUi.", 
            "title": "Domino Pi"
        }, 
        {
            "location": "/domino/pi/#domino-pi-headers", 
            "text": "Domino Pi has a Domino Core mounted onboard. When you first get your Pi, you need to learn about its headers.   When placed as shown in the picture, you can divide the header into a left part and a right part. The left part contains 18pins on each North and South connectors and the right part contains 10 pins from both North and South connectors.   The left part can be used to mount Ethernet boards (including Single Ethernet and Dual Ethernet boards) and I2S board. While the right part can be used to mount USB boards (including Single USB and 3xUSB boards) and JTAG/SPI boards. Refer to the hardware section to make sure you mount the right extension boards in the right headers, otherwise you may break your Domino.  For a more detailed marking of the headers, refer to this diagram.", 
            "title": "Domino Pi headers"
        }, 
        {
            "location": "/domino/pi/#assembly", 
            "text": "Put the Ethernet and USB tile boards aligned with Domino Pi as shown, then plug the tile boards to the headers.    Press the tile board firmly to the Domino Pi board. You can do the same for the Dual Ethernet board and the 3xUSB+MicroSD board.   For the LED board, just plug in the LED board as in this picture. Please make sure the LED board is plugged into the correct position by checking the header markings on the bottom of Domino Pi.", 
            "title": "Assembly"
        }, 
        {
            "location": "/domino/pi/#connections", 
            "text": "Connect your Domino with an Ethernet cable to your router. Then connect power to the MicroUSB connector on Domino Pi board and your board will be powered up!", 
            "title": "Connections"
        }, 
        {
            "location": "/domino/pi/#using-domino-pi", 
            "text": "When you see the LEDS (WAN, WLAN) light up, your Domino has booted up. Now using a browser (use Firefox or Chrome) to visit  http://domino.local/ , you will be able to access the WebUi of Domino.  Please visit  this page  to get more details on how to use the Domino Pi WebUi.", 
            "title": "Using Domino Pi"
        }, 
        {
            "location": "/domino/pi/pi/", 
            "text": "Domino Pi Hardware\n\n\nOverview\n\n\nDomino Pi is a low-cost, compact OpenWRT-based 802.11 bgn WiFi development board based on Qualcomm/Atheros AR9331 WiSoC.\n\n\n\n\nThe Domino Pi board extends the Domino Core module by adding the following features:\n\n\n\n\nIntegrated USB\n-\nUART bridge for serial port (default to U-Boot / Linux console)\n\n\nIntegrated +5 V input / +3.3 V output, 2 A DC/DC power supply\n\n\nIntegrated 2.4 GHz WiFi PCB antenna\n\n\nIntegrated Jumpstart push button\n\n\nIntegrated Power and Wireless LEDs\n\n\nIntegrated 2x 28 pin, 2.54 mm pitch headers\n\n\n\n\nThe dual edge headers provide:\n\n\n\n\nUSB 2.0 (host or slave)\n\n\n2 x 10/100MB Ethernet ports\n\n\nSPI (MOSI, MISO, CLK, CS)\n\n\nI2S (CK, WS, SD, MCK, MICIN)\n\n\nSLIC\n\n\nSPDIF Output\n\n\nJTAG (TMS, TCK, TDI, TDO)\n\n\n9x LEDs (also used for bootstrap settings)\n\n\nUp to 29 x GPIOs (multiplexed with other functions above)\n\n\n\n\nSpecifications\n\n\n\n\n\n\n\n\nSpecs\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nWeight\n\n\n16 g\n\n\n\n\n\n\nDimensions\n\n\n71.12 x 33.02 x 10 mm\n\n\n\n\n\n\nCPU\n\n\nAR9331, 400 MHz\n\n\n\n\n\n\nMemory\n\n\n16 MB SPI Flash and 64 MB DDR2 RAM\n\n\n\n\n\n\nRF Frequency\n\n\n2.4 GHz band\n\n\n\n\n\n\nMax Output Power\n\n\n+21 dBm\n\n\n\n\n\n\nWireless Standards\n\n\n802.11 bgn\n\n\n\n\n\n\nAntenna (port)\n\n\nU.FL connector, built-in PCB antenna\n\n\n\n\n\n\nPower Supply\n\n\n5 V, max. power consumption 6.5 W\n\n\n\n\n\n\nFirmware\n\n\nU-Boot, OpenWRT\n\n\n\n\n\n\nAvailable Interfaces\n\n\nUSB host/slave, 2 x Ethernet, SPI, I2S, SLIC, SPDIF, JTAG, 9x LEDs, 29 x GPIOs\n\n\n\n\n\n\nUser Interfaces\n\n\nUSB UART bridge, Jumpstart push button, Power Led, Wireless LED\n\n\n\n\n\n\n\n\nPinout Diagram\n\n\n\n\nGet in PDF format.\n\n\nDomino Pi Pinout", 
            "title": "Domino Pi Baseboard"
        }, 
        {
            "location": "/domino/pi/pi/#domino-pi-hardware", 
            "text": "", 
            "title": "Domino Pi Hardware"
        }, 
        {
            "location": "/domino/pi/pi/#overview", 
            "text": "Domino Pi is a low-cost, compact OpenWRT-based 802.11 bgn WiFi development board based on Qualcomm/Atheros AR9331 WiSoC.   The Domino Pi board extends the Domino Core module by adding the following features:   Integrated USB - UART bridge for serial port (default to U-Boot / Linux console)  Integrated +5 V input / +3.3 V output, 2 A DC/DC power supply  Integrated 2.4 GHz WiFi PCB antenna  Integrated Jumpstart push button  Integrated Power and Wireless LEDs  Integrated 2x 28 pin, 2.54 mm pitch headers   The dual edge headers provide:   USB 2.0 (host or slave)  2 x 10/100MB Ethernet ports  SPI (MOSI, MISO, CLK, CS)  I2S (CK, WS, SD, MCK, MICIN)  SLIC  SPDIF Output  JTAG (TMS, TCK, TDI, TDO)  9x LEDs (also used for bootstrap settings)  Up to 29 x GPIOs (multiplexed with other functions above)", 
            "title": "Overview"
        }, 
        {
            "location": "/domino/pi/pi/#specifications", 
            "text": "Specs  Value      Weight  16 g    Dimensions  71.12 x 33.02 x 10 mm    CPU  AR9331, 400 MHz    Memory  16 MB SPI Flash and 64 MB DDR2 RAM    RF Frequency  2.4 GHz band    Max Output Power  +21 dBm    Wireless Standards  802.11 bgn    Antenna (port)  U.FL connector, built-in PCB antenna    Power Supply  5 V, max. power consumption 6.5 W    Firmware  U-Boot, OpenWRT    Available Interfaces  USB host/slave, 2 x Ethernet, SPI, I2S, SLIC, SPDIF, JTAG, 9x LEDs, 29 x GPIOs    User Interfaces  USB UART bridge, Jumpstart push button, Power Led, Wireless LED", 
            "title": "Specifications"
        }, 
        {
            "location": "/domino/pi/pi/#pinout-diagram", 
            "text": "Get in PDF format.  Domino Pi Pinout", 
            "title": "Pinout Diagram"
        }, 
        {
            "location": "/domino/pi/single_eth/", 
            "text": "Domino Single Eth Tile Board\n\n\nIntroduction\n\n\nWhen connected to the Domino Pi or Domino Qi Mini board, the Domino Single Ethernet Tile adds 1x standard RJ45 IEEE 802.3 10/100MB Ethernet port:\n\n\n\n\n1x WAN on port P4, DTE wiring (1=T+, 2=T-, 3=R+, 6=R-)\n\n\nUART connectors\n\n\n\n\nThe Domino Single Ethernet Tile also includes the equivalent of the Domino LED Tile:\n\n\n\n\n1x Blue LED: WLAN (LED0)\n\n\n1x White LED: USB (LED1)\n\n\n4x Green LEDs: LAN1-4 (LED2-5)\n\n\n1x Red LED: WAN (LED6)\n\n\n1x Orange LED: SYS (LED7)\n\n\n1x Yellow LED: WPS (LED8)\n\n\nThe Domino Single Ethernet Tile connects as a West-side Tile.\n\n\n\n\nIt is compatible with the Domino Pi and Domino Qi Mini boards.\n\n\n\n\n\n\n\n\n**The picture is not the newest! The newest is with serial connectors**\n\n\n\n\nSpecifications\n\n\nWeight  11 g\nDimensions  45.72 x 33.02 x 25 mm\n\n\nPinout\n\n\n\n\nPinout in PDF", 
            "title": "Domino Pi - Single Eth board"
        }, 
        {
            "location": "/domino/pi/single_eth/#domino-single-eth-tile-board", 
            "text": "", 
            "title": "Domino Single Eth Tile Board"
        }, 
        {
            "location": "/domino/pi/single_eth/#introduction", 
            "text": "When connected to the Domino Pi or Domino Qi Mini board, the Domino Single Ethernet Tile adds 1x standard RJ45 IEEE 802.3 10/100MB Ethernet port:   1x WAN on port P4, DTE wiring (1=T+, 2=T-, 3=R+, 6=R-)  UART connectors   The Domino Single Ethernet Tile also includes the equivalent of the Domino LED Tile:   1x Blue LED: WLAN (LED0)  1x White LED: USB (LED1)  4x Green LEDs: LAN1-4 (LED2-5)  1x Red LED: WAN (LED6)  1x Orange LED: SYS (LED7)  1x Yellow LED: WPS (LED8)  The Domino Single Ethernet Tile connects as a West-side Tile.   It is compatible with the Domino Pi and Domino Qi Mini boards.     **The picture is not the newest! The newest is with serial connectors**", 
            "title": "Introduction"
        }, 
        {
            "location": "/domino/pi/single_eth/#specifications", 
            "text": "Weight  11 g\nDimensions  45.72 x 33.02 x 25 mm", 
            "title": "Specifications"
        }, 
        {
            "location": "/domino/pi/single_eth/#pinout", 
            "text": "Pinout in PDF", 
            "title": "Pinout"
        }, 
        {
            "location": "/domino/pi/dual_eth/", 
            "text": "Domino Dual Ethernet Tile Board\n\n\nOverview\n\n\nWhen connected to the Domino Pi board, the Domino Dual Ethernet Tile adds 2x standard RJ45 IEEE 802.3 10/100MB Ethernet ports:\n\n\n\n\n1x LAN on port P0, DCE wiring (1=R+, 2=R-, 3=T+, 6=T-), lower RJ45 Jack\n\n\n1x WAN on port P4, DTE wiring (1=T+, 2=T-, 3=R+, 6=R-), upper RJ45 Jack\n\n\nUART connectors\n\n\n\n\nThe Domino Dual Ethernet Tile also includes the equivalent of the Domino LED Tile:\n\n\n\n\n1x Blue LED: WLAN (LED0)\n\n\n1x White LED: USB (LED1)\n\n\n4x Green LEDs: LAN1-4 (LED2-5)\n\n\n1x Red LED: WAN (LED6)\n\n\n1x Orange LED: SYS (LED7)\n\n\n1x Yellow LED: WPS (LED8)\n\n\n\n\nThe Domino Dual Ethernet Tile connects as a West-side Tile.\n\n\nIt is only compatible with the Domino Pi board, as the Domino Qi Mini does not feature 2x Ethernet ports.\n\n\n\n\n\n\n\n\nPhoto is not the newest. There is UART connector on the board now!\n\n\n\n\nSpecifications\n\n\nWeight  21 g\nDimensions  45.72 x 33.02 x 35 mm\n\n\nPinout\n\n\n\n\nPinout in PDF", 
            "title": "Domino Pi - Due Eth board"
        }, 
        {
            "location": "/domino/pi/dual_eth/#domino-dual-ethernet-tile-board", 
            "text": "", 
            "title": "Domino Dual Ethernet Tile Board"
        }, 
        {
            "location": "/domino/pi/dual_eth/#overview", 
            "text": "When connected to the Domino Pi board, the Domino Dual Ethernet Tile adds 2x standard RJ45 IEEE 802.3 10/100MB Ethernet ports:   1x LAN on port P0, DCE wiring (1=R+, 2=R-, 3=T+, 6=T-), lower RJ45 Jack  1x WAN on port P4, DTE wiring (1=T+, 2=T-, 3=R+, 6=R-), upper RJ45 Jack  UART connectors   The Domino Dual Ethernet Tile also includes the equivalent of the Domino LED Tile:   1x Blue LED: WLAN (LED0)  1x White LED: USB (LED1)  4x Green LEDs: LAN1-4 (LED2-5)  1x Red LED: WAN (LED6)  1x Orange LED: SYS (LED7)  1x Yellow LED: WPS (LED8)   The Domino Dual Ethernet Tile connects as a West-side Tile.  It is only compatible with the Domino Pi board, as the Domino Qi Mini does not feature 2x Ethernet ports.     Photo is not the newest. There is UART connector on the board now!", 
            "title": "Overview"
        }, 
        {
            "location": "/domino/pi/dual_eth/#specifications", 
            "text": "Weight  21 g\nDimensions  45.72 x 33.02 x 35 mm", 
            "title": "Specifications"
        }, 
        {
            "location": "/domino/pi/dual_eth/#pinout", 
            "text": "Pinout in PDF", 
            "title": "Pinout"
        }, 
        {
            "location": "/domino/pi/single_usb/", 
            "text": "Domino Single USB Tile Board\n\n\nOverview\n\n\nWhen connected to the Domino Pi or Domino Qi Mini board, the Domino Single USB Tile adds 1x standard USB 2.0 USB Type A Master or Slave port. \n\n\nFeatures:\n\n\n\n\nBreak out the USB pins to physical USB-A\n\n\nUSB power controlled by GPIO6\n\n\n\n\nIf you USB has no power using your own firmware, most of time, it is because of GPIO6 is set to Low. Set it to high to enable USB power\n\n\n    # Enable the USB power by using GPIO6\n\n    echo \n6\n \n /sys/class/gpio/export\n    echo \nout\n \n /sys/class/gpio/6/direction\n    echo \n1\n \n /sys/class/gpio/gpio6/value\n\n\n\n\nThe Domino Single USB Tile connects as an East-side Tile.\n\n\nIt is compatible with the Domino Pi and Domino Qi Mini boards.\n\n\n\n\n\n\n\n\nSpecifications\n\n\nWeight 4 g \nDimensions 5.72 x 33.02 x 25 mm", 
            "title": "Domino Pi - Signle USB board"
        }, 
        {
            "location": "/domino/pi/single_usb/#domino-single-usb-tile-board", 
            "text": "", 
            "title": "Domino Single USB Tile Board"
        }, 
        {
            "location": "/domino/pi/single_usb/#overview", 
            "text": "When connected to the Domino Pi or Domino Qi Mini board, the Domino Single USB Tile adds 1x standard USB 2.0 USB Type A Master or Slave port.   Features:   Break out the USB pins to physical USB-A  USB power controlled by GPIO6   If you USB has no power using your own firmware, most of time, it is because of GPIO6 is set to Low. Set it to high to enable USB power      # Enable the USB power by using GPIO6\n\n    echo  6    /sys/class/gpio/export\n    echo  out    /sys/class/gpio/6/direction\n    echo  1    /sys/class/gpio/gpio6/value  The Domino Single USB Tile connects as an East-side Tile.  It is compatible with the Domino Pi and Domino Qi Mini boards.", 
            "title": "Overview"
        }, 
        {
            "location": "/domino/pi/single_usb/#specifications", 
            "text": "Weight 4 g \nDimensions 5.72 x 33.02 x 25 mm", 
            "title": "Specifications"
        }, 
        {
            "location": "/domino/pi/usb_combo/", 
            "text": "Domino 3USB+MicroSD Combo Title Board\n\n\nOverview\n\n\nWhen connected to the Domino Pi or Domino Qi Mini board, the Domino 3x USB / MicroSD Combo Tile adds:\n\n\n\n\n1x \nUSB-A\n R/A Horizontal Socket for USB 2.0 Low / Full / High-speed Host Port\n\n\n2x USB 2.0 Low / Full / High-speed Host Ports on standard \nPC USB front-panel-type\n 2x5 Header\n\n\n1x \nMicroSD Card Slot\n (Push to Lock / Push to Unlock)\n\n\nUSB \npower control\n by GPIO6 \n\n\n\n\nIf you USB has no power using your own firmware, most of time, it is because of GPIO6 is set to Low. Set it to high to enable USB power\n\n\n    # Enable the USB power by using GPIO6\n\n    echo \n6\n \n /sys/class/gpio/export\n    echo \nout\n \n /sys/class/gpio/6/direction\n    echo \n1\n \n /sys/class/gpio/gpio6/value\n\n\n\n\nThe Domino 3x USB / MicroSD Combo Tile connects as an East-side Tile.\n\n\nIt is compatible with the Domino Pi and Domino Qi Mini boards.\n\n\n\n\n\n\n\n\nSpecifications\n\n\nWeight 7 g \nDimensions 34.54 x 33.02 x 15 mm", 
            "title": "Domino Pi - 3xUSB+MicroSD combo"
        }, 
        {
            "location": "/domino/pi/usb_combo/#domino-3usbmicrosd-combo-title-board", 
            "text": "", 
            "title": "Domino 3USB+MicroSD Combo Title Board"
        }, 
        {
            "location": "/domino/pi/usb_combo/#overview", 
            "text": "When connected to the Domino Pi or Domino Qi Mini board, the Domino 3x USB / MicroSD Combo Tile adds:   1x  USB-A  R/A Horizontal Socket for USB 2.0 Low / Full / High-speed Host Port  2x USB 2.0 Low / Full / High-speed Host Ports on standard  PC USB front-panel-type  2x5 Header  1x  MicroSD Card Slot  (Push to Lock / Push to Unlock)  USB  power control  by GPIO6    If you USB has no power using your own firmware, most of time, it is because of GPIO6 is set to Low. Set it to high to enable USB power      # Enable the USB power by using GPIO6\n\n    echo  6    /sys/class/gpio/export\n    echo  out    /sys/class/gpio/6/direction\n    echo  1    /sys/class/gpio/gpio6/value  The Domino 3x USB / MicroSD Combo Tile connects as an East-side Tile.  It is compatible with the Domino Pi and Domino Qi Mini boards.", 
            "title": "Overview"
        }, 
        {
            "location": "/domino/pi/usb_combo/#specifications", 
            "text": "Weight 7 g \nDimensions 34.54 x 33.02 x 15 mm", 
            "title": "Specifications"
        }, 
        {
            "location": "/domino/pi/i2s/", 
            "text": "\ufeffDomino I2S Audio Tile Board\n\n\nOverview\n\n\nWhen connected to the Domino Pi board, the Domino I2S Tile adds audio capabilities and ports:\n\n\n\n\nWolfson WM8978 Stereo CODEC with Speaker Driver (Datasheet), faturing:\n\n\nDAC SNR 98dB, THD -84dB ('A' weighted @ 48kHz)\n\n\nADC SNR 95dB, THD -84dB ('A' weighted @ 48kHz)\n\n\nOn-chip Headphone Driver with 'capless' option\n\n\n40mW per channel into 16ohm / 3.3V SPKVDD\n\n\n1W output power into 8ohm BTL speaker / 5V SPKVDD\n\n\nCapable of driving piezo speakers\n\n\nStereo speaker drive configuration\n\n\nStereo Differential or mono microphone Interfaces\n\n\nProgrammable preamp gain\n\n\nPsuedo differential inputs with common mode rejection\n\n\nProgrammable ALC / Noise Gate in ADC path\n\n\nLow-noise bias supplied for electret microphones\n\n\nEnhanced 3-D function for improved stereo separation\n\n\nDigital playback limiter\n\n\n5-band Equaliser (record or playback)\n\n\nProgrammable ADC High Pass Filter (wind noise reduction)\n\n\nProgrammable ADC Notch Filter\n\n\nAux inputs for stereo analogue input signals or 'beep'\n\n\nOn-chip PLL supporting 12, 13, 19.2MHz and other clocks\n\n\nSupport for 8, 11.025, 12, 16, 22.05, 24, 32, 44.1 and 48kHz sample rates\n\n\nLow power, low voltage - 2.5V to 3.6V (digital: 1.71V to 3.6V)\n\n\n5x5mm 32-lead QFN package\n\n\n3.5 mm Stereo Audio Jack (Tip: Left / Ring: Right / Sleeve: Ground): LINE OUT / HEADPHONE OUT\n\n\nSPDIF Optical Transmitter: DIGITAL AUDIO OUT\n\n\nOn 2x edge header pins: Stereo SPEAKER OUT\n\n\nIntegrated ? 4.5 mm Mono Electret Microphone, also available on edge header pins\n\n\nOn 2x Pin Header: Stereo AUX IN\n\n\n\n\nThe Domino Dual Ethernet Tile connects as a West-side Tile.\n\n\nIt is only compatible with the Domino Pi board, as the Domino Qi Mini does not feature I2S interface.\n\n\n\n\n\n\n\n\nSpecifications\n\n\n\n\n\n\n\n\nSpecs\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nWeight\n\n\n10 g\n\n\n\n\n\n\nDimensions\n\n\n50.8 x 33.02 x 24 mm\n\n\n\n\n\n\nAudio CODEC\n\n\nWolfson WM8978\n\n\n\n\n\n\nLINE OUT / HEADPHONE OUT\n\n\n3.5 mm Stereo Audio Jack\n\n\n\n\n\n\nDIGITAL AUDIO OUT\n\n\nSPDIF Optical Transmitter\n\n\n\n\n\n\nSPEAKER OUT\n\n\n2x Edge Header Pins\n\n\n\n\n\n\nMicrophone\n\n\nIntegrated ? 45 mm Mono Electret Microphone,  2x Edge Header Pins\n\n\n\n\n\n\nAUX IN\n\n\n2x Header Pins\n\n\n\n\n\n\n\n\nPinout\n\n\n\n\nPinout in PDF\n\n\nPlaying Audio and Music Using I2S board\n\n\nPlay Audio and Musci", 
            "title": "Domino Pi - I2S board"
        }, 
        {
            "location": "/domino/pi/i2s/#domino-i2s-audio-tile-board", 
            "text": "", 
            "title": "\ufeffDomino I2S Audio Tile Board"
        }, 
        {
            "location": "/domino/pi/i2s/#overview", 
            "text": "When connected to the Domino Pi board, the Domino I2S Tile adds audio capabilities and ports:   Wolfson WM8978 Stereo CODEC with Speaker Driver (Datasheet), faturing:  DAC SNR 98dB, THD -84dB ('A' weighted @ 48kHz)  ADC SNR 95dB, THD -84dB ('A' weighted @ 48kHz)  On-chip Headphone Driver with 'capless' option  40mW per channel into 16ohm / 3.3V SPKVDD  1W output power into 8ohm BTL speaker / 5V SPKVDD  Capable of driving piezo speakers  Stereo speaker drive configuration  Stereo Differential or mono microphone Interfaces  Programmable preamp gain  Psuedo differential inputs with common mode rejection  Programmable ALC / Noise Gate in ADC path  Low-noise bias supplied for electret microphones  Enhanced 3-D function for improved stereo separation  Digital playback limiter  5-band Equaliser (record or playback)  Programmable ADC High Pass Filter (wind noise reduction)  Programmable ADC Notch Filter  Aux inputs for stereo analogue input signals or 'beep'  On-chip PLL supporting 12, 13, 19.2MHz and other clocks  Support for 8, 11.025, 12, 16, 22.05, 24, 32, 44.1 and 48kHz sample rates  Low power, low voltage - 2.5V to 3.6V (digital: 1.71V to 3.6V)  5x5mm 32-lead QFN package  3.5 mm Stereo Audio Jack (Tip: Left / Ring: Right / Sleeve: Ground): LINE OUT / HEADPHONE OUT  SPDIF Optical Transmitter: DIGITAL AUDIO OUT  On 2x edge header pins: Stereo SPEAKER OUT  Integrated ? 4.5 mm Mono Electret Microphone, also available on edge header pins  On 2x Pin Header: Stereo AUX IN   The Domino Dual Ethernet Tile connects as a West-side Tile.  It is only compatible with the Domino Pi board, as the Domino Qi Mini does not feature I2S interface.", 
            "title": "Overview"
        }, 
        {
            "location": "/domino/pi/i2s/#specifications", 
            "text": "Specs  Value      Weight  10 g    Dimensions  50.8 x 33.02 x 24 mm    Audio CODEC  Wolfson WM8978    LINE OUT / HEADPHONE OUT  3.5 mm Stereo Audio Jack    DIGITAL AUDIO OUT  SPDIF Optical Transmitter    SPEAKER OUT  2x Edge Header Pins    Microphone  Integrated ? 45 mm Mono Electret Microphone,  2x Edge Header Pins    AUX IN  2x Header Pins", 
            "title": "Specifications"
        }, 
        {
            "location": "/domino/pi/i2s/#pinout", 
            "text": "Pinout in PDF", 
            "title": "Pinout"
        }, 
        {
            "location": "/domino/pi/i2s/#playing-audio-and-music-using-i2s-board", 
            "text": "Play Audio and Musci", 
            "title": "Playing Audio and Music Using I2S board"
        }, 
        {
            "location": "/domino/pi/spi_jtag/", 
            "text": "Domino SPI/JTAG Tile Board\n\n\nOverview\n\n\nWhen connected to the Domino Pi board, the Domino SPI/JTAG Tile adds several interesting features for developers:\n\n\n\n\nOf 25 wide-body SOP8 IC Test Socket / programmer adapter OTS-20 (8X2) 1.27-01 dual position SOP8 adapter SOP8 to DIP8 200mil\n\n\nSOP8 IC footprint\n\n\nStandard MIPS/JTAG 2 x 7 R/A shrouded header\n\n\nRESET push button\n\n\nJumper to control Flash Write Protection with AR9331 GPIO24\n\n\nThe Domino SPI/JTAG Tile connects as an East-side Tile.\n\n\n\n\nIt is compatible with the Domino Pi board only.\n\n\n\n\n\n\nSpecifications\n\n\nWeight  14 g\nDimensions  25.4 x 33.02 x 37 mm\n\n\nDebricking Domino Pi using SPI/JTAG tile board\n\n\nDebricking guidance", 
            "title": "Domino Pi - SPI/JTAG"
        }, 
        {
            "location": "/domino/pi/spi_jtag/#domino-spijtag-tile-board", 
            "text": "", 
            "title": "Domino SPI/JTAG Tile Board"
        }, 
        {
            "location": "/domino/pi/spi_jtag/#overview", 
            "text": "When connected to the Domino Pi board, the Domino SPI/JTAG Tile adds several interesting features for developers:   Of 25 wide-body SOP8 IC Test Socket / programmer adapter OTS-20 (8X2) 1.27-01 dual position SOP8 adapter SOP8 to DIP8 200mil  SOP8 IC footprint  Standard MIPS/JTAG 2 x 7 R/A shrouded header  RESET push button  Jumper to control Flash Write Protection with AR9331 GPIO24  The Domino SPI/JTAG Tile connects as an East-side Tile.   It is compatible with the Domino Pi board only.", 
            "title": "Overview"
        }, 
        {
            "location": "/domino/pi/spi_jtag/#specifications", 
            "text": "Weight  14 g\nDimensions  25.4 x 33.02 x 37 mm", 
            "title": "Specifications"
        }, 
        {
            "location": "/domino/pi/spi_jtag/#debricking-domino-pi-using-spijtag-tile-board", 
            "text": "Debricking guidance", 
            "title": "Debricking Domino Pi using SPI/JTAG tile board"
        }, 
        {
            "location": "/domino/pi/led/", 
            "text": "\ufeffDomino LED Tile Board\n\n\nOverview\n\n\nWhen connected to the Domino Pi board, the Domino LED Tile adds the following LEDs:\n\n\n\n\n1x Blue LED: WLAN (LED0)\n\n\n1x White LED: USB (LED1)\n\n\n4x Green LEDs: LAN1-4 (LED2-5)\n\n\n1x Red LED: WAN (LED6)\n\n\n1x Orange LED: SYS (LED7)\n\n\n1x Yellow LEd: WPS (LED8)\n\n\nThe Domino LED Tile connects as a West-side Tile.\n\n\n\n\nIt is only compatible with the Domino Pi board, as the Domino Qi Mini does not feature LED GPIOs, but instead integrates the standard Arduino Yun\nTM\n LEDs.\n\n\n\n\n\n\nSpecifications\n\n\nWeight  1 g\nDimensions  27.94 x 7.62 x 12 mm\n\n\nPinout\n\n\n\n\nPinout in PDF", 
            "title": "Domino Pi - LED"
        }, 
        {
            "location": "/domino/pi/led/#domino-led-tile-board", 
            "text": "", 
            "title": "\ufeffDomino LED Tile Board"
        }, 
        {
            "location": "/domino/pi/led/#overview", 
            "text": "When connected to the Domino Pi board, the Domino LED Tile adds the following LEDs:   1x Blue LED: WLAN (LED0)  1x White LED: USB (LED1)  4x Green LEDs: LAN1-4 (LED2-5)  1x Red LED: WAN (LED6)  1x Orange LED: SYS (LED7)  1x Yellow LEd: WPS (LED8)  The Domino LED Tile connects as a West-side Tile.   It is only compatible with the Domino Pi board, as the Domino Qi Mini does not feature LED GPIOs, but instead integrates the standard Arduino Yun TM  LEDs.", 
            "title": "Overview"
        }, 
        {
            "location": "/domino/pi/led/#specifications", 
            "text": "Weight  1 g\nDimensions  27.94 x 7.62 x 12 mm", 
            "title": "Specifications"
        }, 
        {
            "location": "/domino/pi/led/#pinout", 
            "text": "Pinout in PDF", 
            "title": "Pinout"
        }, 
        {
            "location": "/domino/qi/mini/", 
            "text": "Domino Qi Mini\n\n\nOverview\n\n\nDomino Qi Mini is a small-sized board that is a fully compatible derivative of the original Arduino Yun\nTM\n, crammed into a tiny form factor.\n\n\nPlug it onto the Domino Qi baseboard in order to be fully compatible with the ubiquitous ArduinoTM Shield form factor and benefit from hundreds of already existing shields for rapid prototyping.\n\n\nDomino Qi Mini is a low-cost, compact OpenWRT-based 802.11 bgn WiFi board based on Qualcomm/Atheros AR9331 WiSoC and on the Atmel ATMega32U4 MCU. Communication between the 2 chips is achieved using an Arduino Yun\nTM\n-compatible Bridge hardware and software library.\n\n\n\n\n\n\n\n\nThe Domino Qi Mini board extends the Domino Core module by adding the following features:\n\n\n\n\nAtmel ATMega32U4 MCU\n\n\nArduino Yun\nTM\n-compatible Bridge\n\n\n+5 V input / +3.3 V output, 2 A DC/DC power supply\n\n\n2.4 GHz WiFi PCB antenna\n\n\n32U4 Reset, WLAN Reset and User\n push buttons\n\n\nPower, Wireless, WAN\n and \nUSB\n LEDs\n\n\n2x 22 pin, 2.54 mm pitch headers\n\n\n\n\nThe dual edge headers provide:\n\n\n\n\nUSB 2.0 (host or slave)\n\n\n1x 10/100MB Ethernet port\n\n\nATMega32U4 ICSP (MOSI, MISO, SCK, SS)\n\n\nATMega32U4 RESET pin\n\n\nATMega32U4 UART (TXD1, RXD1)\n\n\nATMega32U4 I2C (SDA, SCL)\n\n\nATMega32U4 digital (+ PWM) pins (D4-D6 and IO8-13)\n\n\nATmega Analog pins (A0-5 + AREF)\n\n\nArduino Yun\nTM\n-compatible pins (HANDSHAKE, GP6)\n\n\n+5V, +3.3V and GND power supply pins\n\n\n\n\nNote\n: Domino is not connected to Arduino\nTM\n and the Domino Qi Mini product is a derivative. Any technical support must be directed to us, not to Arduino\nTM\n.\n\n\nSpecifications\n\n\n\n\n\n\n\n\nspecs\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nWeight\n\n\n12 g\n\n\n\n\n\n\nDimensions\n\n\n55.88 x 33.02 x 10.8 mm\n\n\n\n\n\n\nCPU\n\n\nAR9331, 400 MHz + ATMega32U4, 16 MHz\n\n\n\n\n\n\nMemory\n\n\n16 MB SPI Flash and 64 MB DDR2 RAM\n\n\n\n\n\n\nRF Frequency\n\n\n2.4 GHz band\n\n\n\n\n\n\nMax Output Power\n\n\n+21 dBm\n\n\n\n\n\n\nWireless Standards\n\n\n802.11 bgn\n\n\n\n\n\n\nAntenna (port)\n\n\nU.FL connector, built-in PCB antenna\n\n\n\n\n\n\nPower Supply\n\n\n5 V, max.\n\n\n\n\n\n\npower consumption\n\n\n6.5 W\n\n\n\n\n\n\nFirmware\n\n\nU-Boot, OpenWRT\n\n\n\n\n\n\nAvailable Interfaces\n\n\nUSB host/slave, 1 x Ethernet, ICSP, ATMega32U4 Digital pins (+ PWM), ATmega32U4 Analog pins, Arduino Yun HANDSHAKE + GP6, Power Supply pins\n\n\n\n\n\n\nUser Interfaces\n\n\nATMega32U4 USB UART bridge, 32U4 RESET push button, WLAN RESET push button, USER push button, Power Led, Wireless LED, WAN LED, USB LED\n\n\n\n\n\n\n\n\nPinout\n\n\n\n\nQi Mini Pinout in PDF", 
            "title": "Domino Qi Mini"
        }, 
        {
            "location": "/domino/qi/mini/#domino-qi-mini", 
            "text": "", 
            "title": "Domino Qi Mini"
        }, 
        {
            "location": "/domino/qi/mini/#overview", 
            "text": "Domino Qi Mini is a small-sized board that is a fully compatible derivative of the original Arduino Yun TM , crammed into a tiny form factor.  Plug it onto the Domino Qi baseboard in order to be fully compatible with the ubiquitous ArduinoTM Shield form factor and benefit from hundreds of already existing shields for rapid prototyping.  Domino Qi Mini is a low-cost, compact OpenWRT-based 802.11 bgn WiFi board based on Qualcomm/Atheros AR9331 WiSoC and on the Atmel ATMega32U4 MCU. Communication between the 2 chips is achieved using an Arduino Yun TM -compatible Bridge hardware and software library.     The Domino Qi Mini board extends the Domino Core module by adding the following features:   Atmel ATMega32U4 MCU  Arduino Yun TM -compatible Bridge  +5 V input / +3.3 V output, 2 A DC/DC power supply  2.4 GHz WiFi PCB antenna  32U4 Reset, WLAN Reset and User  push buttons  Power, Wireless, WAN  and  USB  LEDs  2x 22 pin, 2.54 mm pitch headers   The dual edge headers provide:   USB 2.0 (host or slave)  1x 10/100MB Ethernet port  ATMega32U4 ICSP (MOSI, MISO, SCK, SS)  ATMega32U4 RESET pin  ATMega32U4 UART (TXD1, RXD1)  ATMega32U4 I2C (SDA, SCL)  ATMega32U4 digital (+ PWM) pins (D4-D6 and IO8-13)  ATmega Analog pins (A0-5 + AREF)  Arduino Yun TM -compatible pins (HANDSHAKE, GP6)  +5V, +3.3V and GND power supply pins   Note : Domino is not connected to Arduino TM  and the Domino Qi Mini product is a derivative. Any technical support must be directed to us, not to Arduino TM .", 
            "title": "Overview"
        }, 
        {
            "location": "/domino/qi/mini/#specifications", 
            "text": "specs  Value      Weight  12 g    Dimensions  55.88 x 33.02 x 10.8 mm    CPU  AR9331, 400 MHz + ATMega32U4, 16 MHz    Memory  16 MB SPI Flash and 64 MB DDR2 RAM    RF Frequency  2.4 GHz band    Max Output Power  +21 dBm    Wireless Standards  802.11 bgn    Antenna (port)  U.FL connector, built-in PCB antenna    Power Supply  5 V, max.    power consumption  6.5 W    Firmware  U-Boot, OpenWRT    Available Interfaces  USB host/slave, 1 x Ethernet, ICSP, ATMega32U4 Digital pins (+ PWM), ATmega32U4 Analog pins, Arduino Yun HANDSHAKE + GP6, Power Supply pins    User Interfaces  ATMega32U4 USB UART bridge, 32U4 RESET push button, WLAN RESET push button, USER push button, Power Led, Wireless LED, WAN LED, USB LED", 
            "title": "Specifications"
        }, 
        {
            "location": "/domino/qi/mini/#pinout", 
            "text": "Qi Mini Pinout in PDF", 
            "title": "Pinout"
        }, 
        {
            "location": "/domino/qi/base/", 
            "text": "Domino Qi Baseboard\n\n\nOverview\n\n\nThe Domino Qi Base Board is an adapter board for the Domino Mini Board.\n\n\nPlug the Domino Qi Mini Board onto this Domino Qi Base Board in order to be fully compatible with the ubiquitous ArduinoTM Shield form factor and benefit from hundreds of already existing shields for rapid prototyping.\n\n\n\n\n\n\n\n\nThe Domino Qi Base Board extends the Domino Qi Mini Board by adding the following features:\n\n\n\n\n3x USB 2.0 Low / Full / High-speed USB Hub + MicroSD Card Reader Combo Chip AU6350-MGL (Datasheet)\n\n\n1x IEEE 802.3 10/100 Ethernet Port\n\n\n1x USB-A R/A Vertical Socket for USB 2.0 Low / Full / High-speed Host Port\n\n\n2x USB 2.0 Low / Full / High-speed Host Ports on standard PC USB front-panel-type 2x5 Header\n\n\n1x MicroSD Card Slot (Push to Lock / Push to Unlock)\n\n\n1x MicroUSB connector for +5V power supply, featuring an onboard +3.3V/2A switching DC/DC converter\n\n\n\n\nThe Domino Qi Base Board provides the standard ArduinoTM shield connectors:\n\n\n\n\nATMega32U4 ICSP (MOSI, MISO, SCK, SS)\n\n\nATMega32U4 RESET pin\n\n\nATMega32U4 UART (TXD1, RXD1)\n\n\nATMega32U4 I2C (SDA, SCL)\n\n\nATMega32U4 digital (+ PWM) pins (D4-D6 and IO8-13)\n\n\nATmega Analog pins (A0-5 + AREF)\n\n\nArduino Yun\nTM\n-compatible pins (HANDSHAKE, GP6)\n\n\n+5V, +3.3V and GND power supply pins\n\n\n\n\nNote\n: Domino is not connected to ArduinoTM and the Domino Qi Mini product is a derivative. Any technical support must be directed to us, not to Arduino\nTM\n.\n\n\nSpecifications\n\n\n\n\n\n\n\n\nSpecs\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nWeight\n\n\n20 g\n\n\n\n\n\n\nDimensions\n\n\n68.58 x 53.34 x 17 mm\n\n\n\n\n\n\nPower Supply\n\n\n5 V, max.\n\n\n\n\n\n\npower consumption\n\n\n6.5 W\n\n\n\n\n\n\nAvailable Interfaces\n\n\n3x USB host, 1 x Ethernet, ICSP, ATMega32U4 Digital pins (+ PWM), ATmega32U4 Analog pins, Arduino Yun HANDSHAKE + GP6, Power Supply pins\n\n\n\n\n\n\n\n\nPinout\n\n\n\n\nQi Pinout in PDF", 
            "title": "Domino Qi baseboard"
        }, 
        {
            "location": "/domino/qi/base/#domino-qi-baseboard", 
            "text": "", 
            "title": "Domino Qi Baseboard"
        }, 
        {
            "location": "/domino/qi/base/#overview", 
            "text": "The Domino Qi Base Board is an adapter board for the Domino Mini Board.  Plug the Domino Qi Mini Board onto this Domino Qi Base Board in order to be fully compatible with the ubiquitous ArduinoTM Shield form factor and benefit from hundreds of already existing shields for rapid prototyping.     The Domino Qi Base Board extends the Domino Qi Mini Board by adding the following features:   3x USB 2.0 Low / Full / High-speed USB Hub + MicroSD Card Reader Combo Chip AU6350-MGL (Datasheet)  1x IEEE 802.3 10/100 Ethernet Port  1x USB-A R/A Vertical Socket for USB 2.0 Low / Full / High-speed Host Port  2x USB 2.0 Low / Full / High-speed Host Ports on standard PC USB front-panel-type 2x5 Header  1x MicroSD Card Slot (Push to Lock / Push to Unlock)  1x MicroUSB connector for +5V power supply, featuring an onboard +3.3V/2A switching DC/DC converter   The Domino Qi Base Board provides the standard ArduinoTM shield connectors:   ATMega32U4 ICSP (MOSI, MISO, SCK, SS)  ATMega32U4 RESET pin  ATMega32U4 UART (TXD1, RXD1)  ATMega32U4 I2C (SDA, SCL)  ATMega32U4 digital (+ PWM) pins (D4-D6 and IO8-13)  ATmega Analog pins (A0-5 + AREF)  Arduino Yun TM -compatible pins (HANDSHAKE, GP6)  +5V, +3.3V and GND power supply pins   Note : Domino is not connected to ArduinoTM and the Domino Qi Mini product is a derivative. Any technical support must be directed to us, not to Arduino TM .", 
            "title": "Overview"
        }, 
        {
            "location": "/domino/qi/base/#specifications", 
            "text": "Specs  Value      Weight  20 g    Dimensions  68.58 x 53.34 x 17 mm    Power Supply  5 V, max.    power consumption  6.5 W    Available Interfaces  3x USB host, 1 x Ethernet, ICSP, ATMega32U4 Digital pins (+ PWM), ATmega32U4 Analog pins, Arduino Yun HANDSHAKE + GP6, Power Supply pins", 
            "title": "Specifications"
        }, 
        {
            "location": "/domino/qi/base/#pinout", 
            "text": "Qi Pinout in PDF", 
            "title": "Pinout"
        }, 
        {
            "location": "/domino/pi/using/", 
            "text": "Using Domino Pi\n\n\nLED and buttons\n\n\nDomino Pi board has two LEDs. The \nred LED\n is for Power, which should be always on when powered. The \nblue LED\n is for wireless (or WLAN), which will indicate the status of the wireless connection by default, but it can be configured to indicate any other status of the system. \n\n\n\n\nBeside the WLAN LED, there is a button which connects to \nGPIO 11\n. This button can be reconfigured by scripts, but the default action is: \n\n\n\n\nWith a short press, it will toggle the status of WiFi, i.e. it will turn on/off the WiFi; \n\n\nWith a long press (10 seconds), it will revert the system to factory status.\n\n\n\n\nThe ethernet boards have more LEDs. For example, as shown in the photo below, the WAN led and WLAN LED is on.\n\n\n\n\nFirst time use\n\n\nWhen Domino power up for the first time, it will connect to the Internet using DHCP and emit a wifi single with ssid: \nDomino-xxx\n, where \nxxx\n is the last three characters of your MAC address. \n\n\nThe default WiFi password is: \ngoodlife\n.\n\n\nThe first time you use Domino, it is suggested that you connect to it directly using WiFi or connect it directly to your router. Then using a browser (firefox or chrome) to visit \nhttp://domino.local\n to get access to it.\n\n\n\n\nIf you are using Windows and cannot find \ndomino.local\n, you may need to install \nBounjor\n from Apple. Download it from https://support.apple.com/kb/DL999?locale=en_US \n\n\nThe first time you use your Domino, it will ask you to setup the name and a password. Then reboot your device.\n\n\n\n\nATTENTION\n: The password is only for the embedded Linux system, not your WiFi. If you want to change your wifi password, you can logon to the system and change it later.\n\n\nATTENTION\n: If you change your board's name, for example to \"myboard\", after reboot you will need to use http://myboard.local to find it.\n\n\nHint\n: If you don't want to have a reboot, just go to luci (the url is: http://domino.local/cgi-bin/luci) and set up a password. You will be prompted with a login page.\n\n\nThe Homepage\n\n\nAfter login, you will have a clean homepage, displaying the status of network and USB devices. You have links on the left side to vairous pages of Domino WebUI.\n\n\nYou will also have pie chart displaying your flash usuage.\n\n\n\n\nNetwork settings\n\n\nConnect to the Internet\n\n\nThe default protocol for WAN is \nDHCP\n, but you can change it according to your needs. You have 5 choices, including \nDHCP, Static, PPPoE, 3G, Tethering and WiFi\n. The \n3g\n protocol lets you connect Domino to the internet via a USB 3g/4g modem. The \nTethering\n protocol lets you connect Domino to the internet via an Android phone. The \nWiFi\n choice lets you connect your Domino to an AP (e.g. router) wirelessly.\n\n\n\n\nChange Wifi and LAN settings\n\n\nIn the same page, you can also change WiFi and LAN settings. You can \nenable/disable\n Wifi, change the ssid, security or password. \n\n\nATTENTION\n Turning on WiFi (AP) only affects Domino's AP signal without affecting its connection to your router as a client.\n\n\nATTENTION\n The default LAN IP of Domino Pi is \n192.168.1.1\n. If this is your router's IP as well, please change it to another addres, e.g. \n192.168.240.1\n, in order that it can connect to the internet succefully.\n\n\nWorking with USB devices\n\n\nYou can connect USB devices to Domino with the USB tiles. \n\n\n\n\nIf you connect a USB disk, you will find a pie chart showing its storage usage. By clicking the pi chart, you will be able to list the contents of the storage device.\n\n\nIf you connect a USB webcam, you will have a live video streaming charge in your homepage. Please consult the \"Live video streaming\" page for more details.\n\n\nCode editor\n\n\nBy clicking the \"Editor\" link on the homepage or clicking directly on the flash or USB devices on the homepage, you will be able to list the contents of flash or USB storage and edit the contents of their files.\n\n\n\n\nYou can view or edit individual files directly. \n\n\nATTENTION\n When editing files, your data is not encrypted.\n\n\nATTENTION\n Your Domino board has to be connected to the internet in order to use the web editor, because the browser needs to load some big scripts to display the code nicely!\n\n\nLUCI\n\n\nBy clicking the Luci link on homepage, you will go to the LUCI webui, which is the default webui of openwrt. The webui is for advanced users and we will not explain in detail here.\n\n\n\n\nAt the bottom right corner of the LUCI webui, you will find a link \"Domino Web Panel\". Click it to go back to the Domino UI.\n\n\nSecurities\n\n\n\n\n\n\nWhen you change your password, settings, etc, your data is encrypted when trasfered over the network.\n\n\n\n\n\n\nWen you view or modify files using the code editor, the data is NOT encrypted. \n\n\n\n\n\n\nWhen you use a webcam, the default setting does NOT have a password, i.e. it is OPEN TO THE INTERNET. Everyone will be able to see you if there is no firewall. Please refer to the \"Live video streaming\" are for more info.", 
            "title": "Pi - Using the firmware"
        }, 
        {
            "location": "/domino/pi/using/#using-domino-pi", 
            "text": "", 
            "title": "Using Domino Pi"
        }, 
        {
            "location": "/domino/pi/using/#led-and-buttons", 
            "text": "Domino Pi board has two LEDs. The  red LED  is for Power, which should be always on when powered. The  blue LED  is for wireless (or WLAN), which will indicate the status of the wireless connection by default, but it can be configured to indicate any other status of the system.    Beside the WLAN LED, there is a button which connects to  GPIO 11 . This button can be reconfigured by scripts, but the default action is:    With a short press, it will toggle the status of WiFi, i.e. it will turn on/off the WiFi;   With a long press (10 seconds), it will revert the system to factory status.   The ethernet boards have more LEDs. For example, as shown in the photo below, the WAN led and WLAN LED is on.", 
            "title": "LED and buttons"
        }, 
        {
            "location": "/domino/pi/using/#first-time-use", 
            "text": "When Domino power up for the first time, it will connect to the Internet using DHCP and emit a wifi single with ssid:  Domino-xxx , where  xxx  is the last three characters of your MAC address.   The default WiFi password is:  goodlife .  The first time you use Domino, it is suggested that you connect to it directly using WiFi or connect it directly to your router. Then using a browser (firefox or chrome) to visit  http://domino.local  to get access to it.   If you are using Windows and cannot find  domino.local , you may need to install  Bounjor  from Apple. Download it from https://support.apple.com/kb/DL999?locale=en_US   The first time you use your Domino, it will ask you to setup the name and a password. Then reboot your device.   ATTENTION : The password is only for the embedded Linux system, not your WiFi. If you want to change your wifi password, you can logon to the system and change it later.  ATTENTION : If you change your board's name, for example to \"myboard\", after reboot you will need to use http://myboard.local to find it.  Hint : If you don't want to have a reboot, just go to luci (the url is: http://domino.local/cgi-bin/luci) and set up a password. You will be prompted with a login page.", 
            "title": "First time use"
        }, 
        {
            "location": "/domino/pi/using/#the-homepage", 
            "text": "After login, you will have a clean homepage, displaying the status of network and USB devices. You have links on the left side to vairous pages of Domino WebUI.  You will also have pie chart displaying your flash usuage.", 
            "title": "The Homepage"
        }, 
        {
            "location": "/domino/pi/using/#network-settings", 
            "text": "", 
            "title": "Network settings"
        }, 
        {
            "location": "/domino/pi/using/#connect-to-the-internet", 
            "text": "The default protocol for WAN is  DHCP , but you can change it according to your needs. You have 5 choices, including  DHCP, Static, PPPoE, 3G, Tethering and WiFi . The  3g  protocol lets you connect Domino to the internet via a USB 3g/4g modem. The  Tethering  protocol lets you connect Domino to the internet via an Android phone. The  WiFi  choice lets you connect your Domino to an AP (e.g. router) wirelessly.", 
            "title": "Connect to the Internet"
        }, 
        {
            "location": "/domino/pi/using/#change-wifi-and-lan-settings", 
            "text": "In the same page, you can also change WiFi and LAN settings. You can  enable/disable  Wifi, change the ssid, security or password.   ATTENTION  Turning on WiFi (AP) only affects Domino's AP signal without affecting its connection to your router as a client.  ATTENTION  The default LAN IP of Domino Pi is  192.168.1.1 . If this is your router's IP as well, please change it to another addres, e.g.  192.168.240.1 , in order that it can connect to the internet succefully.", 
            "title": "Change Wifi and LAN settings"
        }, 
        {
            "location": "/domino/pi/using/#working-with-usb-devices", 
            "text": "You can connect USB devices to Domino with the USB tiles.    If you connect a USB disk, you will find a pie chart showing its storage usage. By clicking the pi chart, you will be able to list the contents of the storage device.  If you connect a USB webcam, you will have a live video streaming charge in your homepage. Please consult the \"Live video streaming\" page for more details.", 
            "title": "Working with USB devices"
        }, 
        {
            "location": "/domino/pi/using/#code-editor", 
            "text": "By clicking the \"Editor\" link on the homepage or clicking directly on the flash or USB devices on the homepage, you will be able to list the contents of flash or USB storage and edit the contents of their files.   You can view or edit individual files directly.   ATTENTION  When editing files, your data is not encrypted.  ATTENTION  Your Domino board has to be connected to the internet in order to use the web editor, because the browser needs to load some big scripts to display the code nicely!", 
            "title": "Code editor"
        }, 
        {
            "location": "/domino/pi/using/#luci", 
            "text": "By clicking the Luci link on homepage, you will go to the LUCI webui, which is the default webui of openwrt. The webui is for advanced users and we will not explain in detail here.   At the bottom right corner of the LUCI webui, you will find a link \"Domino Web Panel\". Click it to go back to the Domino UI.", 
            "title": "LUCI"
        }, 
        {
            "location": "/domino/pi/using/#securities", 
            "text": "When you change your password, settings, etc, your data is encrypted when trasfered over the network.    Wen you view or modify files using the code editor, the data is NOT encrypted.     When you use a webcam, the default setting does NOT have a password, i.e. it is OPEN TO THE INTERNET. Everyone will be able to see you if there is no firewall. Please refer to the \"Live video streaming\" are for more info.", 
            "title": "Securities"
        }, 
        {
            "location": "/domino/pi/compile/", 
            "text": "Compile the firmware\n\n\nIt is not difficult to compile your own OpenWrt firmware for Domino. Follow these instructions step by step.\n\n\nBuild a clean Openwrt firmware for Domino\n\n\nOpenWrt is a Linux distribution for embedded devices. You can find all the details of OpenWrt from http://openwrt.org\nTo compile an OpenWrt firmware for Domino, first you need to have a Linux environment. We will use Ubuntu as an example in this guide.\n\n\n1. Build environment\n\n\nFirst install all the necessary packages:\n\n\nsudo apt-get update \nsudo apt-get install subversion build-essential git-core libncurses5-dev zlib1g-dev gawk flex quilt \nlibssl-dev xsltproc libxml-parser-perl mercurial bzr ecj cvs unzip \n\n\n\n\n2. Configure quilt\n\n\nPlease check http://wiki.openwrt.org/doc/devel/patches to understand how OpenWrt deal with patches. We will need to apply a patch to OpenWrt.\n\n\ncat \n ~/.quiltrc \nEOF\nQUILT_DIFF_ARGS=\n--no-timestamps --no-index -p ab --color=auto\n\nQUILT_REFRESH_ARGS=\n--no-timestamps --no-index -p ab\n\nQUILT_PATCH_OPTS=\n--unified\n\nQUILT_DIFF_OPTS=\n-p\n\nEDITOR=\nnano\n\nEOF\n\n\n\n\n3. Download OpenWrt 1407\n\n\nFor domino-Pi, we use OpenWrt release BB1407.\n\n\ngit clone git://git.openwrt.org/14.07/openwrt.git openwrt-domino\ncd openwrt-domino\n./scripts/feeds update -a\n./scripts/feeds install -a\n\n\n\n\n3 (alternative). Download OpenWrt CC1505\n\n\nWe upgrade the code to CC1505.\n\n\nhttps://github.com/domino-team/openwrt-cc.git\ncd openwrt-cc\nmake menuconfig\n\n\n\n\nYou will find Domino in the \"Target Profile\". You can skip step 4 because the pateches are already installed.\n\n\n4. Download Domino sources and apply Domino Target Patch\n\n\nIf you are using OpenWrt BB1407 version, please apply the patches according to these instructions.\n\n\nDownload the Domino Target Patch from here: https://github.com/domino-team/domino-firmware/tree/master/domino-pi/openwrt-patch \nPut the patch files in openwrt-domino/patches.\n\n\ncd ..\ngit clone https://github.com/domino-team/domino-firmware.git \ncd openwrt-domino\nmkdir patches\ncp ../domino-firmware/domino-pi/openwrt/patches/domino.patch ./patches\ncp ../domino-firmware/domino-pi/openwrt/patches/series ./patches\nquilt push -a\nrm ./tmp/*\n./scripts/feeds install -a\n\n\n\n\nNote that if the '-f' option is not specified, when make menuconfig is run, the Domino target will not appear.\n\n\n5. Make menuconfig\n\n\nNow you need to configure OpenWrt by choosing the correct target.\n\n\nmake menuconfig\n\n\n\n\n\n\nSelect \"Domino Wifi for things\" in the \"Target Profile\". Exit and save the config file. Now you are ready to build the firmware.\n\n\nmake \n\n\n\n\nIf you want to use multithread, run \nmake -j x\n, x is a number.\n\n\nmake -j 5\n\n\n\n\nYou will probably encounter some errors and the compiling process will exit without showing you the details. You can run \nmake V=s\n to show the details. Sometime it may be just a problem of downloading resources.\n\n\nmake V=s\n\n\n\n\nAfter make finishes, you will find the firmware in the bin folder. The correct one is: \nopenwrt-ar71xx-generic-domino-squashfs-sysupgrade.bin\n\n\nls bin/ar71xx\n\n\n\n\nPlease note that you have built only a very basic firmware without a web UI, and with WiFi disabled. You might get flustrated that it doesn't work as you expected. Now read on to compile more packages.\n\n\nBuilt the stock firmware with Domino configurations\n\n\nMove domino sources to OpenWrt tree\n\n\nIf you want to build exactly the same firmware as pre-installed in Domino Pi, please copy the sources to openwrt tree, including athplay, domino-pi, iis, mpg123.\nPut these packages in openwrt-domino/package/domino\n\n\ncd openwrt-domino\nmkdir package/domino\ncp -a ../domino-firmware/domino-pi/audio/* package/domino\ncp -a ../domino-firmware/domino-pi/domino-pi package/domino\ncp -a ../domino-firmware/domino-pi/mpg123 package/domino\nmkdir files\ncp -a ../domino-firmware/domino-pi//root-files/* files\n\n\n\n\n\n\nMove the files in \"root-files\" to the \"files\" folder of openwrt. This is a quick and easy way to compile your default config to openwrt.\n\n\n\n\nMake menuconfig\n\n\nType \nmake menuconfig\n, select 'domino' on the main menu (midway down), then select the Domino specific packages. These must be selected as compiled-in (*), not modules (M).\n\n\n\n\nSelect the packages by pressing the space key until it shows a '*' before the package name.\n\n\nYou will find \"domino-athplay\", \"domino-pi\" and \"kmod-domino-iis\" in \"Domino\" category. Select them all by pressing space key until it shows a * before the package. If you don't want audio, remove \"domino-athplay\" and \"kmod-domino-iis\" from the selction. If you want to play music, you also need to select \"Utilities-\nmpg123\". \n\n\nThat is all. You don't need to select any other packages because they are already selected automaticly.\n\n\ncompile\n\n\nNow compile the firmware by typing \nmake\n\n\nmake", 
            "title": "Pi - Compile firmware"
        }, 
        {
            "location": "/domino/pi/compile/#compile-the-firmware", 
            "text": "It is not difficult to compile your own OpenWrt firmware for Domino. Follow these instructions step by step.", 
            "title": "Compile the firmware"
        }, 
        {
            "location": "/domino/pi/compile/#build-a-clean-openwrt-firmware-for-domino", 
            "text": "OpenWrt is a Linux distribution for embedded devices. You can find all the details of OpenWrt from http://openwrt.org\nTo compile an OpenWrt firmware for Domino, first you need to have a Linux environment. We will use Ubuntu as an example in this guide.", 
            "title": "Build a clean Openwrt firmware for Domino"
        }, 
        {
            "location": "/domino/pi/compile/#1-build-environment", 
            "text": "First install all the necessary packages:  sudo apt-get update \nsudo apt-get install subversion build-essential git-core libncurses5-dev zlib1g-dev gawk flex quilt \nlibssl-dev xsltproc libxml-parser-perl mercurial bzr ecj cvs unzip", 
            "title": "1. Build environment"
        }, 
        {
            "location": "/domino/pi/compile/#2-configure-quilt", 
            "text": "Please check http://wiki.openwrt.org/doc/devel/patches to understand how OpenWrt deal with patches. We will need to apply a patch to OpenWrt.  cat   ~/.quiltrc  EOF\nQUILT_DIFF_ARGS= --no-timestamps --no-index -p ab --color=auto \nQUILT_REFRESH_ARGS= --no-timestamps --no-index -p ab \nQUILT_PATCH_OPTS= --unified \nQUILT_DIFF_OPTS= -p \nEDITOR= nano \nEOF", 
            "title": "2. Configure quilt"
        }, 
        {
            "location": "/domino/pi/compile/#3-download-openwrt-1407", 
            "text": "For domino-Pi, we use OpenWrt release BB1407.  git clone git://git.openwrt.org/14.07/openwrt.git openwrt-domino\ncd openwrt-domino\n./scripts/feeds update -a\n./scripts/feeds install -a", 
            "title": "3. Download OpenWrt 1407"
        }, 
        {
            "location": "/domino/pi/compile/#3-alternative-download-openwrt-cc1505", 
            "text": "We upgrade the code to CC1505.  https://github.com/domino-team/openwrt-cc.git\ncd openwrt-cc\nmake menuconfig  You will find Domino in the \"Target Profile\". You can skip step 4 because the pateches are already installed.", 
            "title": "3 (alternative). Download OpenWrt CC1505"
        }, 
        {
            "location": "/domino/pi/compile/#4-download-domino-sources-and-apply-domino-target-patch", 
            "text": "If you are using OpenWrt BB1407 version, please apply the patches according to these instructions.  Download the Domino Target Patch from here: https://github.com/domino-team/domino-firmware/tree/master/domino-pi/openwrt-patch \nPut the patch files in openwrt-domino/patches.  cd ..\ngit clone https://github.com/domino-team/domino-firmware.git \ncd openwrt-domino\nmkdir patches\ncp ../domino-firmware/domino-pi/openwrt/patches/domino.patch ./patches\ncp ../domino-firmware/domino-pi/openwrt/patches/series ./patches\nquilt push -a\nrm ./tmp/*\n./scripts/feeds install -a  Note that if the '-f' option is not specified, when make menuconfig is run, the Domino target will not appear.", 
            "title": "4. Download Domino sources and apply Domino Target Patch"
        }, 
        {
            "location": "/domino/pi/compile/#5-make-menuconfig", 
            "text": "Now you need to configure OpenWrt by choosing the correct target.  make menuconfig   Select \"Domino Wifi for things\" in the \"Target Profile\". Exit and save the config file. Now you are ready to build the firmware.  make   If you want to use multithread, run  make -j x , x is a number.  make -j 5  You will probably encounter some errors and the compiling process will exit without showing you the details. You can run  make V=s  to show the details. Sometime it may be just a problem of downloading resources.  make V=s  After make finishes, you will find the firmware in the bin folder. The correct one is:  openwrt-ar71xx-generic-domino-squashfs-sysupgrade.bin  ls bin/ar71xx  Please note that you have built only a very basic firmware without a web UI, and with WiFi disabled. You might get flustrated that it doesn't work as you expected. Now read on to compile more packages.", 
            "title": "5. Make menuconfig"
        }, 
        {
            "location": "/domino/pi/compile/#built-the-stock-firmware-with-domino-configurations", 
            "text": "", 
            "title": "Built the stock firmware with Domino configurations"
        }, 
        {
            "location": "/domino/pi/compile/#move-domino-sources-to-openwrt-tree", 
            "text": "If you want to build exactly the same firmware as pre-installed in Domino Pi, please copy the sources to openwrt tree, including athplay, domino-pi, iis, mpg123.\nPut these packages in openwrt-domino/package/domino  cd openwrt-domino\nmkdir package/domino\ncp -a ../domino-firmware/domino-pi/audio/* package/domino\ncp -a ../domino-firmware/domino-pi/domino-pi package/domino\ncp -a ../domino-firmware/domino-pi/mpg123 package/domino\nmkdir files\ncp -a ../domino-firmware/domino-pi//root-files/* files   Move the files in \"root-files\" to the \"files\" folder of openwrt. This is a quick and easy way to compile your default config to openwrt.", 
            "title": "Move domino sources to OpenWrt tree"
        }, 
        {
            "location": "/domino/pi/compile/#make-menuconfig", 
            "text": "Type  make menuconfig , select 'domino' on the main menu (midway down), then select the Domino specific packages. These must be selected as compiled-in (*), not modules (M).   Select the packages by pressing the space key until it shows a '*' before the package name.  You will find \"domino-athplay\", \"domino-pi\" and \"kmod-domino-iis\" in \"Domino\" category. Select them all by pressing space key until it shows a * before the package. If you don't want audio, remove \"domino-athplay\" and \"kmod-domino-iis\" from the selction. If you want to play music, you also need to select \"Utilities- mpg123\".   That is all. You don't need to select any other packages because they are already selected automaticly.", 
            "title": "Make menuconfig"
        }, 
        {
            "location": "/domino/pi/compile/#compile", 
            "text": "Now compile the firmware by typing  make  make", 
            "title": "compile"
        }, 
        {
            "location": "/domino/pi/flashing/", 
            "text": "flashing and debricking\n\n\nDomino Pi is designed for you to play with OpenWrt and embedded systems. Before you continue to change your firmware, read the \nWorking with serial\n section first.\n\n\nFirmware compatibilities\n\n\nDomino is compatible with some common OpenWrt firmwares for the Atheros 9331 SoC, including the firmware for GL-AR150, Carambola2 and Dragino. Due to size and configuration of the bootloader, Domino cannot boot firmware for TP-Link 703n, 720n without changing the bootloader.\n\n\nFlashing firmware using the WebUI\n\n\nWe encourage you to flash your firmware using the WebUI provided. When viewing in \"System\" page, you will see the UI for you to upgrade/flash your firmware. \n\n\n\nIf you want to upload your firmware in your disk, just click \"Choose File\" and upload the firmware. After upload you will be prompted with an option to \"keep settings\" or not. Then click \"UPGRADE\" to upgrade your firmware. You can also upgrade your firmware by clicking the \"Download\" button next to \"Newest version\". \n\n\n\n\nATTENTION\n: In firmware version 1.0 and 1.1, there is a bug for Chrome. Please use Firefox or IE for upgrading your firmware.\n\n\nFlashing using uboot WebUI\n\n\nIn case you accediently brick your Domino firmware, you can debrick using uboot. You don't have to use serial if you want to use the uboot WebUI.\n\n\nStep 1: Connection\n\n\nConnect an Ethernet cable from your computer to Domino directly. Set your computer's IP address to \n192.168.1.2\n manually. If you are using a Dual-Ethernet tile board, \nonly connect one Ethernet cable to your Domino kit\n. \n\n\n\n\nStep 2: Activate the uboot WebUI\n\n\nPress and hold the reset button while powering on your Domino. You will see the \nBlue LED\n for Wireless flashing. After it flashes 5 times, the WAN led will light up. Now release your finger. The WAN LED will flash quite quickly for some times.\n\n\nStep 3: Flash firmware\n\n\nNow use a web broser and go to http://192.168.1.1. You will then have the uboot WebUI as below.\n\n\n\n\nNow choose your firmware and click \"Update firmware\". Wait about 3 minutes to allow your board to reset and boot.\n\n\nATTENTION\n: DON'T turn off the power during this process.\n\n\nATTENTION\n: Uboot wont check the validity of the firmware. Even if you flashed a wrong firmware, it will still write it to flash.\n\n\nFlashing using uboot console\n\n\nIf your firmware still cannot boot up, try this advanced option. To use uboot console, please refer to \nWorking with serial\n first. \n\n\nATTENTION\n: It is better to use a separate USB-UART adapter to use the uboot console. uboot boots very quickly, so you might not have time to enter the uboot console if you are using an integrated USB-UART bridge. Some systems, especially Windows, are slow to load the correct driver for you.\n\n\nEnter the uboot console\n\n\nIn your serial term, press \nanykey\n when uboot boot and stop it in its console. Some version of uboot will ask your to type \ngl\n to enter the console.\n\n\n\n\nUboot environment variables\n\n\nType \nprintenv\n to display the environment variables. Don't modify these variables if you are not sure what you are doing.\n\n\n\n\nSet up a tftp server\n\n\nYou need to set up a tftp server. In Windows, we recommend \ntftpd32\n or \ntftpd64\n according to your system architecture. Download them from \njunin.net\n.\n\n\nIn Linux, we recommend \ntftpd-hpa\n. Just search google for a guide to use this tool. \n\n\nUpdate using the stored procedure\n\n\nYou can update your firmware or uboot very simply using the procedure stored as environment variables.\n\n\nTo update the firmware, name your firmware file as \nopenwrt-domino.bin\n and put it in your tftp server. Then run \nrun lf\n. Just wait until this process finish.\n\n\nTo update the uboot, name your uboot as \nuboot_for_domino.bin\n and run \nrun lu\n to change the uboot itself.\n\n\nATTENTION\n: Changing uboot can be very dangerous. Do this at your own risk.\n\n\nUpdate using uboot command\n\n\nYou can also update the firmware and everything else using the uboot command.\n\n\nTo update the firmware, use the following command. Replace with your own filename for your firmware.\n\n\ntftp 0x81000000 openwrt-domino.bin\nerase 0x9f050000 +$filesize\ncp.b 0x81000000 0x9f050000 $filesize\n\n\n\n\nTo update the uboot, use the following command. Replace the filename as your real name.\n\n\ntftp 0x81000000 uboot_for_domino.bin\nerase 0x9f000000 0x40000\ncp.b 0x81000000 0x9f000000 0x40000\n\n\n\n\nATTENTION\n: Changing uboot can be very dangerous. Do this at your own risk.\n\n\nDebrick using SPI tile board\n\n\nPlease refer to \nJTAG/SPI tile board\n for debricking.", 
            "title": "Pi - Flashing and debricking"
        }, 
        {
            "location": "/domino/pi/flashing/#flashing-and-debricking", 
            "text": "Domino Pi is designed for you to play with OpenWrt and embedded systems. Before you continue to change your firmware, read the  Working with serial  section first.", 
            "title": "flashing and debricking"
        }, 
        {
            "location": "/domino/pi/flashing/#firmware-compatibilities", 
            "text": "Domino is compatible with some common OpenWrt firmwares for the Atheros 9331 SoC, including the firmware for GL-AR150, Carambola2 and Dragino. Due to size and configuration of the bootloader, Domino cannot boot firmware for TP-Link 703n, 720n without changing the bootloader.", 
            "title": "Firmware compatibilities"
        }, 
        {
            "location": "/domino/pi/flashing/#flashing-firmware-using-the-webui", 
            "text": "We encourage you to flash your firmware using the WebUI provided. When viewing in \"System\" page, you will see the UI for you to upgrade/flash your firmware.   If you want to upload your firmware in your disk, just click \"Choose File\" and upload the firmware. After upload you will be prompted with an option to \"keep settings\" or not. Then click \"UPGRADE\" to upgrade your firmware. You can also upgrade your firmware by clicking the \"Download\" button next to \"Newest version\".    ATTENTION : In firmware version 1.0 and 1.1, there is a bug for Chrome. Please use Firefox or IE for upgrading your firmware.", 
            "title": "Flashing firmware using the WebUI"
        }, 
        {
            "location": "/domino/pi/flashing/#flashing-using-uboot-webui", 
            "text": "In case you accediently brick your Domino firmware, you can debrick using uboot. You don't have to use serial if you want to use the uboot WebUI.", 
            "title": "Flashing using uboot WebUI"
        }, 
        {
            "location": "/domino/pi/flashing/#step-1-connection", 
            "text": "Connect an Ethernet cable from your computer to Domino directly. Set your computer's IP address to  192.168.1.2  manually. If you are using a Dual-Ethernet tile board,  only connect one Ethernet cable to your Domino kit .", 
            "title": "Step 1: Connection"
        }, 
        {
            "location": "/domino/pi/flashing/#step-2-activate-the-uboot-webui", 
            "text": "Press and hold the reset button while powering on your Domino. You will see the  Blue LED  for Wireless flashing. After it flashes 5 times, the WAN led will light up. Now release your finger. The WAN LED will flash quite quickly for some times.", 
            "title": "Step 2: Activate the uboot WebUI"
        }, 
        {
            "location": "/domino/pi/flashing/#step-3-flash-firmware", 
            "text": "Now use a web broser and go to http://192.168.1.1. You will then have the uboot WebUI as below.   Now choose your firmware and click \"Update firmware\". Wait about 3 minutes to allow your board to reset and boot.  ATTENTION : DON'T turn off the power during this process.  ATTENTION : Uboot wont check the validity of the firmware. Even if you flashed a wrong firmware, it will still write it to flash.", 
            "title": "Step 3: Flash firmware"
        }, 
        {
            "location": "/domino/pi/flashing/#flashing-using-uboot-console", 
            "text": "If your firmware still cannot boot up, try this advanced option. To use uboot console, please refer to  Working with serial  first.   ATTENTION : It is better to use a separate USB-UART adapter to use the uboot console. uboot boots very quickly, so you might not have time to enter the uboot console if you are using an integrated USB-UART bridge. Some systems, especially Windows, are slow to load the correct driver for you.", 
            "title": "Flashing using uboot console"
        }, 
        {
            "location": "/domino/pi/flashing/#enter-the-uboot-console", 
            "text": "In your serial term, press  anykey  when uboot boot and stop it in its console. Some version of uboot will ask your to type  gl  to enter the console.", 
            "title": "Enter the uboot console"
        }, 
        {
            "location": "/domino/pi/flashing/#uboot-environment-variables", 
            "text": "Type  printenv  to display the environment variables. Don't modify these variables if you are not sure what you are doing.", 
            "title": "Uboot environment variables"
        }, 
        {
            "location": "/domino/pi/flashing/#set-up-a-tftp-server", 
            "text": "You need to set up a tftp server. In Windows, we recommend  tftpd32  or  tftpd64  according to your system architecture. Download them from  junin.net .  In Linux, we recommend  tftpd-hpa . Just search google for a guide to use this tool.", 
            "title": "Set up a tftp server"
        }, 
        {
            "location": "/domino/pi/flashing/#update-using-the-stored-procedure", 
            "text": "You can update your firmware or uboot very simply using the procedure stored as environment variables.  To update the firmware, name your firmware file as  openwrt-domino.bin  and put it in your tftp server. Then run  run lf . Just wait until this process finish.  To update the uboot, name your uboot as  uboot_for_domino.bin  and run  run lu  to change the uboot itself.  ATTENTION : Changing uboot can be very dangerous. Do this at your own risk.", 
            "title": "Update using the stored procedure"
        }, 
        {
            "location": "/domino/pi/flashing/#update-using-uboot-command", 
            "text": "You can also update the firmware and everything else using the uboot command.  To update the firmware, use the following command. Replace with your own filename for your firmware.  tftp 0x81000000 openwrt-domino.bin\nerase 0x9f050000 +$filesize\ncp.b 0x81000000 0x9f050000 $filesize  To update the uboot, use the following command. Replace the filename as your real name.  tftp 0x81000000 uboot_for_domino.bin\nerase 0x9f000000 0x40000\ncp.b 0x81000000 0x9f000000 0x40000  ATTENTION : Changing uboot can be very dangerous. Do this at your own risk.", 
            "title": "Update using uboot command"
        }, 
        {
            "location": "/domino/pi/flashing/#debrick-using-spi-tile-board", 
            "text": "Please refer to  JTAG/SPI tile board  for debricking.", 
            "title": "Debrick using SPI tile board"
        }, 
        {
            "location": "/domino/pi/audio/", 
            "text": "Playing Audio and music\n\n\nThe hardware Setup\n\n\nThe I2S tile board connects to the left part of of Domino Pi, Thus you cannot connect Ethernet tiles without stackable headers. You can also connect to the Internet via WiFi without Ethernet.\n\n\n\n\nThe software\n\n\nThe audio module is built into the Domino Pi firmware, but not loaded automatically, to load the module, use \ninsmod glzt_i2s\n.\n\n\ninsmod glzt_i2s\n\n\n\n\nTo enable auto-load of the audio module, build a entry in \n/etc/modules.d/\n\n\necho glzt_i2s \n /etc/modules.d/glzt_i2s\n\n\n\n\nTo play music, you can use \nmpg123\n.\n\n\nE.g. to play music in your usb mounted on \n/mnt/sda1\n, just do:\n\n\nmpg123 /mnt/sda1/my_music.mp3\n\n\n\n\nYou can play Internet radio the same way:\n\n\nmpg123 http://your-internet-radio.com/your-stream", 
            "title": "Pi - Playing Music"
        }, 
        {
            "location": "/domino/pi/audio/#playing-audio-and-music", 
            "text": "", 
            "title": "Playing Audio and music"
        }, 
        {
            "location": "/domino/pi/audio/#the-hardware-setup", 
            "text": "The I2S tile board connects to the left part of of Domino Pi, Thus you cannot connect Ethernet tiles without stackable headers. You can also connect to the Internet via WiFi without Ethernet.", 
            "title": "The hardware Setup"
        }, 
        {
            "location": "/domino/pi/audio/#the-software", 
            "text": "The audio module is built into the Domino Pi firmware, but not loaded automatically, to load the module, use  insmod glzt_i2s .  insmod glzt_i2s  To enable auto-load of the audio module, build a entry in  /etc/modules.d/  echo glzt_i2s   /etc/modules.d/glzt_i2s  To play music, you can use  mpg123 .  E.g. to play music in your usb mounted on  /mnt/sda1 , just do:  mpg123 /mnt/sda1/my_music.mp3  You can play Internet radio the same way:  mpg123 http://your-internet-radio.com/your-stream", 
            "title": "The software"
        }, 
        {
            "location": "/domino/pi/serial/", 
            "text": "Working with serial\n\n\nIt is important to have a USB-UART adapter and work with serial if you want to play with Domino. With serial, you will be able to access the console and have full control of the OpenWrt system and bootloader.\n\n\nUSB-UART adapter\n\n\nDomino Pi has a built-in USB-UART bridge. So you have two serial connectors, one is on the MicroUSB power connector and the other is on the Ethernet board, which is connected to the Domino Core. \n\n\n\n\nJust connect Domino Pi to your computer. It will be powered up and at the same time you will have access to the serial.\n\n\nSometime you need to connect directly to the Domino Core UART, and you will need a USB-UART adapter.\n\n\nATTENTION\n: If you are connecting with an external USB-UART adapter, be sure connect to the correct pins:\n\n\n\n\nIn Windows\n\n\nIf you want to use connector 1, Windows will automatically detect the USB to UART Bridge and install drivers. \n\n\n\n\nFind its com number. (Which is \nCOM36\n in my case.) \n\n\nIf you use your own USB UART adapter, you will have a com number also. (Which is \nCOM4\n in my case.)\n\n\nYou need a serial term, we recommend \nPuTTY\n and \nRealTerm\n. Download them for free.\n\n\nLaunch PuTTY and input \nCOM36\n as the \"Serial line\", \n115200\n as speed, check the Connection type as \nSerial\n, then click \nOpen\n. \n\n\n\n\nThen press \nEnter\n you will enter OpenWrt.\n\n\n\n\nYou can also connect to \nCOM4\n using the same way.\n\n\n\n\nAt the same time, you can also connect to the serial using Connector 2. Execute realterm, fill the currect Baudrate \n115200\n, port number \n36\n and click \nOpen\n. \n\n\n\n\nATTENTION\n Only one term can connect to one serial device at the same time.\n\n\nWorking with two serials\n\n\nIn the above instructions, we used two terms connected to two serial ports: PuTTY connecting to Connector 2 (original uart of Domino Core) and RealTerm connecting to Connector 1 (the build in USB-UART bridge). Once you connect RealTerm, you will find that in PuTTY you cannot input anything, but you can input from RealTerm. \n\n\n\n\nYou can enable input in PuTTY by clearing \nRTS\n in RealTerm. Go to the \"Pins\" page and click \"Clear\" in RTS section. Now you will be able to input in PuTTY, but not in RealTerm. To enable input in RealTerm again, click \"Set\" in RTS section.\n\n\nIn Linux (Ubuntu)\n\n\nWe only test in Ubuntu. For any other distro, if you have any questions, pls discuss in the community.\n\n\nIn Ubuntu, when connecting Domino Pi to your computer's USB directly, it will be identified as \n/dev/ttyUSB*\n, e.g. \n/dev/ttyUSB0\n if you only have USB serial device.\n\n\nckermit\n\n\nDownload ckermit from http://www.columbia.edu/~kermit/ckermit.html#download or use \nsudo apt-get install ckermit\n to install it.\n\n\n$ sudo apt-get install ckermit\n\n\n\n\nmake a file with name \n.kermrc\n in your home directory. The content is as following:\n\n\n#cat ~/.kermrc\n\nset line /dev/ttyUSB0\nset speed 115200\nset carrier-watch off\nset handshake none\nset flow-control none\nrobust\nset file type bin\nset file name lit\nset rec pack 1000\nset send pack 1000\nset window 5\n\n\n\n\nNow execute kermit \nsudo kermit -c\n to get access to the console of your Domino Pi.\n\n\nsudo kermit -c\n\n\n\n\nIf you have multiple serial devices, create one configure file for each device, and then put the file name as parameters. For example, for ttyUSB1, use \nsudo kermit ~/.kermrc_ttyUSB1 -c\n. \n\n\nsudo kermit ~/.kermrc_ttyUSB1 -c\n\n\n\n\nThe escape key for kermit is \nCtrl\n+\n\\\n followed by \nc\n.\n\n\nOther tools\n\n\nYou can also use \nscreen\n or \ncu\n to access the serial.", 
            "title": "Pi - Working with Serial"
        }, 
        {
            "location": "/domino/pi/serial/#working-with-serial", 
            "text": "It is important to have a USB-UART adapter and work with serial if you want to play with Domino. With serial, you will be able to access the console and have full control of the OpenWrt system and bootloader.", 
            "title": "Working with serial"
        }, 
        {
            "location": "/domino/pi/serial/#usb-uart-adapter", 
            "text": "Domino Pi has a built-in USB-UART bridge. So you have two serial connectors, one is on the MicroUSB power connector and the other is on the Ethernet board, which is connected to the Domino Core.    Just connect Domino Pi to your computer. It will be powered up and at the same time you will have access to the serial.  Sometime you need to connect directly to the Domino Core UART, and you will need a USB-UART adapter.  ATTENTION : If you are connecting with an external USB-UART adapter, be sure connect to the correct pins:", 
            "title": "USB-UART adapter"
        }, 
        {
            "location": "/domino/pi/serial/#in-windows", 
            "text": "If you want to use connector 1, Windows will automatically detect the USB to UART Bridge and install drivers.    Find its com number. (Which is  COM36  in my case.)   If you use your own USB UART adapter, you will have a com number also. (Which is  COM4  in my case.)  You need a serial term, we recommend  PuTTY  and  RealTerm . Download them for free.  Launch PuTTY and input  COM36  as the \"Serial line\",  115200  as speed, check the Connection type as  Serial , then click  Open .    Then press  Enter  you will enter OpenWrt.   You can also connect to  COM4  using the same way.   At the same time, you can also connect to the serial using Connector 2. Execute realterm, fill the currect Baudrate  115200 , port number  36  and click  Open .    ATTENTION  Only one term can connect to one serial device at the same time.", 
            "title": "In Windows"
        }, 
        {
            "location": "/domino/pi/serial/#working-with-two-serials", 
            "text": "In the above instructions, we used two terms connected to two serial ports: PuTTY connecting to Connector 2 (original uart of Domino Core) and RealTerm connecting to Connector 1 (the build in USB-UART bridge). Once you connect RealTerm, you will find that in PuTTY you cannot input anything, but you can input from RealTerm.    You can enable input in PuTTY by clearing  RTS  in RealTerm. Go to the \"Pins\" page and click \"Clear\" in RTS section. Now you will be able to input in PuTTY, but not in RealTerm. To enable input in RealTerm again, click \"Set\" in RTS section.", 
            "title": "Working with two serials"
        }, 
        {
            "location": "/domino/pi/serial/#in-linux-ubuntu", 
            "text": "We only test in Ubuntu. For any other distro, if you have any questions, pls discuss in the community.  In Ubuntu, when connecting Domino Pi to your computer's USB directly, it will be identified as  /dev/ttyUSB* , e.g.  /dev/ttyUSB0  if you only have USB serial device.", 
            "title": "In Linux (Ubuntu)"
        }, 
        {
            "location": "/domino/pi/serial/#ckermit", 
            "text": "Download ckermit from http://www.columbia.edu/~kermit/ckermit.html#download or use  sudo apt-get install ckermit  to install it.  $ sudo apt-get install ckermit  make a file with name  .kermrc  in your home directory. The content is as following:  #cat ~/.kermrc\n\nset line /dev/ttyUSB0\nset speed 115200\nset carrier-watch off\nset handshake none\nset flow-control none\nrobust\nset file type bin\nset file name lit\nset rec pack 1000\nset send pack 1000\nset window 5  Now execute kermit  sudo kermit -c  to get access to the console of your Domino Pi.  sudo kermit -c  If you have multiple serial devices, create one configure file for each device, and then put the file name as parameters. For example, for ttyUSB1, use  sudo kermit ~/.kermrc_ttyUSB1 -c .   sudo kermit ~/.kermrc_ttyUSB1 -c  The escape key for kermit is  Ctrl + \\  followed by  c .", 
            "title": "ckermit"
        }, 
        {
            "location": "/domino/pi/serial/#other-tools", 
            "text": "You can also use  screen  or  cu  to access the serial.", 
            "title": "Other tools"
        }, 
        {
            "location": "/domino/pi/spi/", 
            "text": "SPI/JTAG tile\n\n\nMounting\n\n\nWhen using the SPI/JTAG tile board, it is important to mount the tile board in the correct direction. The jtag pins should face outside, as shown in the picture below.\n\n\n\n\nWhen connecting the flash adapter, connect it as shown in the picture below. The flash should be mounted on the bottom part of the adapter. Be sure the flash is mounted in the connector properly by chekcing that the dot on the flash chip is in the correct corner.\n\n\n\n\nATTENTION:\n If you mount the flash reversed, it will burn in seconds when powered on.\n\n\nDebrick using SPI tile board\n\n\nIf you have a problem with uboot and it cannot boot up totally, the only way to fix this is to use the SPI/JTAG tile board. Refer to the following link for info.\nhttps://www.kickstarter.com/projects/706167548/dominoio-an-open-hardware-wifi-platform-for-things/posts/1200391", 
            "title": "Pi - Debricking using SPI/JTAG board"
        }, 
        {
            "location": "/domino/pi/spi/#spijtag-tile", 
            "text": "", 
            "title": "SPI/JTAG tile"
        }, 
        {
            "location": "/domino/pi/spi/#mounting", 
            "text": "When using the SPI/JTAG tile board, it is important to mount the tile board in the correct direction. The jtag pins should face outside, as shown in the picture below.   When connecting the flash adapter, connect it as shown in the picture below. The flash should be mounted on the bottom part of the adapter. Be sure the flash is mounted in the connector properly by chekcing that the dot on the flash chip is in the correct corner.   ATTENTION:  If you mount the flash reversed, it will burn in seconds when powered on.", 
            "title": "Mounting"
        }, 
        {
            "location": "/domino/pi/spi/#debrick-using-spi-tile-board", 
            "text": "If you have a problem with uboot and it cannot boot up totally, the only way to fix this is to use the SPI/JTAG tile board. Refer to the following link for info.\nhttps://www.kickstarter.com/projects/706167548/dominoio-an-open-hardware-wifi-platform-for-things/posts/1200391", 
            "title": "Debrick using SPI tile board"
        }, 
        {
            "location": "/domino/qi/", 
            "text": "Getting started with Domino Qi\n\n\nQi Mini Interfaces\n\n\nThe heart of Domino Qi is Qi Mini board, which integrates Domino Core and Atmega32U4 MCU. The functions of Qi Mini is compatible with Arduino Yun.\n\n\n\n\nOn Qi Mini, there are four LEDs:\n\n\n\n\nBlue LED for Wireless\n: when radio (ap or client) is on, it will light up.\n\n\n \nWhite LED for USB\n: when USB is connected, it will light up. When connected to Qi baseboard, it will always on because on Qi baseboard there is a USB hub.\n\n\nGreen LED for Power\n: it will always on when power is connected.\n\n\nYellow LED for WAN\n \n: it will light up when Ethernet cable is connected.\n\n\n\n\n\n\nOn Qi Mini, there are three buttons:\n\n\n\n\n9331 Reset\n: when pressed, it will perform a hard reset of the 9331 CPU. The OpenWrt Linux will reboot immediately.\n\n\nMCU Reset\n: when pressed, it will reset the AVR MCU immediately.\n\n\nUser Button\n: This button is configured using script. The default actions are: when pressed for 5 seconds and more, it will reset WiFi mode, encryption, password, LAN IP to factory status; when pressed for 30 seconds and more, it will reset the whole system to factory default. e.g. all your change will be erased.\n\n\n\n\nQi Assembly\n\n\nThe Qi Mini board use short headers. Put it onto Qi baseboard and press them firmly. On Qi baseboard, the MicroUSB is only for power and we didn't mount it by default. You can just power the kit up using the connector on Qi Mino.\n\n\n\n\nTo disassemble the kit, you need a little force, as the headers are too tight. Use a pencil or plastic pen, inser into the gap between Qi Mini and the baseboard, apply a little force to lever it up. Don't be too brutal to damage the boards. Don't use a metal tools. \n\n\n\n\nUsing Qi\n\n\nWhen using Domino Qi, you can connect the MicroUSB to you computer and connect Cable to your router. When Domino Qi is powered up, it will broadcast with SSID \nDomino-xxx\n, where \nxxx\n is the last three letters of your MAC address. If you don't use Qi baseboard, you can connect to Qi Mini via WiFi. \n\n\nThe default WiFi password is \ngoodlife\n.\n\n\n\n\nConnect to the Web UI\n\n\nWhen your Domino is up, you will find it using \nhttp://domino.local\n in your browser. \n\n\nIf you cannot find domino.local in your windows, you need to install \nBounjor\n from Apple. Download it from https://support.apple.com/kb/DL999?locale=en_US\n\n\n\n\nFirst time settings\n\n\nThe first time you use your Domino, it will ask you to setup the name and a password. Then reboot your device.\n\n\n\n\nATTENTION: The password is only for the embedded Linux system, not your wifi. If you want to change your wifi password, logon the system and change it later.ATTENTION: If you change your boards name, for example to \u201cmyboard\u201d, after reboot, you will need to use http://myboard.local to find it.\n\n\nHint\n: If you don\u2019t want to have a reboot, just go to luci (the url is: http://domino.local/cgi-bin/luci) and set up a password, you will be able to prompt with a login page.\n\n\nThe homepage\n\n\nAfter login, you will have a clean homepage, displaying the status of network and USB devices. You have links on the left side to vairous pages of Domino WebUI.\n\n\n\n\nYou will also have pie chart displaying your flash usuage. On the bottom, you can upload your sketch to your AVR. \n\n\nNetwork settings\n\n\nConnect to the Internet\n\n\n\n\nThe default protocol for WAN is DHCP, but you can change it according to your needs. You have 5 choices, including DHCP, Static, PPPoE, 3G, Tethering and WiFi. The 3g protocol let you connect domino to the Internet via a USB 3g/4g modem. The Tethering protocol let you connect Domino to the Internet via an Android phone. The WiFi choice let you connect your Domino to an AP (e.g. router) wirelessly.\n\n\nChange Wifi and LAN settings\n\n\nIn the same page, you can also change WiFi and LAN settings. You can \nenable/disable\n Wifi, change the ssid, security or password. \n\n\nATTENTION\n: Turning on WiFi (AP) only affect Domino\u2019s ap signal without affecting its connection to your router as client.\n\n\nATTENTION\n: The default LAN IP of Domino Pi is \n192.168.240.1\n. If this is your router\u2019s IP as well, please change it to another submit e.g. 192.168.44.1 in order that it can connect to the Internet succefully.\n\n\nWorking with USB devices\n\n\nYou can connect USB devices to Domino via the USB tiles. \n\n\n\n\nIf you connect a USB disk, you will find a pie chart showing its storage usage. By clicking the pi chart, you will be able to list the content of storage.\n\n\nIf you connect a USB webcam, you will have a live video streaming charge in your homepage. Please consult the \"Live video streaming\" page for more details.\n\n\nCode editor\n\n\nBy clicking the \"Editor\" link on or clicking directly the flash or USB devices on the homepage, you will be able to list the contents of flash or USB storage and edit the content of the file.\n\n\n\n\nYou can view or edit individual files directly. \n\n\nATTENTION\n When editing files, your data is not encrypted.\n\n\nATTENTION\n Your Domino board have to be connected to the Internet in order to use the web editor, because the browser needs to load some big scripts to make a nice view of the code!\n\n\nLUCI\n\n\nBy clicking the Luci link on homepage, you will go to the LUCI webui, which is the default webui of openwrt. The webui is for advanced users and we will not explain in detail here.\n\n\n\n\nAt the right bottom corner of the LUCI webui, you will find a link \"Domino Web Panel\", click it and go back to the Domino UI.\n\n\nSecurities\n\n\n\n\n\n\nWhen you change your password, settings etc. your data is encrypted when trasfer on the network.\n\n\n\n\n\n\nWen you view or modify files using the code editor, data are NOT encrypted. \n\n\n\n\n\n\nWhen you use webcam, the default setting does NOT have a password, i.e. it is OPEN TO THE INTERNET. Everyone will be able to see you if there is no firewall. Please refer to the \"Live video streaming\" are for more info.\n\n\n\n\n\n\nUsing Arduino\n\n\nDomino Qi uses code from Arduino, so it identify itself as Arduino Yun. When connected the MicroUSB to your computer, you will find the device in your system.\n\n\n\n\n.\n\n\nWhen you use Arduino IDE, you can also find your Domino board automatically. You will find two devices, one is via USB, i.e. COM37. Another is via WiFi. You can select either one and download sketch to your Domino Directly.", 
            "title": "Qi - Getting Started"
        }, 
        {
            "location": "/domino/qi/#getting-started-with-domino-qi", 
            "text": "", 
            "title": "Getting started with Domino Qi"
        }, 
        {
            "location": "/domino/qi/#qi-mini-interfaces", 
            "text": "The heart of Domino Qi is Qi Mini board, which integrates Domino Core and Atmega32U4 MCU. The functions of Qi Mini is compatible with Arduino Yun.   On Qi Mini, there are four LEDs:   Blue LED for Wireless : when radio (ap or client) is on, it will light up.    White LED for USB : when USB is connected, it will light up. When connected to Qi baseboard, it will always on because on Qi baseboard there is a USB hub.  Green LED for Power : it will always on when power is connected.  Yellow LED for WAN   : it will light up when Ethernet cable is connected.    On Qi Mini, there are three buttons:   9331 Reset : when pressed, it will perform a hard reset of the 9331 CPU. The OpenWrt Linux will reboot immediately.  MCU Reset : when pressed, it will reset the AVR MCU immediately.  User Button : This button is configured using script. The default actions are: when pressed for 5 seconds and more, it will reset WiFi mode, encryption, password, LAN IP to factory status; when pressed for 30 seconds and more, it will reset the whole system to factory default. e.g. all your change will be erased.", 
            "title": "Qi Mini Interfaces"
        }, 
        {
            "location": "/domino/qi/#qi-assembly", 
            "text": "The Qi Mini board use short headers. Put it onto Qi baseboard and press them firmly. On Qi baseboard, the MicroUSB is only for power and we didn't mount it by default. You can just power the kit up using the connector on Qi Mino.   To disassemble the kit, you need a little force, as the headers are too tight. Use a pencil or plastic pen, inser into the gap between Qi Mini and the baseboard, apply a little force to lever it up. Don't be too brutal to damage the boards. Don't use a metal tools.", 
            "title": "Qi Assembly"
        }, 
        {
            "location": "/domino/qi/#using-qi", 
            "text": "When using Domino Qi, you can connect the MicroUSB to you computer and connect Cable to your router. When Domino Qi is powered up, it will broadcast with SSID  Domino-xxx , where  xxx  is the last three letters of your MAC address. If you don't use Qi baseboard, you can connect to Qi Mini via WiFi.   The default WiFi password is  goodlife .", 
            "title": "Using Qi"
        }, 
        {
            "location": "/domino/qi/#connect-to-the-web-ui", 
            "text": "When your Domino is up, you will find it using  http://domino.local  in your browser.   If you cannot find domino.local in your windows, you need to install  Bounjor  from Apple. Download it from https://support.apple.com/kb/DL999?locale=en_US", 
            "title": "Connect to the Web UI"
        }, 
        {
            "location": "/domino/qi/#first-time-settings", 
            "text": "The first time you use your Domino, it will ask you to setup the name and a password. Then reboot your device.   ATTENTION: The password is only for the embedded Linux system, not your wifi. If you want to change your wifi password, logon the system and change it later.ATTENTION: If you change your boards name, for example to \u201cmyboard\u201d, after reboot, you will need to use http://myboard.local to find it.  Hint : If you don\u2019t want to have a reboot, just go to luci (the url is: http://domino.local/cgi-bin/luci) and set up a password, you will be able to prompt with a login page.", 
            "title": "First time settings"
        }, 
        {
            "location": "/domino/qi/#the-homepage", 
            "text": "After login, you will have a clean homepage, displaying the status of network and USB devices. You have links on the left side to vairous pages of Domino WebUI.   You will also have pie chart displaying your flash usuage. On the bottom, you can upload your sketch to your AVR.", 
            "title": "The homepage"
        }, 
        {
            "location": "/domino/qi/#network-settings", 
            "text": "Connect to the Internet   The default protocol for WAN is DHCP, but you can change it according to your needs. You have 5 choices, including DHCP, Static, PPPoE, 3G, Tethering and WiFi. The 3g protocol let you connect domino to the Internet via a USB 3g/4g modem. The Tethering protocol let you connect Domino to the Internet via an Android phone. The WiFi choice let you connect your Domino to an AP (e.g. router) wirelessly.  Change Wifi and LAN settings  In the same page, you can also change WiFi and LAN settings. You can  enable/disable  Wifi, change the ssid, security or password.   ATTENTION : Turning on WiFi (AP) only affect Domino\u2019s ap signal without affecting its connection to your router as client.  ATTENTION : The default LAN IP of Domino Pi is  192.168.240.1 . If this is your router\u2019s IP as well, please change it to another submit e.g. 192.168.44.1 in order that it can connect to the Internet succefully.", 
            "title": "Network settings"
        }, 
        {
            "location": "/domino/qi/#working-with-usb-devices", 
            "text": "You can connect USB devices to Domino via the USB tiles.    If you connect a USB disk, you will find a pie chart showing its storage usage. By clicking the pi chart, you will be able to list the content of storage.  If you connect a USB webcam, you will have a live video streaming charge in your homepage. Please consult the \"Live video streaming\" page for more details.", 
            "title": "Working with USB devices"
        }, 
        {
            "location": "/domino/qi/#code-editor", 
            "text": "By clicking the \"Editor\" link on or clicking directly the flash or USB devices on the homepage, you will be able to list the contents of flash or USB storage and edit the content of the file.   You can view or edit individual files directly.   ATTENTION  When editing files, your data is not encrypted.  ATTENTION  Your Domino board have to be connected to the Internet in order to use the web editor, because the browser needs to load some big scripts to make a nice view of the code!", 
            "title": "Code editor"
        }, 
        {
            "location": "/domino/qi/#luci", 
            "text": "By clicking the Luci link on homepage, you will go to the LUCI webui, which is the default webui of openwrt. The webui is for advanced users and we will not explain in detail here.   At the right bottom corner of the LUCI webui, you will find a link \"Domino Web Panel\", click it and go back to the Domino UI.", 
            "title": "LUCI"
        }, 
        {
            "location": "/domino/qi/#securities", 
            "text": "When you change your password, settings etc. your data is encrypted when trasfer on the network.    Wen you view or modify files using the code editor, data are NOT encrypted.     When you use webcam, the default setting does NOT have a password, i.e. it is OPEN TO THE INTERNET. Everyone will be able to see you if there is no firewall. Please refer to the \"Live video streaming\" are for more info.", 
            "title": "Securities"
        }, 
        {
            "location": "/domino/qi/#using-arduino", 
            "text": "Domino Qi uses code from Arduino, so it identify itself as Arduino Yun. When connected the MicroUSB to your computer, you will find the device in your system.   .  When you use Arduino IDE, you can also find your Domino board automatically. You will find two devices, one is via USB, i.e. COM37. Another is via WiFi. You can select either one and download sketch to your Domino Directly.", 
            "title": "Using Arduino"
        }, 
        {
            "location": "/domino/qi/arduino-yun/", 
            "text": "Using Arduino Yun Firmware\n\n\nYou can use the original Arduino Yun firmware or use Linino Yun firmware. Be sure to flash the Serial hex to your AVR first.\n\n\nDomino Qi uboot can support Arduino and Linino firmware, so you don't risk bricking your device when you try. But please do this carefully and make sure every step works succefully.\n\n\nThe original Arduino Yun firmware is here: https://www.arduino.cc/en/Main/Software#toc8\n\n\nThe original Linino Yun firmware is here: http://download.linino.org/linino_distro/lininoIO/latest/ \n\n\nUsing Arduino Yun Firmware\n\n\nMethod 1: Doing this in uboot console\n\n\nConnect to the serial according to \nthese steps\n.\n\n\nPress the \"Reset\" button to reset the OpenWrt system. Then quickly type \ngl\n to enter the uboot console.\n\n\nChange env: \nsetenv bootcmd bootm 0x9fea0000\n\n\nsetenv bootcmd bootm 0x9fea0000\nsaveenv\n\n\n\n\nSetup your tftp server and download the kernel, rootfs to your Domino Qi.\n\n\nKernel\n\n\ntftp 0x80060000 openwrt-ar71xx-generic-yun-16M-kernel.bin;\nerase 0x9fea0000 +0x140000;\ncp.b $fileaddr 0x9fea0000 $filesize;\n\n\n\n\nrootfs\n\n\ntftp 0x80060000 openwrt-ar71xx-generic-yun-16M-rootfs-squashfs.bin;\nerase 0x9f050000 +0xE50000;\ncp.b $fileaddr 0x9f050000 $filesize;\n\n\n\n\nNow type \nreset\n to reset your board and you will have the original Yun firmware running.\n\n\nMethod 2: Doing this in Domino Qi system\n\n\nAfter you boot your Domino Qi system, ssh to your system.\n\n\ncheck if you can access the environment variables using \nfw_printenv\n.\n\n\nIf you get the following error message, you have use uboot console to flash the firmware.\n\n\nroot@domino:/# fw_printenv \nWarning: Bad CRC, using default environment\nbootcmd=bootp; setenv bootargs root=/dev/nfs nfsroot=${serverip}:${rootpath} ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off; bootm\nbootdelay=5\nbaudrate=115200\n\nDon't continue if you get the above message.\n\n\n\n\n\nIf you don't have a \nBad CRC\n message, continue with the following:\n\n\nfw_setenv bootcmd \nbootm 0x9fea0000\n\nsysupgrade -v -n --force /mnt/sda1/openwrt-ar71xx-generic-yun-16M-squashfs-sysupgrade.bin \n\n\n\n\n\nIf you have a \nBad CRC\n message, don't do this, as this will cause your board not bootable. \n\n\nUsing Linino Firmware\n\n\nYou can also use the Linino firmware for Arduino Yun. Linino has two branch, one is master, one is LininoIO.\n\n\nFor master branch, download from http://download.linino.org/linino_distro/master/latest/, the file names are:\n\n\n\n\nopenwrt-ar71xx-generic-linino-yun-16M-250k-kernel.bin\n\n\nopenwrt-ar71xx-generic-linino-yun-16M-250k-rootfs-squashfs.bin\n\n\nopenwrt-ar71xx-generic-linino-yun-16M-250k-squashfs-sysupgrade.bin\n\n\n\n\nFor LininoIO branch, download from http://download.linino.org/linino_distro/lininoIO/latest/, the file names are:\n\n\n\n\nlininoIO-generic-linino-yun-kernel.bin\n\n\nlininoIO-generic-linino-yun-rootfs-squashfs.bin\n\n\nlininoIO-generic-linino-yun-squashfs-sysupgrade.bin\n\n\n\n\nMethod 1: Doing this in uboot console\n\n\nConnect to the serial according to \nthese steps\n.\n\n\nPress the \"Reset\" button to reset the OpenWrt system. Then quickly type \ngl\n to enter the uboot console.\n\n\nChange env:\n\n\nsetenv bootcmd bootm 0x9fea0000\nsetenv bootargs console=ttyATH0,250000 board=linino-yun mem=64M rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env)ro,14656k(rootfs),1280k(kernel),64k(nvram),64k(art),15936k@0x50000(firmware)\nsaveenv\n\n\n\n\nSetup your tftp server and download the kernel, rootfs to your Domino Qi.\n\n\nFor Linino firmware\n\n\nKernel\n\n\ntftp 0x80060000 openwrt-ar71xx-generic-linino-yun-16M-250k-kernel.bin;\nerase 0x9fea0000 +0x140000;\ncp.b $fileaddr 0x9fea0000 $filesize;\n\n\n\n\n\nrootfs\n\n\ntftp 0x80060000 openwrt-ar71xx-generic-linino-yun-16M-250k-rootfs-squashfs.bin;\nerase 0x9f050000 +0xE50000;\ncp.b $fileaddr 0x9f050000 $filesize;\n\n\n\n\nFor LininoIO firmware\n\n\nKernel\n\n\ntftp 0x80060000 lininoIO-generic-linino-yun-kernel.bin;\nerase 0x9fea0000 +0x140000;\ncp.b $fileaddr 0x9fea0000 $filesize;\n\n\n\n\n\nrootfs\n\n\ntftp 0x80060000 lininoIO-generic-linino-yun-rootfs-squashfs.bin;\nerase 0x9f050000 +0xE50000;\ncp.b $fileaddr 0x9f050000 $filesize;\n\n\n\n\nFinally use \nreset\n to reset your board and boot the firmware.\n\n\nMethod 2: Doing this in Domino Qi system\n\n\nIf you have already boot the Domino Qi system, check if you can access the environment variables using \nfw_printenv\n.\n\n\nIf you get the following error message, you have to use uboot console to flash the firmware.\n\n\nroot@domino:/# fw_printenv \nWarning: Bad CRC, using default environment\nbootcmd=bootp; setenv bootargs root=/dev/nfs nfsroot=${serverip}:${rootpath} ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off; bootm\nbootdelay=5\nbaudrate=115200\n\n\n\n\n\nIf you do \nNOT\n have a \nBad CRC\n message, continue with the following. Otherwise use method 1.\n\n\nfw_setenv bootcmd \nbootm 0x9fea0000\n\nfw_setenv bootargs \nconsole=ttyATH0,250000 board=linino-yun mem=64M rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env)ro,14656k(rootfs),1280k(kernel),64k(nvram),64k(art),15936k@0x50000(firmware)\n\n\n\n\n\nTo upgrade to Linino firmware:\n\n\ncd /tmp\nwget http://download.linino.org/linino_distro/master/latest/openwrt-ar71xx-generic-linino-yun-16M-250k-squashfs-sysupgrade.bin\nsysupgrade -v -n --force openwrt-ar71xx-generic-linino-yun-16M-250k-squashfs-sysupgrade.bin\n\n\n\n\nTo upgrade to LininoIO firmware:\n\n\ncd /tmp\nwget http://download.linino.org/linino_distro/lininoIO/latest/lininoIO-generic-linino-yun-squashfs-sysupgrade.bin\nsysupgrade -v -n --force lininoIO-generic-linino-yun-squashfs-sysupgrade.bin\n\n\n\n\nWait until the process finish and reset your board.", 
            "title": "Qi - Using Arduino or Linino Firmware"
        }, 
        {
            "location": "/domino/qi/arduino-yun/#using-arduino-yun-firmware", 
            "text": "You can use the original Arduino Yun firmware or use Linino Yun firmware. Be sure to flash the Serial hex to your AVR first.  Domino Qi uboot can support Arduino and Linino firmware, so you don't risk bricking your device when you try. But please do this carefully and make sure every step works succefully.  The original Arduino Yun firmware is here: https://www.arduino.cc/en/Main/Software#toc8  The original Linino Yun firmware is here: http://download.linino.org/linino_distro/lininoIO/latest/", 
            "title": "Using Arduino Yun Firmware"
        }, 
        {
            "location": "/domino/qi/arduino-yun/#using-arduino-yun-firmware_1", 
            "text": "", 
            "title": "Using Arduino Yun Firmware"
        }, 
        {
            "location": "/domino/qi/arduino-yun/#method-1-doing-this-in-uboot-console", 
            "text": "Connect to the serial according to  these steps .  Press the \"Reset\" button to reset the OpenWrt system. Then quickly type  gl  to enter the uboot console.  Change env:  setenv bootcmd bootm 0x9fea0000  setenv bootcmd bootm 0x9fea0000\nsaveenv  Setup your tftp server and download the kernel, rootfs to your Domino Qi.  Kernel  tftp 0x80060000 openwrt-ar71xx-generic-yun-16M-kernel.bin;\nerase 0x9fea0000 +0x140000;\ncp.b $fileaddr 0x9fea0000 $filesize;  rootfs  tftp 0x80060000 openwrt-ar71xx-generic-yun-16M-rootfs-squashfs.bin;\nerase 0x9f050000 +0xE50000;\ncp.b $fileaddr 0x9f050000 $filesize;  Now type  reset  to reset your board and you will have the original Yun firmware running.", 
            "title": "Method 1: Doing this in uboot console"
        }, 
        {
            "location": "/domino/qi/arduino-yun/#method-2-doing-this-in-domino-qi-system", 
            "text": "After you boot your Domino Qi system, ssh to your system.  check if you can access the environment variables using  fw_printenv .  If you get the following error message, you have use uboot console to flash the firmware.  root@domino:/# fw_printenv \nWarning: Bad CRC, using default environment\nbootcmd=bootp; setenv bootargs root=/dev/nfs nfsroot=${serverip}:${rootpath} ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off; bootm\nbootdelay=5\nbaudrate=115200\n\nDon't continue if you get the above message.  If you don't have a  Bad CRC  message, continue with the following:  fw_setenv bootcmd  bootm 0x9fea0000 \nsysupgrade -v -n --force /mnt/sda1/openwrt-ar71xx-generic-yun-16M-squashfs-sysupgrade.bin   If you have a  Bad CRC  message, don't do this, as this will cause your board not bootable.", 
            "title": "Method 2: Doing this in Domino Qi system"
        }, 
        {
            "location": "/domino/qi/arduino-yun/#using-linino-firmware", 
            "text": "You can also use the Linino firmware for Arduino Yun. Linino has two branch, one is master, one is LininoIO.  For master branch, download from http://download.linino.org/linino_distro/master/latest/, the file names are:   openwrt-ar71xx-generic-linino-yun-16M-250k-kernel.bin  openwrt-ar71xx-generic-linino-yun-16M-250k-rootfs-squashfs.bin  openwrt-ar71xx-generic-linino-yun-16M-250k-squashfs-sysupgrade.bin   For LininoIO branch, download from http://download.linino.org/linino_distro/lininoIO/latest/, the file names are:   lininoIO-generic-linino-yun-kernel.bin  lininoIO-generic-linino-yun-rootfs-squashfs.bin  lininoIO-generic-linino-yun-squashfs-sysupgrade.bin", 
            "title": "Using Linino Firmware"
        }, 
        {
            "location": "/domino/qi/arduino-yun/#method-1-doing-this-in-uboot-console_1", 
            "text": "Connect to the serial according to  these steps .  Press the \"Reset\" button to reset the OpenWrt system. Then quickly type  gl  to enter the uboot console.  Change env:  setenv bootcmd bootm 0x9fea0000\nsetenv bootargs console=ttyATH0,250000 board=linino-yun mem=64M rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env)ro,14656k(rootfs),1280k(kernel),64k(nvram),64k(art),15936k@0x50000(firmware)\nsaveenv  Setup your tftp server and download the kernel, rootfs to your Domino Qi.  For Linino firmware  Kernel  tftp 0x80060000 openwrt-ar71xx-generic-linino-yun-16M-250k-kernel.bin;\nerase 0x9fea0000 +0x140000;\ncp.b $fileaddr 0x9fea0000 $filesize;  rootfs  tftp 0x80060000 openwrt-ar71xx-generic-linino-yun-16M-250k-rootfs-squashfs.bin;\nerase 0x9f050000 +0xE50000;\ncp.b $fileaddr 0x9f050000 $filesize;  For LininoIO firmware  Kernel  tftp 0x80060000 lininoIO-generic-linino-yun-kernel.bin;\nerase 0x9fea0000 +0x140000;\ncp.b $fileaddr 0x9fea0000 $filesize;  rootfs  tftp 0x80060000 lininoIO-generic-linino-yun-rootfs-squashfs.bin;\nerase 0x9f050000 +0xE50000;\ncp.b $fileaddr 0x9f050000 $filesize;  Finally use  reset  to reset your board and boot the firmware.", 
            "title": "Method 1: Doing this in uboot console"
        }, 
        {
            "location": "/domino/qi/arduino-yun/#method-2-doing-this-in-domino-qi-system_1", 
            "text": "If you have already boot the Domino Qi system, check if you can access the environment variables using  fw_printenv .  If you get the following error message, you have to use uboot console to flash the firmware.  root@domino:/# fw_printenv \nWarning: Bad CRC, using default environment\nbootcmd=bootp; setenv bootargs root=/dev/nfs nfsroot=${serverip}:${rootpath} ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off; bootm\nbootdelay=5\nbaudrate=115200  If you do  NOT  have a  Bad CRC  message, continue with the following. Otherwise use method 1.  fw_setenv bootcmd  bootm 0x9fea0000 \nfw_setenv bootargs  console=ttyATH0,250000 board=linino-yun mem=64M rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env)ro,14656k(rootfs),1280k(kernel),64k(nvram),64k(art),15936k@0x50000(firmware)   To upgrade to Linino firmware:  cd /tmp\nwget http://download.linino.org/linino_distro/master/latest/openwrt-ar71xx-generic-linino-yun-16M-250k-squashfs-sysupgrade.bin\nsysupgrade -v -n --force openwrt-ar71xx-generic-linino-yun-16M-250k-squashfs-sysupgrade.bin  To upgrade to LininoIO firmware:  cd /tmp\nwget http://download.linino.org/linino_distro/lininoIO/latest/lininoIO-generic-linino-yun-squashfs-sysupgrade.bin\nsysupgrade -v -n --force lininoIO-generic-linino-yun-squashfs-sysupgrade.bin  Wait until the process finish and reset your board.", 
            "title": "Method 2: Doing this in Domino Qi system"
        }, 
        {
            "location": "/domino/qi/nodejs/", 
            "text": "Using NodeJS and LininoIO\n\n\nInstall NodeJS on Domino Qi is very simple. \n\n\nInstall NodeJS\n\n\n1. Insert a MicroSD card\n\n\nInstall one MicroSD card to the slot on Domino Qi baseboard first in order to install packages that take a lot of space and use a lot of memory.\n\n\n2. Run installation script\n\n\nJust execute the installation script: \n/etc/linino/nodeyun_inst_latest.sh\n, you will be asked to install fdisk first.\n\n\n$ sh /etc/linino/nodeyun_inst_latest.sh\n\nFdisk is not installed ! ! ! The script will install the package for you...\n\nPress [Enter] key to install fdisk...\n\n\n\n\n\nAfter install fdisk, relauch the script: \n/etc/linino/nodeyun_inst_latest.sh\n\n\n#sh /etc/linino/nodeyun_inst_latest.sh\n\n\n\n\nWhen you get the prompt\n\n\nWelcome to Linino Node.Js installation script v13\n\nLinino node.js installation menu\n\n1. Prepare SDCard and install node.js\n2. Revert to original settings\n3. Exit and reboot\n4. Kill all node processes\n0. Exit\n\nChoose : \n\n\n\n\nchoose \n1\n,  then you will be promted:\n\n\nWARNING : All data on your SDCard Would will be erased, are you sure ? (y/n)\n\n\n\n\nSeveral software packages will be downloaded and installed. If you meet some errors (e.g. fuser) but the script continues, just continue.\n\n\nIt takes several minutes to install the packages and format the MicroSD card. Then you will be prompt with the menu again:\n\n\nLinino node.js installation menu\n\n1. Prepare SDCard and install node.js\n2. Revert to original settings\n3. Exit and reboot\n4. Kill all node processes\n0. Exit\n\n\n\n\nNow choose 3 and reboot the system.\n\n\n3. Install ideino\n\n\nNow you should already nodejs installed. Check using \nwhich\n\n\nroot@domino:~# which node\n/opt/usr/bin/node\n\n\n\n\nLet's install extra packages including ideino. This takes several minutes.\n\n\nopkg update\nopkg install ideinoIO -d mnt\nnpm install -g node-static\nnpm install node-static enable\n\n\n\n\nIn the default ideinoIO packages, there is no domino_qi layout, create it by copying arduino_yun layout\n\n\ncd /opt/usr/lib/node_modules/ideino-linino-lib/utils/layouts\ncp arduino_yun.json domino_qi.json\n\n\n\n\nInstall LininoIO - The easy way\n\n\nLinioIO is a framework that let you interact your AVR from openwrt using NodeJS. \n\n\nCheck uboot environment variables\n\n\nBefore you use LininoIO, you need to check uboot environments first. In OpenWrt, do \nfw_printenv\n. If you see the following output, it means that uboot env is not saved. DON'T continue before you save uboot env.\n\n\n\n\nNow enter uboot and save envirment vairables. You need to use do this using serial as intructed \nhere\n.\n\n\n\n\nInstall LininoIO\n\n\nThen you can reset your board and boot the Linux system. Simply execute \nlininoio start\n.\n\n\nYou can revert back and disable LininoIO by just executing \nlininoio stop\n.\n\n\n\n\n\n\nInstall LininoIO - The comprehensive way\n\n\n1. Setup environement in openwrt\n\n\nIn order to let Linino IO start when system start, you need to set several environment variables in uboot. Type \nfw_printenv\n to display the uboot env variables.\n\n\nIf you got the following error message, it means that the uboot env variables are not stored to flash and you need to go to Step 1. - alternative.\n\n\n\n\nIf you saw correct output as shown below, now set the two variables.\n\n\nroot@domino:~# fw_printenv \nbootcmd=bootm 0x9f050000\nbootdelay=2\nipaddr=192.168.1.1\nserverip=192.168.1.2\nbootfile=\nfirmware.bin\n\nloadaddr=0x80800000\nncport=6666\nuboot_addr=0x9F000000\nuboot_name=uboot_for_domino.bin\nuboot_size=0x40000\nuboot_backup_size=0x40000\nlu=if ping $serverip; then mw.b $loadaddr 0xFF $uboot_backup_size \n cp.b $uboot_addr $loadaddr $uboot_backup_size \n tftp $loadaddr $uboot_name \n if itest.l $filesize \n= $uboot_size; then erase $uboot_addr +$uboot_backup_size \n cp.b $loadaddr $uboot_addr $uboot_backup_size \n echo OK!; else echo ERROR! Wrong file size!; fi; else echo ERROR! Server not reachable!; fi\nfirmware_addr=0x9F050000\nfirmware_name=openwrt-domino.bin\nlf=if ping $serverip; then tftp $loadaddr $firmware_name \n erase $firmware_addr +$filesize \n cp.b $loadaddr $firmware_addr $filesize \n echo OK!; else echo ERROR! Server not reachable!; fi\nlc=tftp 0x81000000 config.bin \ncp.b 0x9fff1000 0x80060000 0xf000 \n cp.b 0x81000000 0x80060002 0x06 \nerase 0x9fff0000 +0x10000 \n cp.b 0x81000000 0x9fff0000 $filesize \n cp.b 0x80060000 0x9fff1000 0xf000\nethact=eth0\nstdin=serial\nstdout=serial\nstderr=serial\nbootargs=console=spicons,250000 board=domino root=31:03 rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env),1280k(kernel),14656k(rootfs),64k(nvram),64k(art)ro,15936k@0x50000(firmware)\nbaudrate=250000\n\n\n\n\nNow use \nfw_setenv\n to set bootargs and baudrate and reboot your openwrt.\n\n\nfw_setenv bootargs \nconsole=spicons,115200 board=domino root=31:03 rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env),1280k(kernel),14656k(rootfs),64k(nvram),64k(art)ro,15936k@0x50000(firmware)\n\nfw_setenv baudrate 250000\n\n\n\n\n1. - alternative. Setup environement in uboot\n\n\nIf your step 1 cannot be done because uboot env is not readable, you need to do this in uboot console. First you need to have the AVR serial installed, if not, by doing \nrun-avrdude /etc/linino/YunSerialTerminal.hex\n\n\nrun-avrdude /etc/linino/YunSerialTerminal.hex\n\n\n\n\nAfter avr is flashed, you need to enter uboot console. \nFirst connect power to the MicroUSB connect of Domino Qi Mini, not Dimono Qi baseboard. Your windows will recognize the device as Arduino Yun. \n1. Use putty to connect to the comm port. \n2. Press the Openwrt Reset button on Domino Qi Mini\n3. type \"gl\" quickly once you see the uboot prompt, and you will enter the uboot console.\n4. execut the change env using \nsetenv\n and \nsaveenv\n then \nreset\n your board\n\n\nsetenv bootargs console=ttyATH0,250000 board=domino root=31:03 rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env),1280k(kernel),14656k(rootfs),64k(nvram),64k(art)ro,15936k@0x50000(firmware)\nsetenv baudrate 250000\nsaveenv\nreset\n\n\n\n\n2. Flash AVR\n\n\nYou need to flash the correct hex to AVR: \nrun-avrdude /etc/linino/bathos-yun.hex\n\n\nrun-avrdude /etc/linino/bathos-yun.hex\n\n\n\n\nAttention: You may got error when flashing in the verification step, just ignore it. \n\n\n3. Reboot\n\n\nYou need to reboot your system to let the system auto-detect the settings and run the LininoIO framework.\nJust to check if it is running succefully, do a \nps\n to see if there are many processes named mcuio_irq. \nIf you cannot see them, try \n/etc/init.d/mcuio enable\n \n/etc/init.d/mcuio start\n\n\n/etc/init.d/mcuio enable\n/etc/init.d/mcuio start", 
            "title": "Qi - Using NodeJS and LininoIO"
        }, 
        {
            "location": "/domino/qi/nodejs/#using-nodejs-and-lininoio", 
            "text": "Install NodeJS on Domino Qi is very simple.", 
            "title": "Using NodeJS and LininoIO"
        }, 
        {
            "location": "/domino/qi/nodejs/#install-nodejs", 
            "text": "", 
            "title": "Install NodeJS"
        }, 
        {
            "location": "/domino/qi/nodejs/#1-insert-a-microsd-card", 
            "text": "Install one MicroSD card to the slot on Domino Qi baseboard first in order to install packages that take a lot of space and use a lot of memory.", 
            "title": "1. Insert a MicroSD card"
        }, 
        {
            "location": "/domino/qi/nodejs/#2-run-installation-script", 
            "text": "Just execute the installation script:  /etc/linino/nodeyun_inst_latest.sh , you will be asked to install fdisk first.  $ sh /etc/linino/nodeyun_inst_latest.sh\n\nFdisk is not installed ! ! ! The script will install the package for you...\n\nPress [Enter] key to install fdisk...  After install fdisk, relauch the script:  /etc/linino/nodeyun_inst_latest.sh  #sh /etc/linino/nodeyun_inst_latest.sh  When you get the prompt  Welcome to Linino Node.Js installation script v13\n\nLinino node.js installation menu\n\n1. Prepare SDCard and install node.js\n2. Revert to original settings\n3. Exit and reboot\n4. Kill all node processes\n0. Exit\n\nChoose :   choose  1 ,  then you will be promted:  WARNING : All data on your SDCard Would will be erased, are you sure ? (y/n)  Several software packages will be downloaded and installed. If you meet some errors (e.g. fuser) but the script continues, just continue.  It takes several minutes to install the packages and format the MicroSD card. Then you will be prompt with the menu again:  Linino node.js installation menu\n\n1. Prepare SDCard and install node.js\n2. Revert to original settings\n3. Exit and reboot\n4. Kill all node processes\n0. Exit  Now choose 3 and reboot the system.", 
            "title": "2. Run installation script"
        }, 
        {
            "location": "/domino/qi/nodejs/#3-install-ideino", 
            "text": "Now you should already nodejs installed. Check using  which  root@domino:~# which node\n/opt/usr/bin/node  Let's install extra packages including ideino. This takes several minutes.  opkg update\nopkg install ideinoIO -d mnt\nnpm install -g node-static\nnpm install node-static enable  In the default ideinoIO packages, there is no domino_qi layout, create it by copying arduino_yun layout  cd /opt/usr/lib/node_modules/ideino-linino-lib/utils/layouts\ncp arduino_yun.json domino_qi.json", 
            "title": "3. Install ideino"
        }, 
        {
            "location": "/domino/qi/nodejs/#install-lininoio-the-easy-way", 
            "text": "LinioIO is a framework that let you interact your AVR from openwrt using NodeJS.", 
            "title": "Install LininoIO - The easy way"
        }, 
        {
            "location": "/domino/qi/nodejs/#check-uboot-environment-variables", 
            "text": "Before you use LininoIO, you need to check uboot environments first. In OpenWrt, do  fw_printenv . If you see the following output, it means that uboot env is not saved. DON'T continue before you save uboot env.   Now enter uboot and save envirment vairables. You need to use do this using serial as intructed  here .", 
            "title": "Check uboot environment variables"
        }, 
        {
            "location": "/domino/qi/nodejs/#install-lininoio", 
            "text": "Then you can reset your board and boot the Linux system. Simply execute  lininoio start .  You can revert back and disable LininoIO by just executing  lininoio stop .", 
            "title": "Install LininoIO"
        }, 
        {
            "location": "/domino/qi/nodejs/#install-lininoio-the-comprehensive-way", 
            "text": "", 
            "title": "Install LininoIO - The comprehensive way"
        }, 
        {
            "location": "/domino/qi/nodejs/#1-setup-environement-in-openwrt", 
            "text": "In order to let Linino IO start when system start, you need to set several environment variables in uboot. Type  fw_printenv  to display the uboot env variables.  If you got the following error message, it means that the uboot env variables are not stored to flash and you need to go to Step 1. - alternative.   If you saw correct output as shown below, now set the two variables.  root@domino:~# fw_printenv \nbootcmd=bootm 0x9f050000\nbootdelay=2\nipaddr=192.168.1.1\nserverip=192.168.1.2\nbootfile= firmware.bin \nloadaddr=0x80800000\nncport=6666\nuboot_addr=0x9F000000\nuboot_name=uboot_for_domino.bin\nuboot_size=0x40000\nuboot_backup_size=0x40000\nlu=if ping $serverip; then mw.b $loadaddr 0xFF $uboot_backup_size   cp.b $uboot_addr $loadaddr $uboot_backup_size   tftp $loadaddr $uboot_name   if itest.l $filesize  = $uboot_size; then erase $uboot_addr +$uboot_backup_size   cp.b $loadaddr $uboot_addr $uboot_backup_size   echo OK!; else echo ERROR! Wrong file size!; fi; else echo ERROR! Server not reachable!; fi\nfirmware_addr=0x9F050000\nfirmware_name=openwrt-domino.bin\nlf=if ping $serverip; then tftp $loadaddr $firmware_name   erase $firmware_addr +$filesize   cp.b $loadaddr $firmware_addr $filesize   echo OK!; else echo ERROR! Server not reachable!; fi\nlc=tftp 0x81000000 config.bin  cp.b 0x9fff1000 0x80060000 0xf000   cp.b 0x81000000 0x80060002 0x06  erase 0x9fff0000 +0x10000   cp.b 0x81000000 0x9fff0000 $filesize   cp.b 0x80060000 0x9fff1000 0xf000\nethact=eth0\nstdin=serial\nstdout=serial\nstderr=serial\nbootargs=console=spicons,250000 board=domino root=31:03 rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env),1280k(kernel),14656k(rootfs),64k(nvram),64k(art)ro,15936k@0x50000(firmware)\nbaudrate=250000  Now use  fw_setenv  to set bootargs and baudrate and reboot your openwrt.  fw_setenv bootargs  console=spicons,115200 board=domino root=31:03 rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env),1280k(kernel),14656k(rootfs),64k(nvram),64k(art)ro,15936k@0x50000(firmware) \nfw_setenv baudrate 250000", 
            "title": "1. Setup environement in openwrt"
        }, 
        {
            "location": "/domino/qi/nodejs/#1-alternative-setup-environement-in-uboot", 
            "text": "If your step 1 cannot be done because uboot env is not readable, you need to do this in uboot console. First you need to have the AVR serial installed, if not, by doing  run-avrdude /etc/linino/YunSerialTerminal.hex  run-avrdude /etc/linino/YunSerialTerminal.hex  After avr is flashed, you need to enter uboot console. \nFirst connect power to the MicroUSB connect of Domino Qi Mini, not Dimono Qi baseboard. Your windows will recognize the device as Arduino Yun. \n1. Use putty to connect to the comm port. \n2. Press the Openwrt Reset button on Domino Qi Mini\n3. type \"gl\" quickly once you see the uboot prompt, and you will enter the uboot console.\n4. execut the change env using  setenv  and  saveenv  then  reset  your board  setenv bootargs console=ttyATH0,250000 board=domino root=31:03 rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env),1280k(kernel),14656k(rootfs),64k(nvram),64k(art)ro,15936k@0x50000(firmware)\nsetenv baudrate 250000\nsaveenv\nreset", 
            "title": "1. - alternative. Setup environement in uboot"
        }, 
        {
            "location": "/domino/qi/nodejs/#2-flash-avr", 
            "text": "You need to flash the correct hex to AVR:  run-avrdude /etc/linino/bathos-yun.hex  run-avrdude /etc/linino/bathos-yun.hex  Attention: You may got error when flashing in the verification step, just ignore it.", 
            "title": "2. Flash AVR"
        }, 
        {
            "location": "/domino/qi/nodejs/#3-reboot", 
            "text": "You need to reboot your system to let the system auto-detect the settings and run the LininoIO framework.\nJust to check if it is running succefully, do a  ps  to see if there are many processes named mcuio_irq. \nIf you cannot see them, try  /etc/init.d/mcuio enable   /etc/init.d/mcuio start  /etc/init.d/mcuio enable\n/etc/init.d/mcuio start", 
            "title": "3. Reboot"
        }, 
        {
            "location": "/domino/qi/serial/", 
            "text": "Domino Qi Serial\n\n\nAs the UART of OpenWrt is connected to AVR, you have to use the serial console via AVR.\n\n\nConnection\n\n\nConnect Domino Qi Mini to your computer. Don't use the MicroUSB connector in the Qi baseboard (There are footprint, but we don't solder it by default).\n\n\nFlash AVR\n\n\nWhen you got your Domino Qi for the first time, it may already have flashed the serial terminal to AVR. If not, do it now.\n\n\nrun-avrdude /etc/linino/YunSerialTerminal.hex\n\n\n\n\nThe instructions of how to use this is documented here: https://www.arduino.cc/en/Tutorial/YunSerialTerminal\n\n\nLinux (Ubuntu)\n\n\nIf you use Linux hosts, you may likely have the devices identified as \n/dev/ttyACM0\n, connect to it using kermit.  \n\n\nWindows\n\n\nIf you are using Windows system, you may have device identified as \nArduino Yun\n, find its port number and connect it to using \nputty\n.", 
            "title": "Qi - Using Serial"
        }, 
        {
            "location": "/domino/qi/serial/#domino-qi-serial", 
            "text": "As the UART of OpenWrt is connected to AVR, you have to use the serial console via AVR.", 
            "title": "Domino Qi Serial"
        }, 
        {
            "location": "/domino/qi/serial/#connection", 
            "text": "Connect Domino Qi Mini to your computer. Don't use the MicroUSB connector in the Qi baseboard (There are footprint, but we don't solder it by default).", 
            "title": "Connection"
        }, 
        {
            "location": "/domino/qi/serial/#flash-avr", 
            "text": "When you got your Domino Qi for the first time, it may already have flashed the serial terminal to AVR. If not, do it now.  run-avrdude /etc/linino/YunSerialTerminal.hex  The instructions of how to use this is documented here: https://www.arduino.cc/en/Tutorial/YunSerialTerminal", 
            "title": "Flash AVR"
        }, 
        {
            "location": "/domino/qi/serial/#linux-ubuntu", 
            "text": "If you use Linux hosts, you may likely have the devices identified as  /dev/ttyACM0 , connect to it using kermit.", 
            "title": "Linux (Ubuntu)"
        }, 
        {
            "location": "/domino/qi/serial/#windows", 
            "text": "If you are using Windows system, you may have device identified as  Arduino Yun , find its port number and connect it to using  putty .", 
            "title": "Windows"
        }
    ]
}