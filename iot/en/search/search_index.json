{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"tutorials/","text":"Tutorials \u00b6 Learn how to use our devices and add-on features with our step to step guides and answers to frequently asked questions. BLE Proxy \u00b6 GL-S10 GL-S20 Thread Border Router \u00b6 GL-S200 GL.iNet OpenThread Border Router Codelabs IoT Dev Board \u00b6 Thread Dev Board GL-M2 5G Development Board MQTT & VPN \u00b6 MQTT & VPN demo","title":"Overview"},{"location":"tutorials/#tutorials","text":"Learn how to use our devices and add-on features with our step to step guides and answers to frequently asked questions.","title":"Tutorials"},{"location":"tutorials/#ble-proxy","text":"GL-S10 GL-S20","title":"BLE Proxy"},{"location":"tutorials/#thread-border-router","text":"GL-S200 GL.iNet OpenThread Border Router Codelabs","title":"Thread Border Router"},{"location":"tutorials/#iot-dev-board","text":"Thread Dev Board GL-M2 5G Development Board","title":"IoT Dev Board"},{"location":"tutorials/#mqtt-vpn","text":"MQTT & VPN demo","title":"MQTT &amp; VPN"},{"location":"tutorials/mqtt_and_vpn_demo/","text":"Coming soon","title":"MQTT & VPN Demo"},{"location":"tutorials/openthread_border_router_codelabs/","text":"GL.iNet OpenThread Border Router Codelabs \u00b6 Application Scenario \u00b6 GL.iNet OTBR is factory-configured with Scenario 1 by default. Users need to configure the upstream interface for the backbone router according to their own application scenarios on the web Admin Panel -> THREAD MESH -> Advanced -> Backbone Routers. Direct Connection. \u00b6 Scenario 1: PC/mobile phone connects OTBR directly. Indirect Connection \u00b6 Scenario 2: PC/mobile phone and OTBR connect to the same upstream WiFi AP. Bi-directional IPv6 connectivity and DNS-based service discovery. \u00b6 This experiment uses the following topology diagram Ubuntu 20.04.4 NRF52840 USB dongle\uff08 ot-nrf52840 - 2023-02-15-d88076e \uff09 ot-br-posix - 2022-11-08-d910392 Step 1: Create a Thread network. \u00b6 root@GL-S200:~# uci set otbr.otbr.enable=1 root@GL-S200:~# uci commit otbr root@GL-S200:~# ot-ctl dataset init new Done root@GL-S200:~# ot-ctl dataset commit active Done root@GL-S200:~# ot-ctl dataset active Active Timestamp: 1 Channel: 18 Channel Mask: 0x07fff800 Ext PAN ID: a1fce8946f2f9b1d Mesh Local Prefix: fd50:5ff6:fd1b:325b::/64 Network Key: e67446d4e450ad76cd3ad5472530d410 Network Name: OpenThread-ee97 PAN ID: 0xee97 PSKc: 42743e8b67c06353cd038520a0ab8b7f Security Policy: 672 onrc Done root@GL-S200:~# ot-ctl ifconfig up Done root@GL-S200:~# ot-ctl thread start Done root@GL-S200:~# ot-ctl state leader Done root@GL-S200:~# ot-ctl dataset active -x 0e080000000000010000000300001235060004001fffe00208a1fce8946f2f9b1d0708fd505ff6fd1b325b0510e67446d4e450ad76cd3ad5472530d410030f4f70656e5468726561642d656539370102ee97041042743e8b67c06353cd038520a0ab8b7f0c0402a0f7f8 Done root@GL-S200:~# ot-ctl netdata show Prefixes: fd15:5b2d:647f:1::/64 paos low c400 Routes: fd15:5b2d:647f:2:0:0::/96 sn low c400 fda1:fce8:946f:9b1d::/64 s med c400 Services: 44970 5d fd505ff6fd1b325b84ab8a51482f2df7d11f s c400 44970 01 31000500000e10 s c400 Done root@GL-S200:~# ot-ctl ipaddr fd50:5ff6:fd1b:325b:0:ff:fe00:fc11 fd50:5ff6:fd1b:325b:0:ff:fe00:fc38 fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4 fd50:5ff6:fd1b:325b:0:ff:fe00:fc10 fd50:5ff6:fd1b:325b:0:ff:fe00:fc00 fd50:5ff6:fd1b:325b:0:ff:fe00:c400 fd50:5ff6:fd1b:325b:84ab:8a51:482f:2df7 fe80:0:0:0:3488:80b2:ca62:867d Done Check the connectivity of OTBR on your phone/PC. $ ping -6 -c1 fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4 PING fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4(fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4) 56 data bytes 64 bytes from fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4: icmp_seq=1 ttl=64 time=0.996 ms --- fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.996/0.996/0.996/0.000 ms Step 2: Configure the SRP client terminal device. \u00b6 To be executed on NRF52840. > dataset set active 0e080000000000010000000300001235060004001fffe00208a1fce8946f2f9b1d0708fd505ff6fd1b325b0510e67446d4e450ad76cd3ad5472530d410030f4f70656e5468726561642d656539370102ee97041042743e8b67c06353cd038520a0ab8b7f0c0402a0f7f8 Done > ifconfig up Done > thread start Done > state child Done > netdata show Prefixes: fd15:5b2d:647f:1::/64 paos low fffe Routes: fd15:5b2d:647f:2:0:0::/96 sn low fffe fda1:fce8:946f:9b1d::/64 s med fffe Services: 44970 5d fd505ff6fd1b325b84ab8a51482f2df7d11f s fc10 44970 01 31000500000e10 s fc11 Done > ipaddr fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 fd50:5ff6:fd1b:325b:0:ff:fe00:c401 fd50:5ff6:fd1b:325b:27af:b1fc:9225:4134 fe80:0:0:0:3873:7703:285d:38eb Done Check the Thread Device connectivity on the mobile phone/PC. $ ping -6 -c1 fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 PING fd15:5b2d:647f:1:75cd:be97:fd26:f3b9(fd15:5b2d:647f:1:75cd:be97:fd26:f3b9) 56 data bytes 64 bytes from fd15:5b2d:647f:1:75cd:be97:fd26:f3b9: icmp_seq=1 ttl=63 time=41.1 ms --- fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 41.148/41.148/41.148/0.000 ms Step 3: Publish SRP service on the terminal device. \u00b6 > srp client autostart enable Done > srp client host name ot-host Done > srp client host address fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 Done > srp client service add ot-service _ipps._tcp 12345 Done > srp client service instance:\"ot-service\", name:\"_ipps._tcp\", state:Registered, port:12345, priority:0, weight:0 Done Step 4: Discover services on OTBR. \u00b6 root@GL-S200:~# ot-ctl srp server service ot-service._ipps._tcp.default.service.arpa. deleted: false subtypes: (null) port: 12345 priority: 0 weight: 0 ttl: 7200 lease: 7200 key-lease: 1209600 TXT: [] host: ot-host.default.service.arpa. addresses: [fd15:5b2d:647f:1:75cd:be97:fd26:f3b9] Done root@GL-S200:~# dns-sd -B _ipps._tcp Browsing for _ipps._tcp DATE: ---Wed 15 Mar 2023--- 8:41:10.598 ...STARTING... Timestamp A/R Flags if Domain Service Type Instance Name 8:41:10.600 Add 3 6 local. _ipps._tcp. ot-service 8:41:10.602 Add 2 7 local. _ipps._tcp. ot-service ^C root@GL-S200:~# dns-sd -L ot-service _ipps._tcp. Lookup ot-service._ipps._tcp..local DATE: ---Wed 15 Mar 2023--- 8:41:16.522 ...STARTING... 8:41:16.666 ot-service._ipps._tcp.local. can be reached at ot-host.local.:12345 (interface 6) Flags: 1 8:41:16.668 ot-service._ipps._tcp.local. can be reached at ot-host.local.:12345 (interface 7) ^C root@GL-S200:~# dns-sd -G -v6 ot-host.local. DATE: ---Wed 15 Mar 2023--- 8:41:21.478 ...STARTING... Timestamp A/R Flags if Hostname Address TTL 8:41:21.653 Add 3 6 ot-host.local. FD15:5B2D:647F:0001:75CD:BE97:FD26:F3B9%<0> 120 8:41:21.656 Add 2 7 ot-host.local. FD15:5B2D:647F:0001:75CD:BE97:FD26:F3B9%<0> 120 ^C root@GL-S200:~# ping -6 -c1 fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 PING fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 (fd15:5b2d:647f:1:75cd:be97:fd26:f3b9): 56 data bytes 64 bytes from fd15:5b2d:647f:1:75cd:be97:fd26:f3b9: seq=0 ttl=64 time=33.375 ms --- fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 ping statistics --- 1 packets transmitted, 1 packets received, 0% packet loss round-trip min/avg/max = 33.375/33.375/33.375 ms Step 5: Discover services on PC. \u00b6 Use dns-sd on macOS system. $ dns-sd -B _ipps._tcp Browsing for _ipps._tcp DATE: ---Wed 15 Mar 2023--- 16:42:03.955 ...STARTING... Timestamp A/R Flags if Domain Service Type Instance Name 16:42:03.958 Add 2 2 local. _ipps._tcp. ot-service $ dns-sd -L ot-service _ipps._tcp. Lookup ot-service._ipps._tcp..local DATE: ---Wed 15 Mar 2023--- 16:42:13.192 ...STARTING... 16:42:13.193 ot-service._ipps._tcp.local. can be reached at ot-host.local.:12345 (interface 2) $ dns-sd -G -v6 ot-host.local. DATE: ---Wed 15 Mar 2023--- 16:42:18.168 ...STARTING... Timestamp A/R Flags if Hostname Address TTL 16:42:18.169 Add 40000002 2 ot-host.local. FD15:5B2D:647F:0001:75CD:BE97:FD26:F3B9%<0> 120 Use avahi-browser on Linux system. $ avahi-browse -rt _ipps._tcp + ens33 IPv6 ot-service Secure Internet Printer local + ens33 IPv4 ot-service Secure Internet Printer local = ens33 IPv6 ot-service Secure Internet Printer local hostname = [ot-host.local] address = [fd15:5b2d:647f:1:75cd:be97:fd26:f3b9] port = [12345] txt = [] = ens33 IPv4 ot-service Secure Internet Printer local hostname = [ot-host.local] address = [fd15:5b2d:647f:1:75cd:be97:fd26:f3b9] port = [12345] txt = [] Step 6: Ping the terminal device's local domain name on PC. \u00b6 $ ping -6 -c1 ot-host.local PING ot-host.local(fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 (fd15:5b2d:647f:1:75cd:be97:fd26:f3b9)) 56 data bytes 64 bytes from fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 (fd15:5b2d:647f:1:75cd:be97:fd26:f3b9): icmp_seq=1 ttl=63 time=30.4 ms --- ot-host.local ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 30.360/30.360/30.360/0.000 ms If the ping command returns Name or service not known , modify /etc/nsswitch.conf as follows and try again. The domain name should be resolvable on both OTBR and PC. hosts: files mdns4_minimal mdns6_minimal dns Providing Internet access via NAT64. \u00b6 Nat64 is enabled by default. After creating a Thread network and joining Thread devices to the network according to the instructions for the experiment on bi-directional IPv6 connectivity and DNS-based service discovery, Accessing Local Area Network. > ping 192.168.8.233 Pinging synthesized IPv6 address: fdf8:7dfb:4d50:2:0:0:c0a8:8e9 16 bytes from fdf8:7dfb:4d50:2:0:0:c0a8:8e9: icmp_seq=3 hlim=63 time=15ms 1 packets transmitted, 1 packets received. Packet loss = 0.0%. Round-trip min/avg/max = 15/15.0/15 ms. Done Accessing the Internet. > ping 8.8.8.8 Pinging synthesized IPv6 address: fdf8:7dfb:4d50:2:0:0:808:808 16 bytes from fdf8:7dfb:4d50:2:0:0:808:808: icmp_seq=4 hlim=47 time=75ms 1 packets transmitted, 1 packets received. Packet loss = 0.0%. Round-trip min/avg/max = 75/75.0/75 ms. Done > dns resolve4 google.com 8.8.8.8 Synthesized IPv6 DNS server address: fdf8:7dfb:4d50:2:0:0:808:808 DNS response for google.com. - fdf8:7dfb:4d50:2:0:0:8efb:dc4e TTL:127 Done > ping fdf8:7dfb:4d50:2:0:0:8efb:dc4e 16 bytes from fdf8:7dfb:4d50:2:0:0:8efb:dc4e: icmp_seq=5 hlim=106 time=96ms 1 packets transmitted, 1 packets received. Packet loss = 0.0%. Round-trip min/avg/max = 96/96.0/96 ms. Done Matter Over Thread \u00b6 The topology of this experiment is shown in the following diagram, where the Matter Controller runs on a PC, and the Matter Light and Matter Light Switch both use the Silicon Labs EFR32MG24 Breakout Board REV 1.1 as the Matter device. Step 1: Create a Thread network. \u00b6 root@GL-S200:~# ot-ctl dataset init new Done root@GL-S200:~# ot-ctl dataset commit active Done root@GL-S200:~# ot-ctl dataset active Active Timestamp: 1 Channel: 18 Channel Mask: 0x07fff800 Ext PAN ID: a1fce8946f2f9b1d Mesh Local Prefix: fd50:5ff6:fd1b:325b::/64 Network Key: e67446d4e450ad76cd3ad5472530d410 Network Name: OpenThread-ee97 PAN ID: 0xee97 PSKc: 42743e8b67c06353cd038520a0ab8b7f Security Policy: 672 onrc Done root@GL-S200:~# ot-ctl ifconfig up Done root@GL-S200:~# ot-ctl thread start Done root@GL-S200:~# ot-ctl state leader Done root@GL-S200:~# ot-ctl dataset active -x 0e080000000000010000000300001235060004001fffe00208a1fce8946f2f9b1d0708fd505ff6fd1b325b0510e67446d4e450ad76cd3ad5472530d410030f4f70656e5468726561642d656539370102ee97041042743e8b67c06353cd038520a0ab8b7f0c0402a0f7f8 Done root@GL-S200:~# ot-ctl netdata show Prefixes: fd15:5b2d:647f:1::/64 paos low c400 Routes: fd15:5b2d:647f:2:0:0::/96 sn low c400 fda1:fce8:946f:9b1d::/64 s med c400 Services: 44970 5d fd505ff6fd1b325b84ab8a51482f2df7d11f s c400 44970 01 31000500000e10 s c400 Done root@GL-S200:~# ot-ctl ipaddr fd50:5ff6:fd1b:325b:0:ff:fe00:fc11 fd50:5ff6:fd1b:325b:0:ff:fe00:fc38 fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4 fd50:5ff6:fd1b:325b:0:ff:fe00:fc10 fd50:5ff6:fd1b:325b:0:ff:fe00:fc00 fd50:5ff6:fd1b:325b:0:ff:fe00:c400 fd50:5ff6:fd1b:325b:84ab:8a51:482f:2df7 fe80:0:0:0:3488:80b2:ca62:867d Done Step 2: Commissioning \u00b6 Command format: chip-tool pairing ble-thread ${NODE_ID} hex:${DATASET} ${PIN_CODE} ${DISCRIMINATOR} ${NODE_ID} \uff1aAssign an ID to the commissioned device. It can be any non-zero value that has not been used after RCP initialization, and it is used by the chip-tool to operate on this Matter device. ${DATASET} \uff1a Obtained by running the command ot-ctl dataset active -x ${PIN_CODE} \uff1aIf the pairing code has not been configured in the flash memory, use the default pairing code. ${DISCRIMINATOR} \uff1aIf pairing code is not configured in flash yet, use the default pairing code. When you long-press the BT0 button on the Matter Light for more than 6 seconds, it enters commissioning mode. sudo ./out/chip-tool/chip-tool pairing ble-thread 1001 hex:0e080000000000010000000300001235060004001fffe00208a1fce8946f2f9b1d0708fd505ff6fd1b325b0510e67446d4e450ad76cd3ad5472530d410030f4f70656e5468726561642d656539370102ee97041042743e8b67c06353cd038520a0ab8b7f0c0402a0f7f8 20202021 3840 Press and hold the BT0 button of the Matter Light Switch for more than 6 seconds to enter commissioning mode. sudo ./out/chip-tool/chip-tool pairing ble-thread 1002 hex:0e080000000000010000000300001235060004001fffe00208a1fce8946f2f9b1d0708fd505ff6fd1b325b0510e67446d4e450ad76cd3ad5472530d410030f4f70656e5468726561642d656539370102ee97041042743e8b67c06353cd038520a0ab8b7f0c0402a0f7f8 20202021 3840 If there is no error, the output of the command should look like the following: [1678871136.912386][3259774:3259774] CHIP:DL: Inet Layer shutdown [1678871136.912404][3259774:3259774] CHIP:DL: BLE shutdown [1678871136.913326][3259774:3259774] CHIP:DL: System Layer shutdown Discovery Matter device from PC, $ avahi-browse -rt _matter._tcp + enp0s31f6 IPv6 65D508548AF4E6CD-00000000000003EA _matter._tcp local + enp0s31f6 IPv6 65D508548AF4E6CD-00000000000003E9 _matter._tcp local + enp0s31f6 IPv4 65D508548AF4E6CD-00000000000003EA _matter._tcp local + enp0s31f6 IPv4 65D508548AF4E6CD-00000000000003E9 _matter._tcp local = enp0s31f6 IPv6 65D508548AF4E6CD-00000000000003EA _matter._tcp local hostname = [DEE6259B059B0BB6.local] address = [fd15:5b2d:647f:1:25b3:9abe:d387:e9aa] port = [5540] txt = [\"T=0\" \"SAI=2000\" \"SII=5000\"] = enp0s31f6 IPv6 65D508548AF4E6CD-00000000000003E9 _matter._tcp local hostname = [3EF840EF1D01024D.local] address = [fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc] port = [5540] txt = [\"T=0\" \"SAI=2000\" \"SII=5000\"] = enp0s31f6 IPv4 65D508548AF4E6CD-00000000000003EA _matter._tcp local hostname = [DEE6259B059B0BB6.local] address = [fd15:5b2d:647f:1:25b3:9abe:d387:e9aa] port = [5540] txt = [\"T=0\" \"SAI=2000\" \"SII=5000\"] = enp0s31f6 IPv4 65D508548AF4E6CD-00000000000003E9 _matter._tcp local hostname = [3EF840EF1D01024D.local] address = [fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc] port = [5540] txt = [\"T=0\" \"SAI=2000\" \"SII=5000\"] $ avahi-browse -rt _matterc._udp + enp0s31f6 IPv6 18D347F0BB27870E _matterc._udp local + enp0s31f6 IPv4 18D347F0BB27870E _matterc._udp local = enp0s31f6 IPv6 18D347F0BB27870E _matterc._udp local hostname = [DEE6259B059B0BB6.local] address = [fd15:5b2d:647f:1:25b3:9abe:d387:e9aa] port = [5540] txt = [\"PI=\" \"PH=36\" \"CM=0\" \"D=3840\" \"T=0\" \"SAI=2000\" \"SII=5000\" \"VP=65521+32772\"] = enp0s31f6 IPv4 18D347F0BB27870E _matterc._udp local hostname = [DEE6259B059B0BB6.local] address = [fd15:5b2d:647f:1:25b3:9abe:d387:e9aa] port = [5540] txt = [\"PI=\" \"PH=36\" \"CM=0\" \"D=3840\" \"T=0\" \"SAI=2000\" \"SII=5000\" \"VP=65521+32772\"] $ ping -6 -c1 3EF840EF1D01024D.local PING 3EF840EF1D01024D.local(fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc (fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc)) 56 data bytes 64 bytes from fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc (fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc): icmp_seq=1 ttl=63 time=82.9 ms --- 3EF840EF1D01024D.local ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 82.865/82.865/82.865/0.000 ms $ ping -6 -c1 DEE6259B059B0BB6.local PING DEE6259B059B0BB6.local(fd15:5b2d:647f:1:25b3:9abe:d387:e9aa (fd15:5b2d:647f:1:25b3:9abe:d387:e9aa)) 56 data bytes 64 bytes from fd15:5b2d:647f:1:25b3:9abe:d387:e9aa (fd15:5b2d:647f:1:25b3:9abe:d387:e9aa): icmp_seq=1 ttl=63 time=69.3 ms --- DEE6259B059B0BB6.local ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 69.331/69.331/69.331/0.000 ms Step 3: Control the Light \u00b6 Toggle the Light Command Format : chip-tool onoff toggle ${NODE_ID} 1 Example\uff1a sudo ./out/chip-tool/chip-tool onoff toggle 1001 1 Turn On the Light Command Format : chip-tool onoff on ${NODE_ID} 1 Example\uff1a sudo ./out/chip-tool/chip-tool onoff on 1001 1 Turn Off the Light Command Format : chip-tool onoff off ${NODE_ID} 1 Example\uff1a sudo ./out/chip-tool/chip-tool onoff off 1001 1 Read the State of the Light Command Format : chip-tool onoff read on-off ${NODE_ID} 1 Example\uff1a sudo ./out/chip-tool/chip-tool onoff read on-off 1001 1 Step 4: Use the Matter Switch to Control the Light \u00b6 Set the ACL of the Light to Allow the Switch to Control It For ACL parameter explanation, please refer to Matter Core Specification - 9.10.5.3. ACL Attribute Command Format : sudo ./out/chip-tool/chip-tool accesscontrol write acl '[{\"fabricIndex\":1, \"privilege\":5, \"authMode\":2, \"subjects\":[112233, ${switch_node_id}], \"targets\":null}]' ${lighting_node_id} 0 Example\uff1a sudo ./out/chip-tool/chip-tool accesscontrol write acl '[{\"fabricIndex\":1, \"privilege\":5, \"authMode\":2, \"subjects\":[112233, 1002], \"targets\":null}]' 1001 0 Bind the Switch to the Light Command Format : sudo ./out/chip-tool/chip-tool binding write binding '[{\"fabricIndex\":1, \"node\":${lighting_node_id}, \"endpoint\":1, \"cluster\":6}]' ${switch_node_id} 1 Example\uff1a sudo ./out/chip-tool/chip-tool binding write binding '[{\"fabricIndex\":1, \"node\":1001, \"endpoint\":1, \"cluster\":6}]' 1002 1 After completing the above steps, you can use Matter Switch BTN1 to control the on/off state of Matter Light. Connect to Home Assistant \u00b6 Test environment Raspberrypi 4B Debian GNU/Linux 11 (bullseye) In progress \u2026 Still have questions? Visit our Community Forum .","title":"GL.iNet OpenThread Border Router Codelabs"},{"location":"tutorials/openthread_border_router_codelabs/#glinet-openthread-border-router-codelabs","text":"","title":"GL.iNet OpenThread Border Router Codelabs"},{"location":"tutorials/openthread_border_router_codelabs/#application-scenario","text":"GL.iNet OTBR is factory-configured with Scenario 1 by default. Users need to configure the upstream interface for the backbone router according to their own application scenarios on the web Admin Panel -> THREAD MESH -> Advanced -> Backbone Routers.","title":"Application Scenario"},{"location":"tutorials/openthread_border_router_codelabs/#direct-connection","text":"Scenario 1: PC/mobile phone connects OTBR directly.","title":"Direct Connection."},{"location":"tutorials/openthread_border_router_codelabs/#indirect-connection","text":"Scenario 2: PC/mobile phone and OTBR connect to the same upstream WiFi AP.","title":"Indirect Connection"},{"location":"tutorials/openthread_border_router_codelabs/#bi-directional-ipv6-connectivity-and-dns-based-service-discovery","text":"This experiment uses the following topology diagram Ubuntu 20.04.4 NRF52840 USB dongle\uff08 ot-nrf52840 - 2023-02-15-d88076e \uff09 ot-br-posix - 2022-11-08-d910392","title":"Bi-directional IPv6 connectivity and DNS-based service discovery."},{"location":"tutorials/openthread_border_router_codelabs/#step-1-create-a-thread-network","text":"root@GL-S200:~# uci set otbr.otbr.enable=1 root@GL-S200:~# uci commit otbr root@GL-S200:~# ot-ctl dataset init new Done root@GL-S200:~# ot-ctl dataset commit active Done root@GL-S200:~# ot-ctl dataset active Active Timestamp: 1 Channel: 18 Channel Mask: 0x07fff800 Ext PAN ID: a1fce8946f2f9b1d Mesh Local Prefix: fd50:5ff6:fd1b:325b::/64 Network Key: e67446d4e450ad76cd3ad5472530d410 Network Name: OpenThread-ee97 PAN ID: 0xee97 PSKc: 42743e8b67c06353cd038520a0ab8b7f Security Policy: 672 onrc Done root@GL-S200:~# ot-ctl ifconfig up Done root@GL-S200:~# ot-ctl thread start Done root@GL-S200:~# ot-ctl state leader Done root@GL-S200:~# ot-ctl dataset active -x 0e080000000000010000000300001235060004001fffe00208a1fce8946f2f9b1d0708fd505ff6fd1b325b0510e67446d4e450ad76cd3ad5472530d410030f4f70656e5468726561642d656539370102ee97041042743e8b67c06353cd038520a0ab8b7f0c0402a0f7f8 Done root@GL-S200:~# ot-ctl netdata show Prefixes: fd15:5b2d:647f:1::/64 paos low c400 Routes: fd15:5b2d:647f:2:0:0::/96 sn low c400 fda1:fce8:946f:9b1d::/64 s med c400 Services: 44970 5d fd505ff6fd1b325b84ab8a51482f2df7d11f s c400 44970 01 31000500000e10 s c400 Done root@GL-S200:~# ot-ctl ipaddr fd50:5ff6:fd1b:325b:0:ff:fe00:fc11 fd50:5ff6:fd1b:325b:0:ff:fe00:fc38 fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4 fd50:5ff6:fd1b:325b:0:ff:fe00:fc10 fd50:5ff6:fd1b:325b:0:ff:fe00:fc00 fd50:5ff6:fd1b:325b:0:ff:fe00:c400 fd50:5ff6:fd1b:325b:84ab:8a51:482f:2df7 fe80:0:0:0:3488:80b2:ca62:867d Done Check the connectivity of OTBR on your phone/PC. $ ping -6 -c1 fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4 PING fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4(fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4) 56 data bytes 64 bytes from fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4: icmp_seq=1 ttl=64 time=0.996 ms --- fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.996/0.996/0.996/0.000 ms","title":"Step 1: Create a Thread network."},{"location":"tutorials/openthread_border_router_codelabs/#step-2-configure-the-srp-client-terminal-device","text":"To be executed on NRF52840. > dataset set active 0e080000000000010000000300001235060004001fffe00208a1fce8946f2f9b1d0708fd505ff6fd1b325b0510e67446d4e450ad76cd3ad5472530d410030f4f70656e5468726561642d656539370102ee97041042743e8b67c06353cd038520a0ab8b7f0c0402a0f7f8 Done > ifconfig up Done > thread start Done > state child Done > netdata show Prefixes: fd15:5b2d:647f:1::/64 paos low fffe Routes: fd15:5b2d:647f:2:0:0::/96 sn low fffe fda1:fce8:946f:9b1d::/64 s med fffe Services: 44970 5d fd505ff6fd1b325b84ab8a51482f2df7d11f s fc10 44970 01 31000500000e10 s fc11 Done > ipaddr fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 fd50:5ff6:fd1b:325b:0:ff:fe00:c401 fd50:5ff6:fd1b:325b:27af:b1fc:9225:4134 fe80:0:0:0:3873:7703:285d:38eb Done Check the Thread Device connectivity on the mobile phone/PC. $ ping -6 -c1 fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 PING fd15:5b2d:647f:1:75cd:be97:fd26:f3b9(fd15:5b2d:647f:1:75cd:be97:fd26:f3b9) 56 data bytes 64 bytes from fd15:5b2d:647f:1:75cd:be97:fd26:f3b9: icmp_seq=1 ttl=63 time=41.1 ms --- fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 41.148/41.148/41.148/0.000 ms","title":"Step 2: Configure the SRP client terminal device."},{"location":"tutorials/openthread_border_router_codelabs/#step-3-publish-srp-service-on-the-terminal-device","text":"> srp client autostart enable Done > srp client host name ot-host Done > srp client host address fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 Done > srp client service add ot-service _ipps._tcp 12345 Done > srp client service instance:\"ot-service\", name:\"_ipps._tcp\", state:Registered, port:12345, priority:0, weight:0 Done","title":"Step 3: Publish SRP service on the terminal device."},{"location":"tutorials/openthread_border_router_codelabs/#step-4-discover-services-on-otbr","text":"root@GL-S200:~# ot-ctl srp server service ot-service._ipps._tcp.default.service.arpa. deleted: false subtypes: (null) port: 12345 priority: 0 weight: 0 ttl: 7200 lease: 7200 key-lease: 1209600 TXT: [] host: ot-host.default.service.arpa. addresses: [fd15:5b2d:647f:1:75cd:be97:fd26:f3b9] Done root@GL-S200:~# dns-sd -B _ipps._tcp Browsing for _ipps._tcp DATE: ---Wed 15 Mar 2023--- 8:41:10.598 ...STARTING... Timestamp A/R Flags if Domain Service Type Instance Name 8:41:10.600 Add 3 6 local. _ipps._tcp. ot-service 8:41:10.602 Add 2 7 local. _ipps._tcp. ot-service ^C root@GL-S200:~# dns-sd -L ot-service _ipps._tcp. Lookup ot-service._ipps._tcp..local DATE: ---Wed 15 Mar 2023--- 8:41:16.522 ...STARTING... 8:41:16.666 ot-service._ipps._tcp.local. can be reached at ot-host.local.:12345 (interface 6) Flags: 1 8:41:16.668 ot-service._ipps._tcp.local. can be reached at ot-host.local.:12345 (interface 7) ^C root@GL-S200:~# dns-sd -G -v6 ot-host.local. DATE: ---Wed 15 Mar 2023--- 8:41:21.478 ...STARTING... Timestamp A/R Flags if Hostname Address TTL 8:41:21.653 Add 3 6 ot-host.local. FD15:5B2D:647F:0001:75CD:BE97:FD26:F3B9%<0> 120 8:41:21.656 Add 2 7 ot-host.local. FD15:5B2D:647F:0001:75CD:BE97:FD26:F3B9%<0> 120 ^C root@GL-S200:~# ping -6 -c1 fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 PING fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 (fd15:5b2d:647f:1:75cd:be97:fd26:f3b9): 56 data bytes 64 bytes from fd15:5b2d:647f:1:75cd:be97:fd26:f3b9: seq=0 ttl=64 time=33.375 ms --- fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 ping statistics --- 1 packets transmitted, 1 packets received, 0% packet loss round-trip min/avg/max = 33.375/33.375/33.375 ms","title":"Step 4: Discover services on OTBR."},{"location":"tutorials/openthread_border_router_codelabs/#step-5-discover-services-on-pc","text":"Use dns-sd on macOS system. $ dns-sd -B _ipps._tcp Browsing for _ipps._tcp DATE: ---Wed 15 Mar 2023--- 16:42:03.955 ...STARTING... Timestamp A/R Flags if Domain Service Type Instance Name 16:42:03.958 Add 2 2 local. _ipps._tcp. ot-service $ dns-sd -L ot-service _ipps._tcp. Lookup ot-service._ipps._tcp..local DATE: ---Wed 15 Mar 2023--- 16:42:13.192 ...STARTING... 16:42:13.193 ot-service._ipps._tcp.local. can be reached at ot-host.local.:12345 (interface 2) $ dns-sd -G -v6 ot-host.local. DATE: ---Wed 15 Mar 2023--- 16:42:18.168 ...STARTING... Timestamp A/R Flags if Hostname Address TTL 16:42:18.169 Add 40000002 2 ot-host.local. FD15:5B2D:647F:0001:75CD:BE97:FD26:F3B9%<0> 120 Use avahi-browser on Linux system. $ avahi-browse -rt _ipps._tcp + ens33 IPv6 ot-service Secure Internet Printer local + ens33 IPv4 ot-service Secure Internet Printer local = ens33 IPv6 ot-service Secure Internet Printer local hostname = [ot-host.local] address = [fd15:5b2d:647f:1:75cd:be97:fd26:f3b9] port = [12345] txt = [] = ens33 IPv4 ot-service Secure Internet Printer local hostname = [ot-host.local] address = [fd15:5b2d:647f:1:75cd:be97:fd26:f3b9] port = [12345] txt = []","title":"Step 5: Discover services on PC."},{"location":"tutorials/openthread_border_router_codelabs/#step-6-ping-the-terminal-devices-local-domain-name-on-pc","text":"$ ping -6 -c1 ot-host.local PING ot-host.local(fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 (fd15:5b2d:647f:1:75cd:be97:fd26:f3b9)) 56 data bytes 64 bytes from fd15:5b2d:647f:1:75cd:be97:fd26:f3b9 (fd15:5b2d:647f:1:75cd:be97:fd26:f3b9): icmp_seq=1 ttl=63 time=30.4 ms --- ot-host.local ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 30.360/30.360/30.360/0.000 ms If the ping command returns Name or service not known , modify /etc/nsswitch.conf as follows and try again. The domain name should be resolvable on both OTBR and PC. hosts: files mdns4_minimal mdns6_minimal dns","title":"Step 6: Ping the terminal device's local domain name on PC."},{"location":"tutorials/openthread_border_router_codelabs/#providing-internet-access-via-nat64","text":"Nat64 is enabled by default. After creating a Thread network and joining Thread devices to the network according to the instructions for the experiment on bi-directional IPv6 connectivity and DNS-based service discovery, Accessing Local Area Network. > ping 192.168.8.233 Pinging synthesized IPv6 address: fdf8:7dfb:4d50:2:0:0:c0a8:8e9 16 bytes from fdf8:7dfb:4d50:2:0:0:c0a8:8e9: icmp_seq=3 hlim=63 time=15ms 1 packets transmitted, 1 packets received. Packet loss = 0.0%. Round-trip min/avg/max = 15/15.0/15 ms. Done Accessing the Internet. > ping 8.8.8.8 Pinging synthesized IPv6 address: fdf8:7dfb:4d50:2:0:0:808:808 16 bytes from fdf8:7dfb:4d50:2:0:0:808:808: icmp_seq=4 hlim=47 time=75ms 1 packets transmitted, 1 packets received. Packet loss = 0.0%. Round-trip min/avg/max = 75/75.0/75 ms. Done > dns resolve4 google.com 8.8.8.8 Synthesized IPv6 DNS server address: fdf8:7dfb:4d50:2:0:0:808:808 DNS response for google.com. - fdf8:7dfb:4d50:2:0:0:8efb:dc4e TTL:127 Done > ping fdf8:7dfb:4d50:2:0:0:8efb:dc4e 16 bytes from fdf8:7dfb:4d50:2:0:0:8efb:dc4e: icmp_seq=5 hlim=106 time=96ms 1 packets transmitted, 1 packets received. Packet loss = 0.0%. Round-trip min/avg/max = 96/96.0/96 ms. Done","title":"Providing Internet access via NAT64."},{"location":"tutorials/openthread_border_router_codelabs/#matter-over-thread","text":"The topology of this experiment is shown in the following diagram, where the Matter Controller runs on a PC, and the Matter Light and Matter Light Switch both use the Silicon Labs EFR32MG24 Breakout Board REV 1.1 as the Matter device.","title":"Matter Over Thread"},{"location":"tutorials/openthread_border_router_codelabs/#step-1-create-a-thread-network_1","text":"root@GL-S200:~# ot-ctl dataset init new Done root@GL-S200:~# ot-ctl dataset commit active Done root@GL-S200:~# ot-ctl dataset active Active Timestamp: 1 Channel: 18 Channel Mask: 0x07fff800 Ext PAN ID: a1fce8946f2f9b1d Mesh Local Prefix: fd50:5ff6:fd1b:325b::/64 Network Key: e67446d4e450ad76cd3ad5472530d410 Network Name: OpenThread-ee97 PAN ID: 0xee97 PSKc: 42743e8b67c06353cd038520a0ab8b7f Security Policy: 672 onrc Done root@GL-S200:~# ot-ctl ifconfig up Done root@GL-S200:~# ot-ctl thread start Done root@GL-S200:~# ot-ctl state leader Done root@GL-S200:~# ot-ctl dataset active -x 0e080000000000010000000300001235060004001fffe00208a1fce8946f2f9b1d0708fd505ff6fd1b325b0510e67446d4e450ad76cd3ad5472530d410030f4f70656e5468726561642d656539370102ee97041042743e8b67c06353cd038520a0ab8b7f0c0402a0f7f8 Done root@GL-S200:~# ot-ctl netdata show Prefixes: fd15:5b2d:647f:1::/64 paos low c400 Routes: fd15:5b2d:647f:2:0:0::/96 sn low c400 fda1:fce8:946f:9b1d::/64 s med c400 Services: 44970 5d fd505ff6fd1b325b84ab8a51482f2df7d11f s c400 44970 01 31000500000e10 s c400 Done root@GL-S200:~# ot-ctl ipaddr fd50:5ff6:fd1b:325b:0:ff:fe00:fc11 fd50:5ff6:fd1b:325b:0:ff:fe00:fc38 fd15:5b2d:647f:1:4e73:fe27:fcad:9eb4 fd50:5ff6:fd1b:325b:0:ff:fe00:fc10 fd50:5ff6:fd1b:325b:0:ff:fe00:fc00 fd50:5ff6:fd1b:325b:0:ff:fe00:c400 fd50:5ff6:fd1b:325b:84ab:8a51:482f:2df7 fe80:0:0:0:3488:80b2:ca62:867d Done","title":"Step 1: Create a Thread network."},{"location":"tutorials/openthread_border_router_codelabs/#step-2-commissioning","text":"Command format: chip-tool pairing ble-thread ${NODE_ID} hex:${DATASET} ${PIN_CODE} ${DISCRIMINATOR} ${NODE_ID} \uff1aAssign an ID to the commissioned device. It can be any non-zero value that has not been used after RCP initialization, and it is used by the chip-tool to operate on this Matter device. ${DATASET} \uff1a Obtained by running the command ot-ctl dataset active -x ${PIN_CODE} \uff1aIf the pairing code has not been configured in the flash memory, use the default pairing code. ${DISCRIMINATOR} \uff1aIf pairing code is not configured in flash yet, use the default pairing code. When you long-press the BT0 button on the Matter Light for more than 6 seconds, it enters commissioning mode. sudo ./out/chip-tool/chip-tool pairing ble-thread 1001 hex:0e080000000000010000000300001235060004001fffe00208a1fce8946f2f9b1d0708fd505ff6fd1b325b0510e67446d4e450ad76cd3ad5472530d410030f4f70656e5468726561642d656539370102ee97041042743e8b67c06353cd038520a0ab8b7f0c0402a0f7f8 20202021 3840 Press and hold the BT0 button of the Matter Light Switch for more than 6 seconds to enter commissioning mode. sudo ./out/chip-tool/chip-tool pairing ble-thread 1002 hex:0e080000000000010000000300001235060004001fffe00208a1fce8946f2f9b1d0708fd505ff6fd1b325b0510e67446d4e450ad76cd3ad5472530d410030f4f70656e5468726561642d656539370102ee97041042743e8b67c06353cd038520a0ab8b7f0c0402a0f7f8 20202021 3840 If there is no error, the output of the command should look like the following: [1678871136.912386][3259774:3259774] CHIP:DL: Inet Layer shutdown [1678871136.912404][3259774:3259774] CHIP:DL: BLE shutdown [1678871136.913326][3259774:3259774] CHIP:DL: System Layer shutdown Discovery Matter device from PC, $ avahi-browse -rt _matter._tcp + enp0s31f6 IPv6 65D508548AF4E6CD-00000000000003EA _matter._tcp local + enp0s31f6 IPv6 65D508548AF4E6CD-00000000000003E9 _matter._tcp local + enp0s31f6 IPv4 65D508548AF4E6CD-00000000000003EA _matter._tcp local + enp0s31f6 IPv4 65D508548AF4E6CD-00000000000003E9 _matter._tcp local = enp0s31f6 IPv6 65D508548AF4E6CD-00000000000003EA _matter._tcp local hostname = [DEE6259B059B0BB6.local] address = [fd15:5b2d:647f:1:25b3:9abe:d387:e9aa] port = [5540] txt = [\"T=0\" \"SAI=2000\" \"SII=5000\"] = enp0s31f6 IPv6 65D508548AF4E6CD-00000000000003E9 _matter._tcp local hostname = [3EF840EF1D01024D.local] address = [fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc] port = [5540] txt = [\"T=0\" \"SAI=2000\" \"SII=5000\"] = enp0s31f6 IPv4 65D508548AF4E6CD-00000000000003EA _matter._tcp local hostname = [DEE6259B059B0BB6.local] address = [fd15:5b2d:647f:1:25b3:9abe:d387:e9aa] port = [5540] txt = [\"T=0\" \"SAI=2000\" \"SII=5000\"] = enp0s31f6 IPv4 65D508548AF4E6CD-00000000000003E9 _matter._tcp local hostname = [3EF840EF1D01024D.local] address = [fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc] port = [5540] txt = [\"T=0\" \"SAI=2000\" \"SII=5000\"] $ avahi-browse -rt _matterc._udp + enp0s31f6 IPv6 18D347F0BB27870E _matterc._udp local + enp0s31f6 IPv4 18D347F0BB27870E _matterc._udp local = enp0s31f6 IPv6 18D347F0BB27870E _matterc._udp local hostname = [DEE6259B059B0BB6.local] address = [fd15:5b2d:647f:1:25b3:9abe:d387:e9aa] port = [5540] txt = [\"PI=\" \"PH=36\" \"CM=0\" \"D=3840\" \"T=0\" \"SAI=2000\" \"SII=5000\" \"VP=65521+32772\"] = enp0s31f6 IPv4 18D347F0BB27870E _matterc._udp local hostname = [DEE6259B059B0BB6.local] address = [fd15:5b2d:647f:1:25b3:9abe:d387:e9aa] port = [5540] txt = [\"PI=\" \"PH=36\" \"CM=0\" \"D=3840\" \"T=0\" \"SAI=2000\" \"SII=5000\" \"VP=65521+32772\"] $ ping -6 -c1 3EF840EF1D01024D.local PING 3EF840EF1D01024D.local(fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc (fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc)) 56 data bytes 64 bytes from fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc (fd15:5b2d:647f:1:b5be:90a6:6fde:a8dc): icmp_seq=1 ttl=63 time=82.9 ms --- 3EF840EF1D01024D.local ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 82.865/82.865/82.865/0.000 ms $ ping -6 -c1 DEE6259B059B0BB6.local PING DEE6259B059B0BB6.local(fd15:5b2d:647f:1:25b3:9abe:d387:e9aa (fd15:5b2d:647f:1:25b3:9abe:d387:e9aa)) 56 data bytes 64 bytes from fd15:5b2d:647f:1:25b3:9abe:d387:e9aa (fd15:5b2d:647f:1:25b3:9abe:d387:e9aa): icmp_seq=1 ttl=63 time=69.3 ms --- DEE6259B059B0BB6.local ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 69.331/69.331/69.331/0.000 ms","title":"Step 2: Commissioning"},{"location":"tutorials/openthread_border_router_codelabs/#step-3-control-the-light","text":"Toggle the Light Command Format : chip-tool onoff toggle ${NODE_ID} 1 Example\uff1a sudo ./out/chip-tool/chip-tool onoff toggle 1001 1 Turn On the Light Command Format : chip-tool onoff on ${NODE_ID} 1 Example\uff1a sudo ./out/chip-tool/chip-tool onoff on 1001 1 Turn Off the Light Command Format : chip-tool onoff off ${NODE_ID} 1 Example\uff1a sudo ./out/chip-tool/chip-tool onoff off 1001 1 Read the State of the Light Command Format : chip-tool onoff read on-off ${NODE_ID} 1 Example\uff1a sudo ./out/chip-tool/chip-tool onoff read on-off 1001 1","title":"Step 3: Control the Light"},{"location":"tutorials/openthread_border_router_codelabs/#step-4-use-the-matter-switch-to-control-the-light","text":"Set the ACL of the Light to Allow the Switch to Control It For ACL parameter explanation, please refer to Matter Core Specification - 9.10.5.3. ACL Attribute Command Format : sudo ./out/chip-tool/chip-tool accesscontrol write acl '[{\"fabricIndex\":1, \"privilege\":5, \"authMode\":2, \"subjects\":[112233, ${switch_node_id}], \"targets\":null}]' ${lighting_node_id} 0 Example\uff1a sudo ./out/chip-tool/chip-tool accesscontrol write acl '[{\"fabricIndex\":1, \"privilege\":5, \"authMode\":2, \"subjects\":[112233, 1002], \"targets\":null}]' 1001 0 Bind the Switch to the Light Command Format : sudo ./out/chip-tool/chip-tool binding write binding '[{\"fabricIndex\":1, \"node\":${lighting_node_id}, \"endpoint\":1, \"cluster\":6}]' ${switch_node_id} 1 Example\uff1a sudo ./out/chip-tool/chip-tool binding write binding '[{\"fabricIndex\":1, \"node\":1001, \"endpoint\":1, \"cluster\":6}]' 1002 1 After completing the above steps, you can use Matter Switch BTN1 to control the on/off state of Matter Light.","title":"Step 4: Use the Matter Switch to Control the Light"},{"location":"tutorials/openthread_border_router_codelabs/#connect-to-home-assistant","text":"Test environment Raspberrypi 4B Debian GNU/Linux 11 (bullseye) In progress \u2026 Still have questions? Visit our Community Forum .","title":"Connect to Home Assistant"},{"location":"user_guide/","text":"User Guide \u00b6 GL-S10 GL-S200","title":"Overview"},{"location":"user_guide/#user-guide","text":"GL-S10 GL-S200","title":"User Guide"},{"location":"user_guide/gl-m2/first_time_setup/","text":"Coming soon.","title":"First Time Setup"},{"location":"user_guide/gl-s10/firmware_compilation_guide/","text":"https://docs.gl-inet.com/router/en/3/setup/gl-s10/firmware_compilation_guide/","title":"Firmware Compilation Guide"},{"location":"user_guide/gl-s10/first_time_setup/","text":"https://docs.gl-inet.com/router/en/3/setup/gl-s10/first_time_setup/","title":"First Time Setup"},{"location":"user_guide/gl-s10/hardware_info/","text":"Hardware info \u00b6 Specification \u00b6 GL-s10 specification PCB Pinout \u00b6","title":"Hardware Info"},{"location":"user_guide/gl-s10/hardware_info/#hardware-info","text":"","title":"Hardware info"},{"location":"user_guide/gl-s10/hardware_info/#specification","text":"GL-s10 specification","title":"Specification"},{"location":"user_guide/gl-s10/hardware_info/#pcb-pinout","text":"","title":"PCB Pinout"},{"location":"user_guide/gl-s10/user_manual/","text":"https://docs.gl-inet.com/router/en/3/setup/gl-s10/user_manual/","title":"User Manual"},{"location":"user_guide/gl-s200/applications/","text":"APPLICATIONS \u00b6 GL.iNet routers include a wide range of add-on features that simplifies device management, improves user's internet experience, automates firmware update, and more. Plug-ins \u00b6 Please visit the Plug-ins tutorial. Dynamic DNS \u00b6 Please visit the Dynamic DNS tutorial. GoodCloud \u00b6 Please visit the GoodCloud tutorial.","title":"Applications"},{"location":"user_guide/gl-s200/applications/#applications","text":"GL.iNet routers include a wide range of add-on features that simplifies device management, improves user's internet experience, automates firmware update, and more.","title":"APPLICATIONS"},{"location":"user_guide/gl-s200/applications/#plug-ins","text":"Please visit the Plug-ins tutorial.","title":"Plug-ins"},{"location":"user_guide/gl-s200/applications/#dynamic-dns","text":"Please visit the Dynamic DNS tutorial.","title":"Dynamic DNS"},{"location":"user_guide/gl-s200/applications/#goodcloud","text":"Please visit the GoodCloud tutorial.","title":"GoodCloud"},{"location":"user_guide/gl-s200/bluetooth/","text":"Bluetooth \u00b6 Bluetooth Devices \u00b6 On the Bluetooth devices page you can turn the current Bluetooth function on/off and modify the Bluetooth scanning settings. Scan Settings \u00b6 Scan type : switching between active or passive scanning. Scan Interval Time : the interval between the start times of two consecutive scan windows. Scan Window Time : the width of time to perform a scan. PHY : Physical Layer modulation method, currently only supports 1M. Click on Apply to complete the setup of Bluetooth scanning. Broadcast Packets \u00b6 After setting the Bluetooth scan settings correctly, click the Refresh button to see the Bluetooth broadcast data collected within one second. RSSI : the wireless signal strength of this broadcast packet. Device Name : the data segment of this broadcast packet with an AD Type of 0x09, or Unknow if it does not exist. MAC : the MAC address of the source of this broadcast. Packet Type : divided into ordinary packet and scan reply packet, only scan reply packet can be scanned in active scan mode, passive scan mode can only scan ordinary packet. Note that the s200 can only be made to scan under active scan if the broadcast device comes with a scan reply packet. Raw Data : the original data of this broadcast packet. If you need to see the details of a broadcast packet, please click on it. We provide two ways of presenting the data. Structured data presentation : parsing the broadcast packet data according to the AD structure defined by the Bluetooth Alliance, splitting and parsing the data of the individual AD segments. Raw data presentation : parsing of broadcast packet data according to the AD structure defined by the Bluetooth Alliance, splitting but not parsing out the raw data of individual AD segments. Bluetooth Remote Manage \u00b6 On the Bluetooth Remote Management page you can choose to turn remote management on/off and modify the relevant remote server configuration. We provide two methods of communication to the server: MQTT and HTTP. MQTT \u00b6 Host \uff1aserver address, either a domain name or an IP address\uff1b Port \uff1aserver port\uff1b Enable TLS \uff1awhether to enable TLS configuration; Username \uff1athe MQTT client username; Password \uff1athe MQTT client password\uff1b Topic Report : the gateway will use this topic to push the scanned Bluetooth data to the MQTT Broker.; Command : the gateway will subscribe to the topic to receive control commands issued by the remote server; Response : the gateway will use the topic to send the command's response or execution result in response to the remote server. If you need to enable TLS configuration, please click on the Enable TLS button and proceed to configure your TLS parameters. Encryption Mode \uff1aEncryption mode with the server side, either one-way or two-way encryption\uff1b CA Certificate \uff1aa CA root certificate file must be uploaded when TLS encryption is enabled\uff1b You can copy the contents of the relevant certificate directly into the input box or click the Upload button to upload a file from your device. Client Cerificate \uff1aa client certificate file must be uploaded when TLS bidirectional encryption is enabled\uff1b You can copy the contents of the relevant certificate directly into the input box or click the Upload button to upload a file from your device. Client Private Key \uff1aa client key file must be uploaded when TLS bidirectional encryption is enabled\uff1b You can copy the contents of the relevant certificate directly into the input box or click the Upload button to upload a file from your device. Password of Key \uff1aoptional setting, password for encryption the client private key. If you also need to set up more advanced MQTT options, you can click on Advance Settings . Client ID \uff1athe client ID used by the gateway to connect to the server\uff1b QoS Level \uff1aQoS level of all topics, default is 0\uff1b Keep Alive Interval \uff1athe heartbeat interval when the gateway connects to the server, default is 60 seconds. HTTP \u00b6 Report Url \uff1alink to data reporting Authentication Type \uff1aset the authentication method for http, currently choose between None or Basic authentication. If Basic is selected, the following configuration needs to be entered according to the server settings. Username : the HTTP authentication username Password : the HTTP authentication password Bluetooth Report \u00b6 On the Bluetooth report page, there are three tabs, Base, MAC Filter and Raw Data Filter, where you can set up the reporting parameters and data filtering functions. Base \u00b6 Report Interval \uff1athe interval in seconds for the gateway to report data to the server\uff1b Data Format \uff1athe data format reported by the gateway to the server, currently only Json format is supported\uff1b Enable Broadcast Data Report \uff1aif the option is enabled, each reported data will include complete broadcast packet data; otherwise, each reported data will only include the device MAC address and RSSI; RSSI Threshold \uff1aif you set the threshold, the gateway will only report data from devices whose signal strength is greater than the value. MAC Filters \u00b6 Filtering of report data based on the broadcast source MAC address. We support the following MAC address completion rules: Case insensitive; Several MAC addresses distinguished by line feeds; Single MAC addresses support splitting by the character ':' and the character ' - ' ; Support for regular expressions with * , currently requires a minimum of the first 8 bits (4 bytes) to be specified. Note : When there is a non-compliant writeup, it will be red-flagged to indicate that the user needs to make changes. Raw Data Filters \u00b6 Broadcast packets with set filter items in the data are filtered according to AD Type according to the broadcast format defined by the Bluetooth Alliance. When In Any is selected, the gateway will match the entire broadcast packet data as the content; The AD data format is currently only supported in Hex; AD data supports the input of regular expressions . Bluetooth Settings Backup/Restore \u00b6 Backup \u00b6 You can export all Bluetooth-related settings on the page, including scan, connection, remote manage, report, data definition. If you would like to export the SSL certificate associated with the server connection configured on the device, please tick the \" Include SSL certificate \" option. Restore \u00b6 You can import a Bluetooth configuration that you have previously backed up or exported from another machine on the Bluetooth configuration restore page. Still have questions? Visit our Community Forum .","title":"Bluetooth"},{"location":"user_guide/gl-s200/bluetooth/#bluetooth","text":"","title":"Bluetooth"},{"location":"user_guide/gl-s200/bluetooth/#bluetooth-devices","text":"On the Bluetooth devices page you can turn the current Bluetooth function on/off and modify the Bluetooth scanning settings.","title":"Bluetooth Devices"},{"location":"user_guide/gl-s200/bluetooth/#scan-settings","text":"Scan type : switching between active or passive scanning. Scan Interval Time : the interval between the start times of two consecutive scan windows. Scan Window Time : the width of time to perform a scan. PHY : Physical Layer modulation method, currently only supports 1M. Click on Apply to complete the setup of Bluetooth scanning.","title":"Scan Settings"},{"location":"user_guide/gl-s200/bluetooth/#broadcast-packets","text":"After setting the Bluetooth scan settings correctly, click the Refresh button to see the Bluetooth broadcast data collected within one second. RSSI : the wireless signal strength of this broadcast packet. Device Name : the data segment of this broadcast packet with an AD Type of 0x09, or Unknow if it does not exist. MAC : the MAC address of the source of this broadcast. Packet Type : divided into ordinary packet and scan reply packet, only scan reply packet can be scanned in active scan mode, passive scan mode can only scan ordinary packet. Note that the s200 can only be made to scan under active scan if the broadcast device comes with a scan reply packet. Raw Data : the original data of this broadcast packet. If you need to see the details of a broadcast packet, please click on it. We provide two ways of presenting the data. Structured data presentation : parsing the broadcast packet data according to the AD structure defined by the Bluetooth Alliance, splitting and parsing the data of the individual AD segments. Raw data presentation : parsing of broadcast packet data according to the AD structure defined by the Bluetooth Alliance, splitting but not parsing out the raw data of individual AD segments.","title":"Broadcast Packets"},{"location":"user_guide/gl-s200/bluetooth/#bluetooth-remote-manage","text":"On the Bluetooth Remote Management page you can choose to turn remote management on/off and modify the relevant remote server configuration. We provide two methods of communication to the server: MQTT and HTTP.","title":"Bluetooth Remote Manage"},{"location":"user_guide/gl-s200/bluetooth/#mqtt","text":"Host \uff1aserver address, either a domain name or an IP address\uff1b Port \uff1aserver port\uff1b Enable TLS \uff1awhether to enable TLS configuration; Username \uff1athe MQTT client username; Password \uff1athe MQTT client password\uff1b Topic Report : the gateway will use this topic to push the scanned Bluetooth data to the MQTT Broker.; Command : the gateway will subscribe to the topic to receive control commands issued by the remote server; Response : the gateway will use the topic to send the command's response or execution result in response to the remote server. If you need to enable TLS configuration, please click on the Enable TLS button and proceed to configure your TLS parameters. Encryption Mode \uff1aEncryption mode with the server side, either one-way or two-way encryption\uff1b CA Certificate \uff1aa CA root certificate file must be uploaded when TLS encryption is enabled\uff1b You can copy the contents of the relevant certificate directly into the input box or click the Upload button to upload a file from your device. Client Cerificate \uff1aa client certificate file must be uploaded when TLS bidirectional encryption is enabled\uff1b You can copy the contents of the relevant certificate directly into the input box or click the Upload button to upload a file from your device. Client Private Key \uff1aa client key file must be uploaded when TLS bidirectional encryption is enabled\uff1b You can copy the contents of the relevant certificate directly into the input box or click the Upload button to upload a file from your device. Password of Key \uff1aoptional setting, password for encryption the client private key. If you also need to set up more advanced MQTT options, you can click on Advance Settings . Client ID \uff1athe client ID used by the gateway to connect to the server\uff1b QoS Level \uff1aQoS level of all topics, default is 0\uff1b Keep Alive Interval \uff1athe heartbeat interval when the gateway connects to the server, default is 60 seconds.","title":"MQTT"},{"location":"user_guide/gl-s200/bluetooth/#http","text":"Report Url \uff1alink to data reporting Authentication Type \uff1aset the authentication method for http, currently choose between None or Basic authentication. If Basic is selected, the following configuration needs to be entered according to the server settings. Username : the HTTP authentication username Password : the HTTP authentication password","title":"HTTP"},{"location":"user_guide/gl-s200/bluetooth/#bluetooth-report","text":"On the Bluetooth report page, there are three tabs, Base, MAC Filter and Raw Data Filter, where you can set up the reporting parameters and data filtering functions.","title":"Bluetooth Report"},{"location":"user_guide/gl-s200/bluetooth/#base","text":"Report Interval \uff1athe interval in seconds for the gateway to report data to the server\uff1b Data Format \uff1athe data format reported by the gateway to the server, currently only Json format is supported\uff1b Enable Broadcast Data Report \uff1aif the option is enabled, each reported data will include complete broadcast packet data; otherwise, each reported data will only include the device MAC address and RSSI; RSSI Threshold \uff1aif you set the threshold, the gateway will only report data from devices whose signal strength is greater than the value.","title":"Base"},{"location":"user_guide/gl-s200/bluetooth/#mac-filters","text":"Filtering of report data based on the broadcast source MAC address. We support the following MAC address completion rules: Case insensitive; Several MAC addresses distinguished by line feeds; Single MAC addresses support splitting by the character ':' and the character ' - ' ; Support for regular expressions with * , currently requires a minimum of the first 8 bits (4 bytes) to be specified. Note : When there is a non-compliant writeup, it will be red-flagged to indicate that the user needs to make changes.","title":"MAC Filters"},{"location":"user_guide/gl-s200/bluetooth/#raw-data-filters","text":"Broadcast packets with set filter items in the data are filtered according to AD Type according to the broadcast format defined by the Bluetooth Alliance. When In Any is selected, the gateway will match the entire broadcast packet data as the content; The AD data format is currently only supported in Hex; AD data supports the input of regular expressions .","title":"Raw Data Filters"},{"location":"user_guide/gl-s200/bluetooth/#bluetooth-settings-backuprestore","text":"","title":"Bluetooth Settings Backup/Restore"},{"location":"user_guide/gl-s200/bluetooth/#backup","text":"You can export all Bluetooth-related settings on the page, including scan, connection, remote manage, report, data definition. If you would like to export the SSL certificate associated with the server connection configured on the device, please tick the \" Include SSL certificate \" option.","title":"Backup"},{"location":"user_guide/gl-s200/bluetooth/#restore","text":"You can import a Bluetooth configuration that you have previously backed up or exported from another machine on the Bluetooth configuration restore page. Still have questions? Visit our Community Forum .","title":"Restore"},{"location":"user_guide/gl-s200/clients/","text":"CLIENTS \u00b6 Clients are devices connected to the router, you can block clients or limit its network speed. The interface is accessible by clicking CLIENTS in the side menu of the router\u2019s Admin Panel. Click here to learn more about managing your device clients.","title":"Clients"},{"location":"user_guide/gl-s200/clients/#clients","text":"Clients are devices connected to the router, you can block clients or limit its network speed. The interface is accessible by clicking CLIENTS in the side menu of the router\u2019s Admin Panel. Click here to learn more about managing your device clients.","title":"CLIENTS"},{"location":"user_guide/gl-s200/first_time_setup/","text":"First time setup \u00b6 All of GL.iNet's devices have a simple and almost identical setup process, click here to learn about the first time setup . Please note that the adapter within the package depends on your shipping country. What\u2019s inside the package? Package Contents: 1 x User manual 1 x GL-S200 1 x Ethernet cable 1 x Thank you card 1 x Warranty card 1 x Power adapter (Selected plug type) Check out GL-S200's unboxing video .","title":"First Time Setup"},{"location":"user_guide/gl-s200/first_time_setup/#first-time-setup","text":"All of GL.iNet's devices have a simple and almost identical setup process, click here to learn about the first time setup . Please note that the adapter within the package depends on your shipping country. What\u2019s inside the package? Package Contents: 1 x User manual 1 x GL-S200 1 x Ethernet cable 1 x Thank you card 1 x Warranty card 1 x Power adapter (Selected plug type) Check out GL-S200's unboxing video .","title":"First time setup"},{"location":"user_guide/gl-s200/gl_dev_board/","text":"GL DEV BOARD \u00b6 In order to give users a more intuitive experience of the thread network functions, we have developed a set of Thread development boards. The GL DEV BOARD is a page dedicated to controlling the Thread development board for GL development and displaying relevant data. Devices \u00b6 The TDB(GL Thread DEV Board) can join the network by using thread Commissioning, but you need to know the EUI64 of the TDB and the device pre-shared key PSKd. To simplify the configuration process, we have pre-built fixed keys in the firmware, which can be added quickly as follows. Add TDB to the network \u00b6 Click on Add Devices . Click on Allow New Devices To Join and Click on Apply . Power up the TDB, press and hold SW2 for three seconds or more to restore the factory settings, then press SW2 briefly. You can see the green light flashing. When the green light of the development board is always on, it means that it successfully joins the network. The first time a device is successfully added, the web page will automatically pop up New Devices to prompt for configuration Type/Name information Type : If theTDB comes with an A0 board, please select \" A0+A1 \". Name : User defined names. You can see that the development board was successfully added to the Online card. Control TDB \u00b6 Device Detail \u00b6 You can view the current data of the TDB on the Device Detail page. View Records \u00b6 You can view a graph of the TDB's historical data on the View Records page. Edit Device \u00b6 You can edit the settings of the TDB on the Edit Device page. Code Examples \u00b6 We have prepared some sample code to control the TDB. You can run them in the S200 backend, or write your own applications by referring to these examples. Reset Device \u00b6 If you want to remove the TDB from the network, use the reset device function. Note : This will restore the TDB to its factory settings. Automations \u00b6 To enable users to better test the thread network in real-life situations, we offer some simple, restricted device linkage functions. Add an automation with device action \u00b6 As an example, create an automation example: press a button on either board and the RGB lights on/off on both boards. Create a name Select type of trigger conditions Select the device(s) to be used as an trigger. Select trigger conditions Select the type of operation Select the device(s) to be used as an actuator Select actuator's actions You can see the automation cards that have been created. Add an automation with webhook \u00b6 A webhook in web development is a method of augmenting or altering the behavior of a web page or web application with custom callbacks. As an example, I need TDB for home security alarms. When someone enters, send a message to Discord via webhook. Create a webhook url from Discord Please refer to the official Discord documentation . Please copy the url of the webhook, the next steps need to use. Fellow the steps below to create an automation. Give it a name for the automation. Select Sensor trigger . Select devices. Select trigger condition. Select Webhook . Paste the url you got when you created the webhook. Enter the message you wish to send to Discord. Discord specifies that the message sent provide a value for at least one of content , embeds , components , or file . Note : Different Internet applications have their own definitions for the content and format of messages, please refer to the relevant documentation. Finally, an Automation that triggers the webhook is successfully created. When the TDB's pyroelectric infrared sensor is triggered, the GL-S200 sends the specified message to the webhook that is set up. Still have questions? Visit our Community Forum .","title":"GL Dev Board"},{"location":"user_guide/gl-s200/gl_dev_board/#gl-dev-board","text":"In order to give users a more intuitive experience of the thread network functions, we have developed a set of Thread development boards. The GL DEV BOARD is a page dedicated to controlling the Thread development board for GL development and displaying relevant data.","title":"GL DEV BOARD"},{"location":"user_guide/gl-s200/gl_dev_board/#devices","text":"The TDB(GL Thread DEV Board) can join the network by using thread Commissioning, but you need to know the EUI64 of the TDB and the device pre-shared key PSKd. To simplify the configuration process, we have pre-built fixed keys in the firmware, which can be added quickly as follows.","title":"Devices"},{"location":"user_guide/gl-s200/gl_dev_board/#add-tdb-to-the-network","text":"Click on Add Devices . Click on Allow New Devices To Join and Click on Apply . Power up the TDB, press and hold SW2 for three seconds or more to restore the factory settings, then press SW2 briefly. You can see the green light flashing. When the green light of the development board is always on, it means that it successfully joins the network. The first time a device is successfully added, the web page will automatically pop up New Devices to prompt for configuration Type/Name information Type : If theTDB comes with an A0 board, please select \" A0+A1 \". Name : User defined names. You can see that the development board was successfully added to the Online card.","title":"Add TDB to the network"},{"location":"user_guide/gl-s200/gl_dev_board/#control-tdb","text":"","title":"Control TDB"},{"location":"user_guide/gl-s200/gl_dev_board/#device-detail","text":"You can view the current data of the TDB on the Device Detail page.","title":"Device Detail"},{"location":"user_guide/gl-s200/gl_dev_board/#view-records","text":"You can view a graph of the TDB's historical data on the View Records page.","title":"View Records"},{"location":"user_guide/gl-s200/gl_dev_board/#edit-device","text":"You can edit the settings of the TDB on the Edit Device page.","title":"Edit Device"},{"location":"user_guide/gl-s200/gl_dev_board/#code-examples","text":"We have prepared some sample code to control the TDB. You can run them in the S200 backend, or write your own applications by referring to these examples.","title":"Code Examples"},{"location":"user_guide/gl-s200/gl_dev_board/#reset-device","text":"If you want to remove the TDB from the network, use the reset device function. Note : This will restore the TDB to its factory settings.","title":"Reset Device"},{"location":"user_guide/gl-s200/gl_dev_board/#automations","text":"To enable users to better test the thread network in real-life situations, we offer some simple, restricted device linkage functions.","title":"Automations"},{"location":"user_guide/gl-s200/gl_dev_board/#add-an-automation-with-device-action","text":"As an example, create an automation example: press a button on either board and the RGB lights on/off on both boards. Create a name Select type of trigger conditions Select the device(s) to be used as an trigger. Select trigger conditions Select the type of operation Select the device(s) to be used as an actuator Select actuator's actions You can see the automation cards that have been created.","title":"Add an automation with device action"},{"location":"user_guide/gl-s200/gl_dev_board/#add-an-automation-with-webhook","text":"A webhook in web development is a method of augmenting or altering the behavior of a web page or web application with custom callbacks. As an example, I need TDB for home security alarms. When someone enters, send a message to Discord via webhook. Create a webhook url from Discord Please refer to the official Discord documentation . Please copy the url of the webhook, the next steps need to use. Fellow the steps below to create an automation. Give it a name for the automation. Select Sensor trigger . Select devices. Select trigger condition. Select Webhook . Paste the url you got when you created the webhook. Enter the message you wish to send to Discord. Discord specifies that the message sent provide a value for at least one of content , embeds , components , or file . Note : Different Internet applications have their own definitions for the content and format of messages, please refer to the relevant documentation. Finally, an Automation that triggers the webhook is successfully created. When the TDB's pyroelectric infrared sensor is triggered, the GL-S200 sends the specified message to the webhook that is set up. Still have questions? Visit our Community Forum .","title":"Add an automation with webhook"},{"location":"user_guide/gl-s200/hardware_info/","text":"Hardware info \u00b6 GL-S200 is a miniaturized Thread gateway supporting BLE protocol that runs on a highly customizable OpenWrt operating system and supports cloud device management. It has a versatile design for connecting to various smart home devices, or mass device connectivity for smart buildings. Specification \u00b6 GL-s200 specification GL-S200 PCB Pinout \u00b6 GL Thread Dev Board Pinout \u00b6","title":"Hardware Info"},{"location":"user_guide/gl-s200/hardware_info/#hardware-info","text":"GL-S200 is a miniaturized Thread gateway supporting BLE protocol that runs on a highly customizable OpenWrt operating system and supports cloud device management. It has a versatile design for connecting to various smart home devices, or mass device connectivity for smart buildings.","title":"Hardware info"},{"location":"user_guide/gl-s200/hardware_info/#specification","text":"GL-s200 specification","title":"Specification"},{"location":"user_guide/gl-s200/hardware_info/#gl-s200-pcb-pinout","text":"","title":"GL-S200 PCB Pinout"},{"location":"user_guide/gl-s200/hardware_info/#gl-thread-dev-board-pinout","text":"","title":"GL Thread Dev Board Pinout"},{"location":"user_guide/gl-s200/internet/","text":"INTERNET \u00b6 The internet configuration interface lets users choose to establish the type of internet connection supported by the router. Configure the internet network by selecting INTERNET in the side menu within the router's web Admin Panel. It supports two ways to connect to the internet as listed below: Ethernet \u00b6 Transmit data over an Ethernet cable using an Ethernet cable to connect the router to an active modem or an active network device. This method usually provides the fastest and most reliable Internet connection. Click here to learn how to connect to the internet via an ethernet cable Repeater \u00b6 Extend the Wi-Fi coverage area of an existing Wi-Fi network by using a router to receive wireless signals within range and forwarding the signals to a further distance. This method is most useful when a single router does not have enough range to cover the entire usage area. Click here to learn how to connect to the internet via an existing Wi-Fi Priority and load balance \u00b6 Go to Multi-WAN to set the priority of each Internet access method or the load balance when multiple Internet access methods are used at the same time.","title":"Internet"},{"location":"user_guide/gl-s200/internet/#internet","text":"The internet configuration interface lets users choose to establish the type of internet connection supported by the router. Configure the internet network by selecting INTERNET in the side menu within the router's web Admin Panel. It supports two ways to connect to the internet as listed below:","title":"INTERNET"},{"location":"user_guide/gl-s200/internet/#ethernet","text":"Transmit data over an Ethernet cable using an Ethernet cable to connect the router to an active modem or an active network device. This method usually provides the fastest and most reliable Internet connection. Click here to learn how to connect to the internet via an ethernet cable","title":"Ethernet"},{"location":"user_guide/gl-s200/internet/#repeater","text":"Extend the Wi-Fi coverage area of an existing Wi-Fi network by using a router to receive wireless signals within range and forwarding the signals to a further distance. This method is most useful when a single router does not have enough range to cover the entire usage area. Click here to learn how to connect to the internet via an existing Wi-Fi","title":"Repeater"},{"location":"user_guide/gl-s200/internet/#priority-and-load-balance","text":"Go to Multi-WAN to set the priority of each Internet access method or the load balance when multiple Internet access methods are used at the same time.","title":"Priority and load balance"},{"location":"user_guide/gl-s200/network/","text":"NETWORK \u00b6 Firewall \u00b6 GL.iNet's routers include multiple firewall features to ensure a secure connection and complete oversight by users. It lets users configure firewall rules including Port Forwarding, Open Ports, and DMZ. Click here to learn more about GL.iNet routers\u2019 firewall Multi-WAN \u00b6 Please visit the Multi-WAN tutorial. LAN \u00b6 Please visit the LAN tutorial. DNS \u00b6 Please visit the DNS tutorial. IPv6 \u00b6 Please visit the IPv6 tutorial. MAC Address \u00b6 The Mac Address page was previously called Mac Clone and has been changed to Mac Address since v4.2. Please visit the MAC Address tutorial. IGMP Snooping \u00b6 Please visit the IGMP Snooping tutorial.","title":"Network"},{"location":"user_guide/gl-s200/network/#network","text":"","title":"NETWORK"},{"location":"user_guide/gl-s200/network/#firewall","text":"GL.iNet's routers include multiple firewall features to ensure a secure connection and complete oversight by users. It lets users configure firewall rules including Port Forwarding, Open Ports, and DMZ. Click here to learn more about GL.iNet routers\u2019 firewall","title":"Firewall"},{"location":"user_guide/gl-s200/network/#multi-wan","text":"Please visit the Multi-WAN tutorial.","title":"Multi-WAN"},{"location":"user_guide/gl-s200/network/#lan","text":"Please visit the LAN tutorial.","title":"LAN"},{"location":"user_guide/gl-s200/network/#dns","text":"Please visit the DNS tutorial.","title":"DNS"},{"location":"user_guide/gl-s200/network/#ipv6","text":"Please visit the IPv6 tutorial.","title":"IPv6"},{"location":"user_guide/gl-s200/network/#mac-address","text":"The Mac Address page was previously called Mac Clone and has been changed to Mac Address since v4.2. Please visit the MAC Address tutorial.","title":"MAC Address"},{"location":"user_guide/gl-s200/network/#igmp-snooping","text":"Please visit the IGMP Snooping tutorial.","title":"IGMP Snooping"},{"location":"user_guide/gl-s200/system/","text":"SYSTEM \u00b6 Overview \u00b6 Please visit the System Overview tutorial. Upgrade \u00b6 GL.iNet provides regular updates on our routers' firmware to improve performance, resolving bugs and fix vulnerabilities. Please visit the Upgrade tutorial. Scheduled Tasks \u00b6 Please visit the Scheduled Tasks tutorial. Admin Password \u00b6 Please visit the Admin Password tutorial. Time Zone \u00b6 Please visit the Time Zone tutorial. Toggle Button Settings \u00b6 Please visit the Toggle Button Settings tutorial. Log \u00b6 Please visit the Log tutorial. Reset Firmware \u00b6 Please visit the Reset Firmware tutorial. Advanced Settings \u00b6 Please visit the Advanced Settings tutorial.","title":"System"},{"location":"user_guide/gl-s200/system/#system","text":"","title":"SYSTEM"},{"location":"user_guide/gl-s200/system/#overview","text":"Please visit the System Overview tutorial.","title":"Overview"},{"location":"user_guide/gl-s200/system/#upgrade","text":"GL.iNet provides regular updates on our routers' firmware to improve performance, resolving bugs and fix vulnerabilities. Please visit the Upgrade tutorial.","title":"Upgrade"},{"location":"user_guide/gl-s200/system/#scheduled-tasks","text":"Please visit the Scheduled Tasks tutorial.","title":"Scheduled Tasks"},{"location":"user_guide/gl-s200/system/#admin-password","text":"Please visit the Admin Password tutorial.","title":"Admin Password"},{"location":"user_guide/gl-s200/system/#time-zone","text":"Please visit the Time Zone tutorial.","title":"Time Zone"},{"location":"user_guide/gl-s200/system/#toggle-button-settings","text":"Please visit the Toggle Button Settings tutorial.","title":"Toggle Button Settings"},{"location":"user_guide/gl-s200/system/#log","text":"Please visit the Log tutorial.","title":"Log"},{"location":"user_guide/gl-s200/system/#reset-firmware","text":"Please visit the Reset Firmware tutorial.","title":"Reset Firmware"},{"location":"user_guide/gl-s200/system/#advanced-settings","text":"Please visit the Advanced Settings tutorial.","title":"Advanced Settings"},{"location":"user_guide/gl-s200/thread_mesh/","text":"Thread Mesh \u00b6 Thread Network \u00b6 You can configure and manage Thread Network settings on the Thread Network page. EUI-64 \uff1aUnique device identifier, hexadecimal number of 8 bytes in length. Ext Mac \uff1aThe device extension address, a unique identifier in the Thread network, is a hexadecimal number of 8 bytes in length. The extended address is randomly generated and will be re-randomized when the system is restored to factory settings. Thread Version \uff1aCurrent thread protocol version. Tx Power \uff1aTransmit power, 0~20dBm, default is 20dBm. Network Name \uff1aThread network name, 1 to 16 characters long, used to generate PSKc (Pre-Shared Key for the Commissioner), default format - <3 characters after MAC address>. PAN ID \uff1aIEEE 802.15.4 MAC layer unique identifier, default value is 2 bytes after the MAC address in hexadecimal format. Extended PAN ID \uff1aThread network extension PAN ID for PSKc generation. Network Key \uff1aThread network key, a hexadecimal number of 16 bytes in length. Channel \uff1aThread network channel, 11~26, default value is 26. Commissioner Credential \uff1aUser-defined string, UTF-8 encoded characters from 6 to 255 in length, used to generate PSKc, default value is goodlife . Network Name/ PAN ID/ Extended PAN ID/ Network Key is generated based on the MAC address of the device. Create a new network \u00b6 You can create a new network directly by using the default configuration and clicking Enable . You can then see that the status of the S200 has changed from Detached to Leader , which means that a new network has been created. Note : If you have the same network settings as an existing Thread network in your current environment, then the S200 will automatically join that network. If you want to set some parameters manually, you can configure them by clicking on the Manual Setup . Join an existing network \u00b6 We support the following 4 ways to add the S200 to an existing network. Join the network by using Network Key \u00b6 Click on the Join Network and the GL-S200 will scan the surrounding available Thread networks. Select the Thread network you want to join in the pop-up window, enter its Network Key and apply it. Join the network by using the Commissioner \u00b6 Using another GL.iNET S200 as the Commissioner (please refer to the Thread Commissioning page guide), enter the Joiner EUI64 and Joiner Credential of the S200 to be connected to the network. Click on the \" Join Network \" on the S200 to be connected to the network, select \" Join With Commissioner \" in the pop-up window, enter the Joiner Credential and apply it. A successful Join Network will automatically jump to display the status page. Networking using import Thread network configuration \u00b6 To facilitate deployment, we can import the same Thread network configuration directly to the device so that devices with the same Thread network configuration are automatically networked after they are up. You can import and export by clicking on Import Setting/Export Setting in the top right hand corner of the Thread Network page. Note : You can only export when the Thread Network is up, or import when the Thread Network is down. Join the network by using External Commissioner \u00b6 In the Thread network, the GL.iNET S200 acts as a border agent to support external commissioners, which can be a mobile phone or a PC. Download Commissioner App OT Commissioner Android App Thread Group Android App Open the app after connecting the GL-S200 via WiFi. Select one of the AVALABLE BORDER ROUTERS and click on it and enter the Commissioner Credential. If step 3 is entered correctly, you can scan the QR code on the GL-S200 Join With Commissioner page and click Apply on the GL-S200 page to start the process. Export thread network settings \u00b6 You can copy the thread network dataset TLV data or download it in the file. Thread Commissioning \u00b6 You can add new devices to the network on this page, and GL-S200 supports bulk imports. The Joiners card shows the list of Joiners to be added to the network The Commission Records card shows Joiner's network entry history. For Joined/Timeout devices, click Action -> Rejoin to re-enter the network without re-entering\uff1b For all devices with Joined/Join Fail status, you can also click on Rejoin All to re-enter the network in bulk Add a single device \u00b6 Joiner EUI-64 : Joiner's EUI-64 or type * to match all Joiners. Joiner Credential : The device credentials to be added must be a string containing all uppercase letters and numbers and must not contain the letters I, O, Q and Z, between 6 and 32 characters in length. Joiner Timeout : Joiner access timeout, during which a Joiner can access the network using valid credentials. Add devices in batches \u00b6 If the device vendor has set different Joiner credentials for each Thread device, you will need this feature when deploying. Clicking Download template to download the template or export the saved Joiner list, fill in or add the Joiner EUI64 and Joiner Credential, then click Select to import. Thread Topologies \u00b6 The network topology data is obtained by sending multicast packets. The network topology data allows you to view information about each node such as IPv6 address, mode of operation, directly connected sub-nodes, etc. You can click on any device to view information about that device. Advanced \u00b6 We have provided some advanced configurations related to Thread networking. Normally we do not recommend that users modify these parameters. SRP Server \u00b6 SRP (Service Registration Protocol) is a service registration and discovery protocol. The IP of devices on an IP-based network is not usually fixed, so communication is not possible without determining the IP of the other end, and this SRP protocol allows automatic discovery of devices and services on the Thread network. Host: SRP Server domain. Lease: The lifetime of the DNS-SD PTR, SRV, A, AAAA and TXT records. Key Lease: The lifetime of the KEY records. Backbone Routers \u00b6 The Backbone Router (BBR) function is primarily used to receive multicast inbound/outbound requests. Refer to Thread Border Router - Thread 1.2 Multicast for experimentation. Backbone Interface: Select the interface that bbr use. Still have questions? Visit our Community Forum .","title":"Thread Mesh"},{"location":"user_guide/gl-s200/thread_mesh/#thread-mesh","text":"","title":"Thread Mesh"},{"location":"user_guide/gl-s200/thread_mesh/#thread-network","text":"You can configure and manage Thread Network settings on the Thread Network page. EUI-64 \uff1aUnique device identifier, hexadecimal number of 8 bytes in length. Ext Mac \uff1aThe device extension address, a unique identifier in the Thread network, is a hexadecimal number of 8 bytes in length. The extended address is randomly generated and will be re-randomized when the system is restored to factory settings. Thread Version \uff1aCurrent thread protocol version. Tx Power \uff1aTransmit power, 0~20dBm, default is 20dBm. Network Name \uff1aThread network name, 1 to 16 characters long, used to generate PSKc (Pre-Shared Key for the Commissioner), default format - <3 characters after MAC address>. PAN ID \uff1aIEEE 802.15.4 MAC layer unique identifier, default value is 2 bytes after the MAC address in hexadecimal format. Extended PAN ID \uff1aThread network extension PAN ID for PSKc generation. Network Key \uff1aThread network key, a hexadecimal number of 16 bytes in length. Channel \uff1aThread network channel, 11~26, default value is 26. Commissioner Credential \uff1aUser-defined string, UTF-8 encoded characters from 6 to 255 in length, used to generate PSKc, default value is goodlife . Network Name/ PAN ID/ Extended PAN ID/ Network Key is generated based on the MAC address of the device.","title":"Thread Network"},{"location":"user_guide/gl-s200/thread_mesh/#create-a-new-network","text":"You can create a new network directly by using the default configuration and clicking Enable . You can then see that the status of the S200 has changed from Detached to Leader , which means that a new network has been created. Note : If you have the same network settings as an existing Thread network in your current environment, then the S200 will automatically join that network. If you want to set some parameters manually, you can configure them by clicking on the Manual Setup .","title":"Create a new network"},{"location":"user_guide/gl-s200/thread_mesh/#join-an-existing-network","text":"We support the following 4 ways to add the S200 to an existing network.","title":"Join an existing network"},{"location":"user_guide/gl-s200/thread_mesh/#join-the-network-by-using-network-key","text":"Click on the Join Network and the GL-S200 will scan the surrounding available Thread networks. Select the Thread network you want to join in the pop-up window, enter its Network Key and apply it.","title":"Join the network by using Network Key"},{"location":"user_guide/gl-s200/thread_mesh/#join-the-network-by-using-the-commissioner","text":"Using another GL.iNET S200 as the Commissioner (please refer to the Thread Commissioning page guide), enter the Joiner EUI64 and Joiner Credential of the S200 to be connected to the network. Click on the \" Join Network \" on the S200 to be connected to the network, select \" Join With Commissioner \" in the pop-up window, enter the Joiner Credential and apply it. A successful Join Network will automatically jump to display the status page.","title":"Join the network by using the Commissioner"},{"location":"user_guide/gl-s200/thread_mesh/#networking-using-import-thread-network-configuration","text":"To facilitate deployment, we can import the same Thread network configuration directly to the device so that devices with the same Thread network configuration are automatically networked after they are up. You can import and export by clicking on Import Setting/Export Setting in the top right hand corner of the Thread Network page. Note : You can only export when the Thread Network is up, or import when the Thread Network is down.","title":"Networking using import Thread network configuration"},{"location":"user_guide/gl-s200/thread_mesh/#join-the-network-by-using-external-commissioner","text":"In the Thread network, the GL.iNET S200 acts as a border agent to support external commissioners, which can be a mobile phone or a PC. Download Commissioner App OT Commissioner Android App Thread Group Android App Open the app after connecting the GL-S200 via WiFi. Select one of the AVALABLE BORDER ROUTERS and click on it and enter the Commissioner Credential. If step 3 is entered correctly, you can scan the QR code on the GL-S200 Join With Commissioner page and click Apply on the GL-S200 page to start the process.","title":"Join the network by using External Commissioner"},{"location":"user_guide/gl-s200/thread_mesh/#export-thread-network-settings","text":"You can copy the thread network dataset TLV data or download it in the file.","title":"Export thread network settings"},{"location":"user_guide/gl-s200/thread_mesh/#thread-commissioning","text":"You can add new devices to the network on this page, and GL-S200 supports bulk imports. The Joiners card shows the list of Joiners to be added to the network The Commission Records card shows Joiner's network entry history. For Joined/Timeout devices, click Action -> Rejoin to re-enter the network without re-entering\uff1b For all devices with Joined/Join Fail status, you can also click on Rejoin All to re-enter the network in bulk","title":"Thread Commissioning"},{"location":"user_guide/gl-s200/thread_mesh/#add-a-single-device","text":"Joiner EUI-64 : Joiner's EUI-64 or type * to match all Joiners. Joiner Credential : The device credentials to be added must be a string containing all uppercase letters and numbers and must not contain the letters I, O, Q and Z, between 6 and 32 characters in length. Joiner Timeout : Joiner access timeout, during which a Joiner can access the network using valid credentials.","title":"Add a single device"},{"location":"user_guide/gl-s200/thread_mesh/#add-devices-in-batches","text":"If the device vendor has set different Joiner credentials for each Thread device, you will need this feature when deploying. Clicking Download template to download the template or export the saved Joiner list, fill in or add the Joiner EUI64 and Joiner Credential, then click Select to import.","title":"Add devices in batches"},{"location":"user_guide/gl-s200/thread_mesh/#thread-topologies","text":"The network topology data is obtained by sending multicast packets. The network topology data allows you to view information about each node such as IPv6 address, mode of operation, directly connected sub-nodes, etc. You can click on any device to view information about that device.","title":"Thread Topologies"},{"location":"user_guide/gl-s200/thread_mesh/#advanced","text":"We have provided some advanced configurations related to Thread networking. Normally we do not recommend that users modify these parameters.","title":"Advanced"},{"location":"user_guide/gl-s200/thread_mesh/#srp-server","text":"SRP (Service Registration Protocol) is a service registration and discovery protocol. The IP of devices on an IP-based network is not usually fixed, so communication is not possible without determining the IP of the other end, and this SRP protocol allows automatic discovery of devices and services on the Thread network. Host: SRP Server domain. Lease: The lifetime of the DNS-SD PTR, SRV, A, AAAA and TXT records. Key Lease: The lifetime of the KEY records.","title":"SRP Server"},{"location":"user_guide/gl-s200/thread_mesh/#backbone-routers","text":"The Backbone Router (BBR) function is primarily used to receive multicast inbound/outbound requests. Refer to Thread Border Router - Thread 1.2 Multicast for experimentation. Backbone Interface: Select the interface that bbr use. Still have questions? Visit our Community Forum .","title":"Backbone Routers"},{"location":"user_guide/gl-s200/vpn/","text":"VPN \u00b6 GL.iNet routers are pre-installed with OpenVPN and WireGuard\u00ae supporting 30+ VPN services. It automatically encrypts all network traffic within the connected network, including guest devices and client devices that are not capable of running VPN encryption. Our routers can also act as VPN servers, redirecting traffic from client devices in remote locations to the VPN server via a VPN tunnel before accessing the public internet. VPN Dashboard \u00b6 VPN Dashboard OpenVPN \u00b6 Please refer to the following links for a step to step setup guide: Setup OpenVPN Client Setup OpenVPN Server WireGuard \u00b6 Please refer to the following links for a step to step setup guide: Setup WireGuard Client Setup WireGuard Server","title":"VPN"},{"location":"user_guide/gl-s200/vpn/#vpn","text":"GL.iNet routers are pre-installed with OpenVPN and WireGuard\u00ae supporting 30+ VPN services. It automatically encrypts all network traffic within the connected network, including guest devices and client devices that are not capable of running VPN encryption. Our routers can also act as VPN servers, redirecting traffic from client devices in remote locations to the VPN server via a VPN tunnel before accessing the public internet.","title":"VPN"},{"location":"user_guide/gl-s200/vpn/#vpn-dashboard","text":"VPN Dashboard","title":"VPN Dashboard"},{"location":"user_guide/gl-s200/vpn/#openvpn","text":"Please refer to the following links for a step to step setup guide: Setup OpenVPN Client Setup OpenVPN Server","title":"OpenVPN"},{"location":"user_guide/gl-s200/vpn/#wireguard","text":"Please refer to the following links for a step to step setup guide: Setup WireGuard Client Setup WireGuard Server","title":"WireGuard"},{"location":"user_guide/gl-s200/wireless/","text":"WIRELESS \u00b6 The wireless settings lets users manage network security of the primary Wi-Fi and the Guest Wi-Fi, it is accessible by going to WIRELESS on the side menu. Click here to learn more about the wireless configuration","title":"Wireless"},{"location":"user_guide/gl-s200/wireless/#wireless","text":"The wireless settings lets users manage network security of the primary Wi-Fi and the Guest Wi-Fi, it is accessible by going to WIRELESS on the side menu. Click here to learn more about the wireless configuration","title":"WIRELESS"},{"location":"user_guide/thread_dev_board/first_time_setup/","text":"Coming soon.","title":"First Time Setup"}]}