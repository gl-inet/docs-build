{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome!","text":"<p>GL.iNet is devoted to make hardware working easily with open-sourced software. This docs site is intended to advise newcomers to how open sourced software works on our hardware. As the product evolves, this docs site will be updated from time to time.</p>"},{"location":"#official-support","title":"Official Support","text":"<p>We try our best to solve your every technical problem when you use our products. We have built a community for you to share your ideas with other users on our Discourse forum. Also, we can also offer helps on our Facebook page and our Twitter platform. If you have some really in-depth technical questions you want we to work on, please email them to support@gl-inet.com </p>"},{"location":"#contribution","title":"Contribution","text":""},{"location":"#thank-you","title":"Thank You","text":"<p>GL.iNet OpenWrt routers are brought to you by the GL.iNet Team based in Hong Kong and Shenzhen, and many other open source community members. As a community driven resource, the people who use and edit the docs would be very grateful if you followed the guidelines below. This page also has tips and tricks for making your article, which would also be fabulous.</p> <p>Thanks, GL.iNet Team</p>"},{"location":"#wikidevi","title":"Wikidevi","text":"<p>GL-B1300 Gigabit AC Router: https://wikidevi.com/wiki/GL.iNet_GL-B1300</p> <p>GL-AR750 Travel AC Router: https://wikidevi.com/wiki/GL.iNet_GL-AR750</p> <p>GL-USB150 Microuter: https://wikidevi.com/wiki/GL.iNet_GL-USB150</p> <p>GL-AR300M Mini Smart Router: https://wikidevi.com/wiki/GL.iNet_GL-AR300M</p> <p>GL-AR150 Mini Smart Router: https://wikidevi.com/wiki/GL.iNet_GL-AR150</p> <p>GL-MiFi 4G Smart Router: TBA</p> <p>GL-MT300A Mini Smart Router: TBA</p> <p>GL-MT300N-V2 Mini Smart Router: TBA</p> <p>GL-MT300N Mini Smart Router: TBA</p> <p>GL.iNet 6416 Mini Smart Router: TBA</p>"},{"location":"#markdown","title":"Markdown","text":"<p>Markdown Basics: https://help.github.com/articles/markdown-basics/</p> <p>Markdown Syntax: http://daringfireball.net/projects/markdown/syntax</p> <p>Table Generator: http://www.tablesgenerator.com/markdown_tables</p>"},{"location":"service/","title":"Services","text":"<p>We provide hardware services. The ideas is illustrated here:</p> <p></p> <p>Due to limited resources, we now only provide such service based on Domino and Mini routers.</p> <p>Many people ask for a price break down. We cannot give precise information without detailed requirement. Such project cost thousands of USD to tens of thousands, depends on detailed requirements.</p> <p>We have made several such projects and found this is very difficult. The reasons include:</p> <ol> <li>Requirements is not detailed and clear. Without a clear requirments the project cannot be started.</li> <li>Changing requirement. This is normal for product development, but it kills a ODM project easily because clients generally don't want to pay more for small changes but such a change can be very costly.</li> <li>Communication cost is high and project schedule is delayed many times.</li> </ol> <p>If you want to make hardware based on our products, here is what we suggested:</p> <ul> <li>Reuse existing hardware as possible as you can. Focus on software.</li> <li>Know your detailed requirements, e.g. size of your product, interfaces. Not just an idea.</li> <li>Prepare for some money to invest.</li> </ul>"},{"location":"app/openvpn/","title":"OpenVPN Client Setting","text":"<p>This docs is only related to OpenVPN client.</p> <p>OpenVPN client is pre-installed in GL.iNet routers GL-AR150, GL-AR300M, GL-MT300N, GL-MT300A, GL-USB150, GL-AR750, GL-B1300 from firmware v2.19.</p> <p>Download the firmware for each devices: https://dl.gl-inet.com</p> <p>Note: You need to subscribe your own VPN service and get an OpenVPN configuration file (.ovpn) from your service provider. If you have subscribed but don't know how to download the configuration file, please read the section \"How to get the configuration file\".</p> <p>This guide assumes that you have set up the router properly.</p>"},{"location":"app/openvpn/#1-create-an-openvpn-connection","title":"1. Create an OpenVPN connection","text":""},{"location":"app/openvpn/#1-go-to-openvpn-page","title":"1) Go to OpenVPN page","text":"<p>Click the OpenVPN icon on the toolbar. It will ask you to upload the configuration files. This file can be a single .ovpn file or a zip/tar.gz file which contains multiple .ovpn files.</p> <p>Be careful that some .ovpn files use separated ca, cert, crl files. These files must be zipped together with the .ovpn file before upload.</p> <p></p>"},{"location":"app/openvpn/#2-upload-your-configuration-file","title":"2) Upload your configuration file","text":"<p>Simply Drap and drop your file to the area indicated so that it will be uploaded to the router automatically. Next, the router will start to check the file. Refresh the page when you see the file has been successfully uploaded and the .ovpn file has been imported.</p> <p></p> <p>For zip/tar.gz file, the router will unzip the zip/tar.gz file  and check each .ovpn file inside.</p> <p></p> <p>In some cases, it will ask you to enter your username and password. This usually happen when your configuration file can be downloaded without login your personal account.</p> <p></p>"},{"location":"app/openvpn/#3-connect-to-the-openvpn-server","title":"3) Connect to the OpenVPN server","text":"<p>After refreshing the page, you will be able to configure the OpenVPN connection.</p> <p></p> <p>Please create the VPN connection by following the steps below:</p> <ul> <li>Check \"Enable\".</li> <li>Check \"Force VPN\" if you want to force all Internet traffic to go through VPN. However, you will lose Internet access if the VPN is disconnected.</li> <li>Then choose a .ovpn file which you want to use.</li> <li>Now click \"Apply\"</li> </ul> <p>The router will show the connection progress. Once it is connected, you will be able to see data sent and received.</p> <p></p>"},{"location":"app/openvpn/#2-manage-ovpn-files","title":"2. Manage ovpn files","text":"<p>From firmware <code>v2.20</code>, there is a simple ovpn manager where you can check the current list of ovpn files. You can purge all the files and start to use another vpn service.</p> <p>We would like to add more functions in the ovpn manager, you can send us a wish list via email or in the forum. Some proposed functions (this doesn't mean this feature will come in the near future) include:</p> <ul> <li>Server and port probe: to detect if the server is online. This is useful if you are in a censored area and some servers are not accessible at all. But this process is very time consuming.</li> <li>To intergrate ovpn files into one. Generally the VPN service providers provides one ovpn file for each server then you will have hundreds of ovpn file. You can integrate these files into one and let the router to connect to a random sever.</li> <li>Delete, order and ranking servers. Now we don't have a algorithms to rank the servers, as you will not know the speed unless you try. We can record the speed if you have tried.</li> <li>Manage multiple VPN services. While most people just use one service, we don't know if this is necessary.</li> </ul> <p></p>"},{"location":"app/openvpn/#3-get-the-config-file","title":"3. Get the config File","text":"<p>We have tested different VPN service providers. Therefore, if you don't know how to get the configuration file, you can follow the instruction below according to your service provider. However, you have to contact your service provider for the configuration file if they haven't been listed  below. </p> <p>If you use other service providers and have problem of setting up the OpenVPN, please contact support@gl-inet.com</p>"},{"location":"app/openvpn/#openvpn-service-providers","title":"OpenVPN Service providers:","text":"<p>Service providers are list according to their names as below,</p>"},{"location":"app/openvpn/#a-d","title":"A - D","text":""},{"location":"app/openvpn/#airvpn","title":"AirVPN","text":"<p>https://airvpn.org/?referred_by=402389</p> <ol> <li>Login your AirVPN acoount</li> </ol> <p></p> <ol> <li>Choose Config Generator on the left and then choose Linux as your operating system. Next, choose your preferred server.</li> </ol> <p></p> <ol> <li>You will be able to see the download page of the configuration file.</li> </ol> <p></p>"},{"location":"app/openvpn/#astrill","title":"Astrill","text":"<p>https://www.astrill.com/</p> <p>*Information quoted from Astrill official instruction</p> <p>https://wiki.astrill.com/Astrill_Setup_Manual:How_to_configure_OpenVPN_with_OpenVPN_application_on_Windows</p> <ol> <li>Generate and Download Astrill Openvpn configuration ZIP</li> </ol> <p></p> <p></p> <ol> <li> <p>Type a Description like OPENVPN_GUI.</p> </li> <li> <p>Click on ADD to my certificates button.</p> </li> </ol> <p></p> <ol> <li>Once OpenVPN certificate is added, click on Download button.</li> </ol> <p></p>"},{"location":"app/openvpn/#cactusvpn","title":"CactusVPN","text":"<p>https://www.cactusvpn.com/</p> <p>Download directly from: https://www.cactusvpn.com/downloads/</p> <p></p>"},{"location":"app/openvpn/#e-h","title":"E - H","text":""},{"location":"app/openvpn/#expressvpn","title":"ExpressVPN","text":"<p>https://www.expressvpn.com/</p> <p>*Information quoted from ExpressVPN official instruction. https://www.expressvpn.com/support/vpn-setup/manual-config-for-linux-with-openvpn/#download</p> <ol> <li>Log in to your account.</li> </ol> <p></p> <ol> <li>Once you\u2019ve logged in to the website, click on Set Up ExpressVPN on the Active Subscriptions page. This will take you to the Downloads page.</li> </ol> <p></p> <ol> <li>Click on Manual Config on the left side of the screen and then select the OpenVPN tab on the right. You will first see your username and password and then a list of OpenVPN configuration files.</li> </ol> <p>Find the location(s) you want to connect to (e.g., Los Angeles, New York, Hong Kong), then download and save the .ovpn file(s) to your desktop.</p> <p>Note: Please have your username and password ready, as you will be asked to enter them later in the setup process.</p> <p></p>"},{"location":"app/openvpn/#finchvpn","title":"FinchVPN","text":"<p>https://www.finchvpn.com/</p> <ol> <li>Login your FinchVPN account via https://www.finchvpn.com/login.</li> </ol> <p></p> <ol> <li>Go to the Download page and click Download under FinchVPN OpenVPN Config.</li> </ol> <p></p> <ol> <li>Choose Linux</li> </ol> <p></p> <ol> <li>Choose the protocol based on your preference. Generally, you can choose the first one \u201cPort 8484 over UDP\u201d</li> </ol> <p></p> <ol> <li>Remember to tick the box to include your username and password before download the file.</li> </ol> <p></p>"},{"location":"app/openvpn/#free-vpn-software","title":"Free VPN Software","text":"<p>http://freevpnsoftware.net/</p> <p>Download by right click the links below and save as. US Server: http://freevpnsoftware.net/downloads/US.freevpnsoftware.net.ovpn UK Server: http://freevpnsoftware.net/downloads/UK.freevpnsoftware.net.ovpn</p>"},{"location":"app/openvpn/#i-p","title":"I - P","text":""},{"location":"app/openvpn/#ivacy","title":"Ivacy","text":"<p>https://billing.ivacy.com/page/22852</p> <p>Download directly from: https://s3.amazonaws.com/ivacy-apps/openvpn-files/OpenVPN-Configs.zip</p>"},{"location":"app/openvpn/#nordvpn","title":"NordVPN","text":"<p>https://go.nordvpn.net/aff_c?offer_id=15&amp;aff_id=12016&amp;url_id=902</p> <p>Download directly from: https://downloads.nordcdn.com/configs/archives/servers/ovpn.zip</p>"},{"location":"app/openvpn/#pia","title":"PIA","text":"<p>https://www.privateinternetaccess.com/pages/buy-vpn/glinet</p> <p>Download directly from: https://www.privateinternetaccess.com/openvpn/openvpn.zip</p>"},{"location":"app/openvpn/#proxysh","title":"Proxy.sh","text":"<p>https://proxy.sh/panel/aff.php?aff=1458</p> <p>Download according to the service that you have subscribed:</p> <p>For $2 customers:https://proxy.sh/s/openvpn</p> <p>For $5 customers:https://proxy.sh/m/openvpn</p> <p>For $10 customers: https://proxy.sh/l/openvpn</p> <p>For $20 customers:https://proxy.sh/p/openvpn</p>"},{"location":"app/openvpn/#proxpn","title":"Proxpn","text":"<p>https://secure.proxpn.com/?a_aid=5ac450e27df6f</p> <ol> <li>Download the file here: &lt;https://www.proxpn.com/proxpn_mac_source.tar.gz. </li> </ol> <p>Extract the file. From the folder \u201cMaxOSX\u201d, find and open the folder \u201cconfig\u201d and then \u201cssl\u201d. You will see 3 files and 1 folder. Copy these 3 files \u201cca.crt\u201d, \u201cclient.crt\u201d, \u201cclient.key\u201d and paste them into the folder \u201cconfig\u201d.</p> <p></p> <ol> <li>Open \u201cproxpn.ovpn\u201d with text editor and delete the \u201c#\u201d in line 4.</li> </ol> <p></p> <p>You can also change to other services, including:</p> <p>```    uk.proxpn.com - United Kingdom    nl.proxpn.com - Netherlands    sg.proxpn.com - Singapore    seattle.proxpn.com - Seattle    miami.proxpn.com - Miami</p> <p>```</p> <ol> <li>Zip them into one file and upload to the router.</li> </ol> <p></p>"},{"location":"app/openvpn/#purevpn","title":"PureVPN","text":"<p>https://billing.purevpn.com/aff.php?aff=35535</p> <p>Download directly from: https://s3-us-west-1.amazonaws.com/heartbleed/linux/linux-files.zip</p>"},{"location":"app/openvpn/#s-t","title":"S - T","text":""},{"location":"app/openvpn/#safervpn","title":"SaferVPN","text":"<p>https://safervpn.com/?a_aid=563</p> <p>Download directly from: https://www.safervpn.com/support/articles/214036025-What-are-SaferVPN-s-OpenVPN-configuration-files-for-manual-setup-</p> <p></p>"},{"location":"app/openvpn/#strongvpn","title":"StrongVPN","text":"<p>https://strongvpn.com/</p> <ol> <li>Login with your StrongVPN account and then you will be able to see the summary of your VPN account. Click \u201cChange Server\u201d.</li> </ol> <p></p> <ol> <li>Filter the servers by clicking OPEN and choose one of the server from the list.</li> </ol> <p></p> <p></p> <ol> <li>Go back to accounts summary and click Account Setup Instructions.</li> </ol> <p></p> <ol> <li>Click Linux/Max config file.</li> </ol> <p></p>"},{"location":"app/openvpn/#tcpvpn","title":"TCPVPN","text":"<p>https://www.tcpvpn.com/home</p> <ol> <li>You can find different servers on their webpage: https://www.tcpvpn.com/home. Choose your preferred server.</li> </ol> <p></p> <ol> <li>Choose your preferred server location.</li> </ol> <p></p> <ol> <li>You will see the download page of the configuration file. Click Dowload Config (.ovpv).</li> </ol> <p></p>"},{"location":"app/openvpn/#totalvpn","title":"TotalVPN","text":"<p>https://www.totalvpn.com</p> <p>Download directly from: https://pseudio.freshdesk.com/helpdesk/attachments/8005828145</p>"},{"location":"app/openvpn/#v-w","title":"V - W","text":""},{"location":"app/openvpn/#vpnac","title":"VPN.AC","text":"<p>https://vpn.ac/aff.php?aff=1424</p> <p>Download directly from: https://vpn.ac/ovpn/</p> <p></p>"},{"location":"app/openvpn/#vpnbook","title":"VPNBook","text":"<p>https://www.vpnbook.com/</p> <p>The OpenVPN configuration files are available on the website of VPNBook: https://www.vpnbook.com/.  The username and password are listed below the download link.</p> <p></p>"},{"location":"app/openvpn/#vpngate","title":"VPNGate","text":"<p>http://www.vpngate.net/en/</p> <p>The OpenVPN configuration files are listed on the VPN Gate website: http://www.vpngate.net/en/ according to the server location.</p> <ol> <li>Click OpenVPN Config file under the column \u201cOpenVPN\u201d.</li> </ol> <p></p> <ol> <li>You will see the download page.</li> </ol> <p></p>"},{"location":"app/openvpn/#vpn-unlimited","title":"VPN Unlimited","text":"<p>https://www.vpnunlimitedapp.com/en</p> <p>*Information quoted from VPN unlimited official instruction https://www.vpnunlimitedapp.com/en/info/manuals/how-to-manually-create-vpn-conf</p> <p>Start out by logging in to your User Office, press Manage for the VPN Unlimited service, and follow a few simple steps:</p> <ol> <li>Select a device</li> </ol> <p>Pick a device from the list or create a new one. If you are out of free slots, delete an old device or buy extra slots.</p> <p></p> <ol> <li> <p>Choosethe desired server location</p> <p>VPN Unlimited offers a large variety ofservers, namely 400+ in 70+ locations. In this case, let it be Germany.</p> </li> </ol> <p>\u200b</p> <ol> <li>Select the VPN protocol</li> </ol> <p>For the IKEv2 protocol, you will also need to specify your device\u2019s platform.</p> <p></p> <p>\u200b</p> <ol> <li>Create a configuration</li> </ol> <p>Press Generate and you will get all the data required to set up a VPN connection.</p> <p></p>"},{"location":"app/openvpn/#openvpn-compatibilities","title":"OpenVPN Compatibilities","text":"<p>We have checked a number of public vpn service providers and tested the compatibilities. What you need to do is purchase a subscription from them and download the ovpn files.</p> <p>Here is a list of compatible services (v2.20).</p> <p>Note: For service issues, please contact the service provider directly.</p> <ol> <li>Astrill, https://www.astrill.com</li> <li>FinchVPN, https://www.finchvpn.com/</li> <li>Free Vpn Software, http://freevpnsoftware.net/</li> <li>VPNBook, http://www.vpnbook.com/</li> <li>VPNGate, http://www.vpngate.net/</li> <li>VPN Area, https://vpnarea.com</li> <li>NordVPN, https://go.nordvpn.net</li> <li>PIA, https://www.privateinternetaccess.com</li> <li>PureVPN, https://www.purevpn.com/</li> <li>TotalVPN, https://www.totalvpn.com</li> <li>Strong VPN, http://strongvpn.com/</li> <li>Proxy.sh, https://proxy.sh</li> <li>TCPVPN, https://www.tcpvpn.com</li> <li>Vpn.AC, https://vpn.ac</li> <li>Proxpn, https://secure.proxpn.com</li> <li>ExpressVPN, https://www.expressvpn.com/</li> <li>Airvpn, https://airvpn.org</li> <li>CactusVpn, https://www.cactusvpn.com/</li> <li>SaferVPN, https://safervpn.com</li> <li>Ivacy, https://billing.ivacy.com</li> </ol>"},{"location":"app/ss/","title":"Shadowsocks (SS) Setting","text":"<p>===</p> <p>You will learn how to set up shadowsocks server and client on the mini router in this guide. This guide is for DIY purpose and provided as is. To do the following steps, you have to learn how to use SSH and WinSCP to connect to the router first.</p>"},{"location":"app/ss/#setup-ss-server","title":"Setup SS Server","text":"<p>Note: If you want to use your router as Shadowsocks server, you have to have Internet IP address that it can be access everywhere. Your ISP should also allow you to use as servers otherwise it is not accessible worldwide.</p>"},{"location":"app/ss/#1-edit-shadowsocks-serverjson-file","title":"1. Edit Shadowsocks-server.json file","text":"<p>Input the following command to edit the configuration file \"shadowsocks-server.json\u201c </p> <p><code>root@GL-AR750:~# vi /etc/shadowsocks-server.json</code> </p> <p>Then the following file content will display. </p> <p></p> <p>switch to edit mode by press <code>i</code> on your keyboard, then you can change parameter in the configuration file: </p> <ol> <li>Server\uff1a<code>0.0.0.0</code> (default, don't modify)</li> <li>server_port: <code>443</code> (default, 443 is the port for https so it is good for camouflage)</li> <li>password:  your password This is the only thing that you have to set up by yourself.</li> <li>method: <code>rc4-md5</code> is default encrypt method, rc4-md5 is the fastest encryption method. </li> </ol> <p>when you finish all above modification, you can click <code>Esc</code> to exit edit mode, then click <code>:</code>, type<code>wq</code> to <code>write</code> the modification into the configuration files and <code>quit</code>. </p> <p> </p>"},{"location":"app/ss/#2-edit-ss-server-init-file","title":"2. Edit ss-server init file","text":"<p>Type <code>vi /etc/init.d/ss-server</code> in the command line</p> <p> </p> <p>When you open ss-server configure file, you can see the following configuration</p> <p> </p> <p>Press <code>i</code> to switch to edit mode, remove the \"#\" before <code>/usr/bin/ss-server - C /etc/shadowsocks-server.json -u &amp;</code>, then click \"Esc\", to exit edit mode, and type <code>:</code>, type<code>wq</code> to write and quit the configuration file.</p>"},{"location":"app/ss/#3-start-ss-server-services","title":"3. Start SS Server services","text":"<p>Input <code>/etc/init.d/ss-server start</code> , then the ss-serer services start on your router. </p> <p> </p> <p>After you start ss-server, the above information will display. </p> <p>You can also restart the router so that the server is started automatically.</p>"},{"location":"app/ss/#4-open-port-on-the-mini-router","title":"4. Open Port on the mini Router","text":"<p>The port is not opened automatically so you can do this manually.</p> <p> </p> <p></p> <p>A window will pop-up warning you to separately login as a root user into advanced setting. </p> <p>Click \"OK\"</p> <p> Login with your password as a root user.</p> <p> </p> <p>Advance Setting Page Review</p> <p> </p> <p>Click \"Traffic Rules\" Tab to active external port forwarding in your network. </p> <p> </p> <p>Scroll down to the \"Open ports on router\" and input information as following: </p> <p>Name: \"your rule name\"</p> <p>Protocol: <code>TCP+UDP</code></p> <p>External Port: <code>443</code></p> <p>Click \"Add\" after filling relate information and scroll down to the bottom, then click \"save&amp;apply\" </p> <p>Now the port forwarding shall be activated and also the Shadowsocks Server is ready to use. </p>"},{"location":"app/ss/#5-port-forward","title":"5. Port forward","text":"<p>You don't need to setup port forward if you are using the GL router as the main router. </p> <p>But if connect the mini router to your main router as a client, you need to setup port forwarding in your main router.</p> <p>Todo: port forward in other brand of router.</p>"},{"location":"app/ss/#6-check-your-public-ip-address","title":"6. Check your public IP address","text":"<p>You can use any of your PC, laptop, tablet or smartphone to connect your Wi-Fi, then open a web browser (IE, Chrome, Safari, Firefox etc.)</p> <p>Open any IP address checking website, the following websites are for your options: </p> <ol> <li>www.myipaddress.com</li> <li>www.checkip.org </li> <li>https://www.whatismypublicip.com/</li> <li>https://www.showmyipaddress.eu/</li> <li>http://ip.w69b.com/</li> </ol> <p>The webpage will detect and show your public IP address, record it. </p>"},{"location":"app/ss/#7-configuration-is-ready","title":"7. Configuration is ready","text":"<p>Now your ss server info is ready. Please write this down so that you can use to connect to your server. * Server IP: Your public server IP * Encryption: rc4-md5 * Password: your password</p>"},{"location":"app/ss/#using-ss-on-pcs-or-smartphones","title":"Using SS on PCs or Smartphones","text":""},{"location":"app/ss/#1-download-the-clients-of-your-os-platform","title":"1. Download the clients of your OS platform:","text":"<p>https://shadowsocks.org/en/download/clients.html</p>"},{"location":"app/ss/#2-setup-your-client-on-different-devices","title":"2. Setup your client on different devices","text":"<p>Install the Shadowsocks Client on your device (iOS, Android or Windows devices), then setup the following information:</p> <p>Host: your Public IP address (you checked in step 3.2)</p> <p>Port: <code>443</code></p> <p>Password: your password (same as you setup in ss-server)</p> <p>Encryption: <code>rc4-md5</code> (same as you select in ss-server)</p>"},{"location":"app/ss/#3-start-using-private-shadowsocks-services","title":"3. Start using Private Shadowsocks Services","text":"<p>After setup, you just start your shadowsocks on your devices, enjoy it. </p> <p>You can test or check whether it's workable by open a web browser on your smartphone (use 3G/4G data but not WiFi), then go to a IP address checking website to check if the IP address is same as your SS-server public IP address. </p>"},{"location":"app/ss/#shadowsocks-client-setup-on-the-router","title":"Shadowsocks Client Setup on the router","text":""},{"location":"app/ss/#1-setup-ss-server-in-luci","title":"1. Setup SS-Server in Luci","text":"<p>Select \"Shadowsocks\" in the services pull-down menu. </p> <p>Click \"Servers Manage\" tab to setup SS-Client for GL-AR750 Router</p> <p> </p> <p>Click \"Add\", fill the following information: </p> <p>Alias (Optional): Any name you would display</p> <p>Server Address: \"Your Public IP\"</p> <p>Server Port: <code>443</code></p> <p>Password: \"Your Password\"</p> <p>Encrypt Method: <code>RC4-MD5</code></p> <p>Click \"Save&amp;Supply\", </p> <p></p> <p>The following window will displayed, then click \"Save &amp; Apply\"</p> <p> </p>"},{"location":"app/ss/#2-active-ss-server-client-in-gl-router","title":"2. Active SS-Server Client in GL-Router","text":"<p>Then switch to General Settings tab, select \"You defined Alias\" as Main Server in the Transparent Proxy </p> <p></p> <p> </p> <p>After select the right Main Server, then click \"Save &amp; Apply\" at bottom of the General Setting Page</p> <p></p> <p> </p> <p>After All Settings completed, the Transparent Status shall be \"RUNNING\" , enjoy your SS client. </p>"},{"location":"app/ssh/","title":"Using SSH and WinSCP","text":"<p>SSH and WinSCP are basic tools if you want to play more with the mini router.</p> <p>Secure Shell (SSH) is a cryptographic network protocol for operating network services securely over an unsecured network. The best known example application is for remote login to computer systems by users. Sometime you need to have basic tools to ssh to the server (e.g. When you need to set up Shadowsocks server ). This guide is how to SSH login to the GL.iNet routers.</p> <p>WinSCP is the windows tool which runs on top of SSH to connect and edit files on the router. In Linux you can use <code>scp</code>. But WinSCP is the best tool on windows.</p>"},{"location":"app/ssh/#ssh-to-the-router-for-windows-users","title":"SSH to the Router for Windows Users","text":""},{"location":"app/ssh/#1-download-and-install-a-putty","title":"1. Download and install a PuTTY","text":"<p>Go to the following webpage to download the latest PuTTY version\uff1a  </p> <p>https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html</p>"},{"location":"app/ssh/#2-install-putty","title":"2. Install PuTTY","text":""},{"location":"app/ssh/#3-launch-putty","title":"3. Launch PuTTY","text":"<p>Click PuTTY in Start Menu </p> <p> </p> <p>You will see the following Configuration Window: </p> <p> </p> <p>Input Host Name (or IP address) <code>192.168.8.1</code>, Keep Port as default <code>22</code>, select connection type: <code>SSH</code>,</p> <p>Input <code>Your Session</code> in saved sessions, and <code>Save</code> your content.</p> <p> </p> <p>Click <code>Open</code> at the bottom</p> <p> </p> <p>A security alert will pop-up, click <code>Yes</code>.</p> <p>login as\uff1a<code>root</code></p> <p>Then input your admin password </p> <p>Note: You need to use your password which you set up the router at the first time</p> <p> </p> <p>When you see above picture, that means you are now ssh login the router successfully.  </p>"},{"location":"app/ssh/#winscp","title":"WinSCP","text":"<p>WinSCP is a much easier tool to edit files on the router if you are using Windows.</p>"},{"location":"app/ssh/#1-download-winscp","title":"1. Download WinSCP","text":"<p>Download WinSCP from here: https://winscp.net/eng/download.php and install in your Windows.</p>"},{"location":"app/ssh/#2-connect-to-the-router","title":"2. Connect to the router","text":"<p>Run WinSCP, choose <code>SCP</code> as the protocol. If you didn't change the IP of the router it should be <code>192.168.8.1</code>. Please use your real IP of the router. Port number should be <code>22</code>. Please <code>root</code> as the username and input your real password. Then click <code>Login</code> button.</p> <p></p> <p>After login you have full control of the router now.</p> <p>You can choose view, edit or transfer files from/to the router.</p> <p></p> <p>For example, if you want edit firewall config, you can go to /etc/config and find firewall file. Then click your right key of your mouse, then Edit.</p> <p></p> <p>Now you can edit the file content freely. Be careful not to mess up the settings.</p> <p></p>"},{"location":"app/ssh/#ssh-to-the-router-for-linuxmac-user","title":"SSH to the router for Linux/Mac User","text":"<p>The process on Linux and Mac OS are generally the same. Below we use Ubuntu as as example.</p> <p> </p>"},{"location":"app/ssh/#1-launch-terminal","title":"1. Launch Terminal","text":"<p>Click the <code>Terminal</code> icon to launch Terminal. Then, input the following command: </p> <p><code>SSH root@192.168.8.1</code> </p> <p>If you have ever connected to another router, host key verification failed may displayed as follow:</p> <p> </p> <p>If this happens, run the command in the red box. Please copy the exact command which is displayed in your terminal.</p> <p><code>ssh-kengen -f \"~/.ssh/known_hosts\" -R \"192.168.8.1\"</code></p> <p></p>"},{"location":"app/ssh/#2-log-in-router","title":"2. Log In Router","text":"<p>retry the ssh login command: </p> <p><code>ssh root@192.168.8.1</code> </p> <p> </p> <p>Type \"yes\"</p> <p> </p> <p>Input your router password: (you can set this password when you first connect to your router)</p> <p> </p> <p>Finally, you login the router when the above message displayed. </p>"},{"location":"app/tether/","title":"EasyTether","text":"<p>This article is about how to tether your phone to your router by using EasyTether.</p>"},{"location":"app/tether/#intro","title":"Intro","text":"<p>There is several reasons you need to share your smartphone's data  to your router:</p> <ol> <li>Carriers tries to give you a plan with plenty of data but actually you don't need that much.</li> <li>4G speed is quite fast and it beats your home Internet speed. You can use the data for your laptop.</li> <li>Using your phone as a hotspot directly is easy, but you cannot connect too many devices.</li> </ol> <p>It is very easy to share your data to GL.iNet mini router using router's control interfaces, but in some phone and carrier network, they limit sharing data directly, so you can try EasyTether.</p> <p>We will use Android OS and GL mini router to demonstrate the procedure.</p>"},{"location":"app/tether/#stuff-you-need","title":"Stuff you need","text":""},{"location":"app/tether/#equipment","title":"Equipment","text":"<p>1)     Samsung Galaxy S6 with Android OS</p> <p>2)     GL-AR150 mini router (Other models are also OK)</p> <p>3)     4G sim card</p>"},{"location":"app/tether/#software","title":"Software","text":"<p>1)     WinSCP (https://winscp.net/eng/download.php)</p> <p></p> <p>2)     PuTTY (https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html)</p> <p></p> <p>3)     EasyTether driver openssl (http://www.mobile-stream.com/easytether/drivers.html)</p> <p></p> <p>\u200b         Note: For MT300N-V2, please choose LEDE.</p> <p></p> <p>4)     EasyTether Android App (Search in Google Play Store)</p>"},{"location":"app/tether/#procedure","title":"Procedure","text":""},{"location":"app/tether/#preparing-your-router","title":"Preparing your router","text":""},{"location":"app/tether/#1-set-up-the-router","title":"1) Set up the router","text":"<p>Enter 192.168.8.1 in your browser and get into the router web interface. Set the password which will be used for OpenWRT later. Next, update your router to the latest firmware.</p>"},{"location":"app/tether/#2-transfer-ipk-driver-package-to-the-router","title":"2) Transfer IPK driver package to the router","text":"<p>i. Find out the chip of your model (for example Atheros 9531, MediaTek MT7620N, etc) from the website. It is because you have to choose the IPK driver package in the EasyTether driver file base on the chip of your router. (For GL router, you can find the information on our website: www.gl-inet.com, and we will also indicate the position of the IPK driver file for our mini router in section iv.):</p> <p></p> <p>ii. Extract the EasyTether driver file. Open WinSCP, choose SCP as the file protocol and enter the information as the figure shown below:</p> <p></p> <p>You can see the following screen once your connection has been established (left-hand side: Your PC, right-hand side: Your router):</p> <p></p> <p>iii. Go to the main folder by clicking this button.</p> <p></p> <p>You will see the directory tree of the router:</p> <p></p> <p>iv. On the left-hand side (Your PC), find the IPK file of your router in EasyTether driver file you have extracted before. On the right-hand side (Your router), open the tmp folder. Lastly, right click the IPK file and choose upload:</p> <p>Note: For Atheros chip, choose 15.05.1\\ar71xx\\generic. For MediaTeck, choose 15.05.1\\ramips\\mt7620. For other chips, please find the similar file name. MT300N &amp; MT300A: \\15.05.1\\ramips\\mt7620\\ easytether-usb-openssl_0.8.7-1_ramips_24kec.ipk AR150 &amp; AR300M: \\15.05.1\\ar71xx\\generic\\easytether-usb-openssl_0.8.7-1_ar71xx.ipk</p> <p></p>"},{"location":"app/tether/#3-use-ssh-to-install-easytether-driver","title":"3) Use SSH to install EasyTether driver","text":"<p>i. Open PuTTY, enter the IP of your router and other information as the figure shown below, then click Open:</p> <p></p> <p>ii. Login by using your username and password of the router (username: root; password: same as the one you need for entering the web interface):</p> <p>Note: The password you entered will not be showed on the screen.</p> <p></p> <p>iii. You can now update the OpenWRT modules (internet connection required) by typing:</p> <p><code>opkg update</code></p> <p>Hit enter and then it will update automatically.</p> <p>Note: You can skip the update and do it after you have finished tethering.</p> <p>iv. Install the driver by typing the following command and then hit enter:</p> <p><code>opkg install /tmp/filename.ipk</code></p> <p>Note: The filename is the file you uploaded in Procedure A)2.ii.</p> <p>v. Type in the following command and hit enter:</p> <p><code>easytether-usb</code></p> <p>vi. Copy the following command to Putty:</p> <pre><code>cat &lt;&lt; EOF &gt;&gt; /etc/config/network\n\nconfig interface 'wan'\noption ifname 'tap-easytether'\noption proto 'dhcp'\nEOF\n</code></pre> <p>Note:  To paste it into Putty, just right click the black screen and then hit enter.</p> <p>vii. Type in the following command to reboot your router or unplug the power cable of your router. Afterward, plug in the power cable to turn on the router.</p> <p><code>reboot -f</code></p>"},{"location":"app/tether/#preparing-your-smart-phone","title":"Preparing your smart phone","text":""},{"location":"app/tether/#1-enable-the-developer-options","title":"1) Enable the Developer Options","text":"<p>i. Go to Setting -&gt; About Device -&gt; Software info. Hitting the build number several times and it will announce that you have turn on the Developer Options.</p> <p></p> <p>ii. Go to Setting -&gt; Developer Options, turn on the Developer Options and also the USB debugging.</p> <p></p>"},{"location":"app/tether/#2-start-tethering","title":"2) Start tethering","text":"<p>i. Open EasyTether App, tick the USB button, it will show \u201cwaiting for connection from the host\u201d. </p> <p></p> <p>ii. Connect your phone to the router via USB cable. Hit OK to allow the USB debugging.</p> <p></p> <p>iii. Your connection has been established.</p> <p></p> <p>You can now connect your device to the router and access the Internet. However, if you are using the lite version of EasyTether app, you will not able to access the website with https like: https://www.youtube.com since this type of secure communication is being blocked by the lite version.</p>"},{"location":"app/tor/","title":"Using Tor in OpenWrt and GLi Routers","text":"<p>Free Tor firmware for all</p> <p>!!! Note</p> <p>This Tor firmware is totally free and no warranty. Refer to the forum for help!</p> <p>To use the Tor firmware:</p> <ol> <li>Download the correct firmware for your router.</li> <li>Flash it to the router according to this guide, DO NOT reserve settings.</li> </ol> <p>If you brick your router after flashing the wrong firmware or wrong way, please use uboot failsafe to debrick the router. </p>"},{"location":"app/tor/#versions-and-supported-devices","title":"Versions and supported devices","text":"<p>We have several version of Tor firmware and here is the summary.</p>"},{"location":"app/tor/#version-2264","title":"Version 2.264:","text":"<p>We have upgrade Tor firmware for the following models to v2.264 on 2017-11-24.</p> <p><code>AR150, AR300M, AR300M Nand, MT300N, MT300A, MT300N-V2</code></p> <p>Now Tor firmware is generally by imagebuilder and you will be able to install from standard GLi software repositories using opkg. The source code is on github now.</p> <p>To modify and compile the Tor firmware by yourself, please refer to the following imagebuilders.</p> <ul> <li>imagebuilder for AR150, AR300M, MiFi, 6416 based on OpenWrt CC 1505</li> <li>imagebuilder for AR300M Nand based on OpenWrt CC 1505</li> <li>imagebuilder for MT300N, MT300A based on OpenWrt CC 1505</li> <li>imagebuilder for MT300N-V2 based on LEDE 17.01.4</li> </ul>"},{"location":"app/tor/#version-14","title":"Version 1.4:","text":"<p>Only support <code>GL-AR150</code>, <code>GL-AR300M</code>, <code>GL-MT300N</code>, <code>GL-MT300A</code>, which has a <code>switch button</code> controlling whether you traffice should go through Tor or not.</p> <p>Most of these instructions are for version 1.4.</p>"},{"location":"app/tor/#version-13","title":"Version 1.3:","text":"<p>Support <code>GL-AR150</code>,<code>GL.iNet6416</code>, <code>GL-AR300</code>. This firmware create two ssid: OpenWrt and Tor. If you conenct to OpenWrt you will have normal Internet. If you connect to Tor, you will be connect to Tor network. This firmware has a built-in UI based on Domino Pi which you can manage two SSIDs.</p>"},{"location":"app/tor/#version-10-with-luci","title":"Version 1.0 with Luci:","text":"<p>Support <code>GL-MT300A</code> and <code>GL-MT300N</code>. This is the firmware created for MT300A and MT300N with Luci. This firmware create two ssid: OpenWrt and Tor. If you conenct to OpenWrt you will have normal Internet. If you connect to Tor, you will be connect to Tor network. Connection from LAN port will always have Tor. Luci is installed but there is no Domino Pi UI.</p> <p>!!! Note</p> <p>If you have questions about versions, please ask here or in the forum.</p>"},{"location":"app/tor/#download-and-flashing-the-firmware-to-the-device","title":"Download and Flashing the firmware to the device","text":"<p>All the firmwares is available at https://dl.gl-inet.com Find your device name and then \"tor\" folder. Download the newest firmware.</p> <p>You need to refer to this guide for instructions to flash the firmware to the router. </p> Model Tor firmware path Newest Version Note GL.iNet6416 https://dl.gl-inet.com/?model=6416&amp;type=tor 1.3 AR150 https://dl.gl-inet.com/?model=ar150&amp;type=tor 2.264 AR300M https://dl.gl-inet.com/?model=ar300m&amp;type=tor 2.264 .rar is for web upgrade .img is for uboot upgrade AR300M-Nor https://dl.gl-inet.com/?model=ar300m16&amp;type=tor 2.264 MT300N https://dl.gl-inet.com/?model=mt300n&amp;type=tor 2.264 MT300A https://dl.gl-inet.com/?model=mt300a&amp;type=tor 2.264 GL-MiFi https://dl.gl-inet.com/?model=ar150&amp;type=tor 1.3 MiFi don't have a Tor firmware itself. Use AR150 1.3 instead GL-AR300 https://dl.gl-inet.com/?model=ar300&amp;type=tor 1.3 GL-MT750 Not supported yet AR750 Not supported yet"},{"location":"app/tor/#using-the-firmware-ui","title":"Using the firmware UI","text":"<p>After you flash the firmware to your device, when it reboots you need to set up the device at <code>http://192.168.8.1</code>. </p> <p><code>If</code> you need to connect via WiFi, the default wifi password is <code>goodlife</code>.</p> <p>!!! NOTE </p> <p>You need to move the hardware switch to the right side if you want to access the UI. Otherwise you are connecting to the Tor network and will not be able to access the UI. This is for security reasons.</p>"},{"location":"app/tor/#first-time-setup","title":"First time setup","text":"<p>The first time you acess the setting UI, you will be asked to setup a new password immediatelly. Just choose a password and your TimeZone and submit. The device will <code>NOT</code> reboot in firmware 1.4.</p> <p>NOTE: This doesn't change your WiFi password. Change it later.</p> <p></p>"},{"location":"app/tor/#login","title":"Login","text":"<p>You will be asked to login using your <code>NEW</code> password now.</p> <p></p>"},{"location":"app/tor/#homepage","title":"Homepage","text":"<p>The UI is based on Domino Pi. It is quite simple. In your homepage you will be displayed with:</p> <ol> <li>Your network status</li> <li>Tor status. Please note if your tor reconnects this information may not be accurate. </li> <li>Usage of your flash</li> </ol> <p></p>"},{"location":"app/tor/#system-and-firmware-upgrade","title":"System and firmware upgrade","text":"<p>You can click the <code>SYSTEM</code> button from the left sidebar to view the system information, including:</p> <ol> <li>Your router's name</li> <li>Change your password</li> <li>Change your timezone</li> <li>Check your firmware version and upgrade it, from online or mannually.</li> </ol> <p></p> <p>If the firmware on our website is newer, you can click <code>Download</code> and follow the instructions to upgrade the firmware.</p> <p></p>"},{"location":"app/tor/#network-settings","title":"Network Settings","text":"<p>Click the <code>NETWORK</code> button on the left sidebar to view and change the network settings, including:</p> <ol> <li>Internet protocol: <code>dhcp</code>, <code>static</code>, <code>pppoe</code>, <code>3g</code>, <code>tethering</code> or <code>repeater</code>. Tethering only works in Android phones.</li> <li>Wireless parameters: <code>ssid</code>, <code>encryption</code> and <code>passsword</code></li> <li>LAN IP</li> </ol> <p></p> <p>3G 4G settings</p> <p>If you connect a 3G or 4G USB modem, you can set the internet to the modem. You need to choose <code>3G</code> as protocol, choose modem device, usually <code>/dev/ttyUSBx</code>, choose <code>umts</code> or <code>evdo</code>, then input your <code>apn</code> etc. </p> <p></p> <p>Repeater settings. It will search for available ssid automatically. You need to choose ssid and type your password. </p> <p>!!! NOTE </p> <p>This firmware don't have repeater manager as our stock firmware. If you move to another location, your wifi maybe not work and you need to re-setup. Refer to the button action section in this page.</p> <p></p>"},{"location":"app/tor/#luci","title":"Luci","text":"<p>Click the <code>LUCI</code> button on the left sidebar you can have the LUCI UI. You can go back to Domino UI by clicking the <code>Domino Web Panel</code> link on the bottom right corner.</p> <p></p>"},{"location":"app/tor/#reset-button-and-hardware-switch-usage","title":"Reset button and hardware switch usage","text":"<p>Reset button and switch is assigned special functions.</p> <p></p>"},{"location":"app/tor/#reset","title":"Reset","text":"<ol> <li>When you press down the reset button, the middle LED will start to flash once per second. Release your finger if the LED just flashed once (1 seconds), the Tor will try to change a new Exit node.</li> <li>If you keep the button pressed for 3 seconds, it will flash quicker, twice per second. Now release your finger your network will reset, including disable repeater, set lanip back to 192.168.8.1 and enable dhcp. Use this function if your repeater cannot connect which causes your wifi down</li> <li>When you keep holding the reset button for 8 seconds, the middle LED will start to flash even quicker, 4 times per seconds. Release your finger now, your firmware will revert to factory status and reboot.</li> </ol>"},{"location":"app/tor/#switch","title":"Switch","text":"<ol> <li>Left side: You will be connected to <code>Tor network</code>. You cannot access the admin UI.</li> <li>Rigth side: <code>Normal Internet</code>. You will be able to access the admin UI.</li> </ol>"},{"location":"app/wireguard/","title":"WireGuard Setting","text":"<p>The future of VPN technology</p> <p>WireGuard is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPSec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. </p> <p>From firmware V2.27, you can install wireguard easily using <code>opkg</code>.</p> <p>You need to ssh to the router and do the following.</p>"},{"location":"app/wireguard/#install-wireguard","title":"Install Wireguard","text":"<pre><code># opkg update\n# opkg install wireguard\n</code></pre>"},{"location":"app/wireguard/#configuration","title":"Configuration","text":"<p>You can install Wireguard either as Server or client.</p> <p>To configure the mini router as Wireguard server or client, you need to do the following.</p>"},{"location":"app/wireguard/#1-generate-key","title":"1. Generate Key","text":"<p>First you need to generate the privatekey and publickey. The following commands will generate two files for the key.</p> <pre><code># wg genkey &gt; privatekey\n# wg pubkey &lt; privatekey &gt; publickey\n</code></pre>"},{"location":"app/wireguard/#2-network-configuration","title":"2. Network Configuration","text":"<p>You need to edit <code>/etc/config/network</code> to configure client or server. Please use <code>vi</code> or \"winscp\" to edit these files.</p> <p>You need to generate private key and public key in both Server side and Client side.</p> <p>To configure Wireguard Server, add the following content to the end of <code>/etc/config/network</code>.</p> <p>Note: Be sure to replace the private_key and public_key using the real content.</p> <pre><code>config interface 'wg0'                 \n    option proto 'wireguard'                                                \n    option listen_port '55555'                                              \n    list addresses '10.0.0.1/32'         \n    option private_key '......'  # The private key generated by itself just now    \n\nconfig wireguard_wg0\n    option public_key '......' # Client's public key\n    option route_allowed_ips '1'\n    list allowed_ips '10.0.0.0/24'\n</code></pre> <p>To configure Wireguard Client, apply the following content to <code>/etc/config/network</code>.</p> <pre><code>config interface 'wg0'                 \n    option proto 'wireguard'                                                \n    option listen_port '55555'                                              \n    list addresses '10.0.0.2/32'         \n    option private_key '......'  # The private key generated by itself just now        \n\nconfig wireguard_wg0\n    option public_key '......' # Server's public key\n    option route_allowed_ips '1'\n    list allowed_ips '0.0.0.0/0'\n    option endpoint_host '......' # Server's public ip address\n    option endpoint_port '55555'\n    option persistent_keepalive '25'\n</code></pre>"},{"location":"app/wireguard/#3-firewall-configuration","title":"3. Firewall Configuration","text":"<p>Appending the following stuff to firewall configuration <code>/etc/config/firewall</code>.  </p> <pre><code>config rule                 \n    option target 'ACCEPT'\n    option src 'wan'      \n    option proto 'udp'     \n    option name 'Wireguard_VPN'\n    option family 'ipv4'\n    option dest_port '55555'\n\nconfig zone                  \n    option name 'wg-vpn'\n    option input 'ACCEPT'  \n    option forward 'ACCEPT'\n    option output 'ACCEPT'\n    option masq '1'  \n    option device 'wg0'\n\nconfig forwarding 'wg_wan'   \n    option src 'wg-vpn'\n    option dest 'wan'      \n\nconfig forwarding 'wg_lan'\n    option src 'wg-vpn'\n    option dest 'lan'\n\nconfig forwarding        \n    option src 'lan'\n    option dest 'wg-vpn'\n</code></pre>"},{"location":"app/wireguard/#4-restart-network","title":"4. Restart Network","text":"<p>Finally, restart network and firewall, or just reboot your router.</p> <pre><code>/etc/init.d/network restart\n/etc/init.d/firewall restart\n</code></pre>"},{"location":"dev/serial/","title":"Connection UART serial","text":""},{"location":"dev/serial/#connections","title":"Connections","text":"<p>Serial pins are the most used pins for DIY users. You can connect to a USB UART adapter as in the picture.</p> <p></p>"},{"location":"dev/serial/#linux-ubuntumac","title":"Linux (ubuntu)/MAC","text":"<p>In Linux or OSX, when you plug the USB UART adapter to your computer, the driver should already be installed. Check if you have device registered.</p> <pre><code>$ls /dev/ttyUSB*\n/dev/ttyUSB0\n</code></pre> <p>you need to have kermit to connect to serial.</p> <pre><code>$sudo apt-get install gkermit\n</code></pre> <p>Then you need to make the configuration file for kermit: ~/.kermrc. The content should be:</p> <pre><code>set line /dev/ttyUSB0\nset speed 115200\nset carrier-watch off\nset handshake none\nset flow-control none\nrobust\nset file type bin\nset file name lit\nset rec pack 1000\nset send pack 1000\nset window 5\n</code></pre> <p>Now connect to the device using root:</p> <pre><code>$sudo kermit -c\nConnecting to /dev/ttyUSB0, speed 115200\n Escape character: Ctrl-\\ (ASCII 28, FS): enabled\nType the escape character followed by C to get back,\nor followed by ? to see other options.\n----------------------------------------------------\n\n</code></pre> <p>When you have finished, press <code>Ctrl-\\</code> then <code>c</code> to quit kermit.</p>"},{"location":"dev/serial/#windows","title":"Windows","text":"<p>When connecting the USB UART adapter to your computer, you may need to install drivers for them. The drivers can be download here: somewhere.</p> <p>Now you will be able to find the serial COM port (in this example: <code>COM3</code>) in device manger.</p> <p></p> <p>Install a terminal software. putty is recommended. You need to set COM port <code>COM4</code>, speed <code>115200</code> and connection type <code>Serial</code>. Click \"Open\".</p> <p></p> <p>You will be displayed a black window. If you turn on your device now, you will see the console output of the box.</p> <p></p>"},{"location":"dev/serial/#dual-serial-connection-on-domino-pi","title":"Dual Serial connection on Domino Pi","text":"<p>Domino Pi has dual serial connection, please refer to Domino Pi Serial for details.</p>"},{"location":"dev/uboot/","title":"Advance Usage of uboot","text":"<p>Familiarity with uboot is a skill that you should master in order to play with the routers.</p>"},{"location":"dev/uboot/#about-uboot","title":"About uboot","text":"<p>Uboot (universial bootloader) is the bootloader we used on our boards and routers to start OpenWrt Linux. The bootloader heavily depends on the hardware so almost every device requires a different bootloader.</p> <p>To use the bootloader, you have to connect a UART serial connector to your device.</p> <p>Taking our Atheros 9331 boards for example, when powered up, uboot will output the following text:</p> <pre><code>*********************************************\n*   U-Boot 1.1.4  (Sep  9 2014, 09:20:16)   *\n*********************************************\n\nAP121 (AR9331) U-Boot for GL.iNet\n\nDRAM:   64 MB DDR 16-bit\nFLASH:  Winbond W25Q128 (16 MB)\nCLOCKS: 400/400/200/33 MHz (CPU/RAM/AHB/SPI)\n\nLED on during eth initialization...\n\nHit any key to stop autobooting:  0\n</code></pre> <p>Quickly press any key to stop booting.</p>"},{"location":"dev/uboot/#uboot-console","title":"Uboot console","text":"<p>Uboot is very useful to save your router. Here is some useful command in uboot.</p> <p><code>printenv</code> prints out the environment variables</p> <pre><code>uboot&gt; printenv\nbootargs=console=ttyS0,115200 root=31:02 rootfstype=squashfs init=/sbin/init mtdparts=ar7240-nor0:128k(u-boot),1024k(kernel),2816k(rootfs),64k(config),64k(ART)\nbootcmd=bootm 0x9F020000\nbootdelay=1\nbaudrate=115200\nipaddr=192.168.1.1\nserverip=192.168.1.2\nbootfile=\"firmware.bin\"\nloadaddr=0x80800000\nncport=6666\nuboot_addr=0x9F000000\nuboot_name=uboot.bin\nuboot_size=0x10000\nuboot_upg=if ping $serverip; then tftp $loadaddr $uboot_name &amp;&amp; if itest.l $filesize == $uboot_size; then erase $uboot_addr +$filesize &amp;&amp; cp.b $loadaddr $uboot_addr $filesize &amp;&amp; echo OK!; else echo ERROR! Wrong file size!; fi; else ERROR! Server not reachable!; fi\nfirmware_addr=0x9F020000\nfirmware_name=firmware.bin\nfirmware_upg=if ping $serverip; then tftp $loadaddr $firmware_name &amp;&amp; erase $firmware_addr +$filesize &amp;&amp; cp.b $loadaddr $firmware_addr $filesize &amp;&amp; echo OK!; else ERROR! Server not reachable!; fi\nstdin=serial\nstdout=serial\nstderr=serial\nethact=eth0\n\nEnvironment size: 937 bytes\n\nuboot&gt;\n</code></pre> <p><code>md</code> displays data in flash or memory. The following command displays the data in flash from beginning, which is the binary of uboot itself.</p> <pre><code>uboot&gt; md 0x9f000000\n9F000000: 100000FF 00000000 100000FD 00000000    ................\n9F000010: 1000018E 00000000 1000018C 00000000    ................\n9F000020: 1000018A 00000000 10000188 00000000    ................\n9F000030: 10000186 00000000 10000184 00000000    ................\n9F000040: 10000182 00000000 10000180 00000000    ................\n9F000050: 1000017E 00000000 1000017C 00000000    ...~.......|....\n9F000060: 1000017A 00000000 10000178 00000000    ...z.......x....\n9F000070: 10000176 00000000 10000174 00000000    ...v.......t....\n9F000080: 10000172 00000000 10000170 00000000    ...r.......p....\n9F000090: 1000016E 00000000 1000016C 00000000    ...n.......l....\n9F0000A0: 1000016A 00000000 10000168 00000000    ...j.......h....\n9F0000B0: 10000166 00000000 10000164 00000000    ...f.......d....\n9F0000C0: 10000162 00000000 10000160 00000000    ...b.......`....\n9F0000D0: 1000015E 00000000 1000015C 00000000    ...^.......\\....\n9F0000E0: 1000015A 00000000 10000158 00000000    ...Z.......X....\n9F0000F0: 10000156 00000000 10000154 00000000    ...V.......T....\n</code></pre>"},{"location":"dev/uboot/#setting-up-tftp-server","title":"Setting up tftp server","text":""},{"location":"dev/uboot/#ubuntu-linux","title":"Ubuntu Linux","text":"<p>In Ubuntu, you can install tftp using apt</p> <pre><code>sudo apt-get install tftpd-hpa\n</code></pre> <p>The configuration file is <code>/etc/default/tftpd-hpa</code>. Modify its content and change the TFTP_DIRECTORY to your folder which will contains your files.</p> <pre><code>TFTP_USERNAME=\"TFTP\"\nTFTP_DIRECTORY=\"/tftpboot\"\nTFTP_ADDRESS=\"[::]:69\"\nTFTP_OPTIONS=\"--secure\"\n</code></pre> <p>Sometime the service cannot be started because network is not available when it starts. Start the service manually.</p> <pre><code>sudo service tftpd-hpa restart\n</code></pre>"},{"location":"dev/uboot/#windows","title":"Windows","text":"<p>Download service edition of tftpd from http://tftpd32.jounin.net/tftpd32_download.html, then install it.</p> <p> </p> <p>Turn off windows firewall, which is the main reason causing tftpd failed to connect.</p> <p> </p> <p>Run tftpd64_SE Admin, choose your tftpd root (in this example D:\\tftp), choose the \"Server interface\" 192.168.1.2 When clients are connecting to this server, you can see them in the status window.</p> <p> </p>"},{"location":"dev/uboot/#compiling-uboot","title":"Compiling uboot","text":"<p>Each device has a different uboot because it is hardware related.</p>"},{"location":"dev/uboot/#gl-ar150-glinet6416-gl-ar300-gl-ar300m","title":"GL-AR150, GL.iNet6416, GL-AR300, GL-AR300M","text":"<p>For these models you can use Pepe2k's uboot, you can download the source from github.</p> <pre><code>$ git clone https://github.com/pepe2k/u-boot_mod.git\n$ cd u-boot_mod\n</code></pre> <p>To compile the source, you need to have a cross complier toolchain. I am using openwrt toolchain. Make modification to the <code>Makefile</code>.</p> <pre><code>export BUILD_TOPDIR=$(PWD)\nexport STAGING_DIR=$(BUILD_TOPDIR)/tmp\n\n# **Replace the following line with your real path**\nexport TOOLPATH=$(BUILD_TOPDIR)/../openwrt/staging_dir/toolchain-mips_34kc_gcc-4.8-linaro_uClibc-0.9.33.2/\n\nexport PATH:=$(TOOLPATH)/bin:${PATH}\n\nexport MAKECMD=make --silent --no-print-directory ARCH=mips CROSS_COMPILE=mips-openwrt-linux-uclibc-\n\n# boot delay (time to autostart boot command)\nexport CONFIG_BOOTDELAY=1\n</code></pre> <p>Now start to compile the source. For example, for GL.iNet 6416, you can use:</p> <pre><code>make gl-inet\n\n</code></pre> <p>For GL-AR150, you can do this:</p> <pre><code>make 8devices_carambola2\n</code></pre> <p>For GL-AR300 and GL-AR300M, we modified the code a lot so please consult us for details.</p> <p>It should be very quick and finish in minutes. Then you will find <code>uboot_for_gl-inet.bin</code> in <code>bin/</code>.</p>"},{"location":"dev/uboot/#gl-ar150-uboot-modify-as-iot-devices","title":"GL-AR150 uboot modify as IoT devices","text":"<p>If you connect IoT addon to AR150's UART, which talks to AR150 using serial. When the IoT addon send some data during uboot boot, it may stop the booting process so you never have the router alive. You need to modify the uboot a little bit so that it can succesffuly boot. </p> <p>Use this code from github https://github.com/domino-team/uboot-domino</p> <p>In this uboot, you need to type <code>gl</code> quickly during uboot boot to enter uboot console.</p>"},{"location":"dev/uboot/#mt300a-mt300n-mt750","title":"MT300A, MT300N, MT750","text":"<p>MT series routers use a different uboot and different code. Consult us if you need.</p>"},{"location":"dev/uboot/#using-uboot","title":"Using uboot","text":"<p>You can use <code>printenv</code> to display the environment variables in uboot. here are some quick guide of how to use uboot.</p> <p>First you need to set up tftp server as above and put your files in tftp root folder.</p>"},{"location":"dev/uboot/#basic-uboot-command","title":"basic uboot command","text":"<p>Download file to router (AR150, Domino, 6416 as example)</p> <pre><code>tftp 0x81000000 file.bin\n</code></pre> <p>Erase some part of flash</p> <pre><code>erase 0x9f050000 +0x10000\n</code></pre> <p>Write file to flash</p> <pre><code>cp.b 0x81000000 0x9f050000 0x10000\n</code></pre>"},{"location":"dev/uboot/#predefined-script","title":"predefined script","text":"<p>Actually it is not easy to use basic uboot command to do everyting. It is quite risky. Fortunately we have some pre-defined scripts that simplifeis the work.</p> <p>Plase do check using <code>printenv</code> to find out the correct filename that the script trying to download.  For example, if you want to update uboot for AR150, the uboot file should be named as <code>uboot_for_gl-ar150.bin</code> and put in your tftp root folder.</p> <p>Replace uboot</p> <pre><code>run lu\n</code></pre> <p>Update firmware</p> <pre><code>run lf\n</code></pre> <p>Update mac address etc</p> <pre><code>run lc\n</code></pre> <p>Erase uboot env variables Be sure to use the right command for the right model For AR150, Domino AR300, AR300M</p> <pre><code>erase 0x9f040000 +0x10000\nreset\n</code></pre> <p>For 6416</p> <pre><code>erase 0x9f010000 +0x10000\nreset\n</code></pre>"},{"location":"dev/uboot/#uboot-web-ui","title":"Uboot Web UI","text":"<p>Uboot has a webUI so that you can save your device without entering uboot console.</p> <p></p> <p>Check this section  for how to enter uboot web UI using the reset button.</p> <p>If you are in uboot console, you can start the WebUI the following command. This only works for AR series, not MT series.</p> <pre><code>httpd\n</code></pre>"},{"location":"dev/uboot/#ar300m-specific","title":"AR300M Specific","text":"<p>AR300M uses dual flash so in uboot there are a lot of things to deal with dual flash. Please refer to AR300M for more details.</p>"},{"location":"domino/","title":"Getting started with Domino Kits","text":"<p>Note: The Domino Project is depreciated. Only Domino Core is still under production </p>"},{"location":"domino/#faq","title":"FAQ","text":"<p>(1) What is the WiFi password?</p> <pre><code>    It is \"goodlife\".\n</code></pre> <p>(1) How can I connect to the board</p> <pre><code>    You can connect to it via IP address, which is 192.168.8.1 via LAN/WiFi.\n    You can also connect to it via http://domino.local\n</code></pre> <p>(2) Why cannot I connect to http://domino.local?</p> <pre><code>    You need bonjour service. Download it from https://support.apple.com/kb/DL999?locale=en_US for windows.\n</code></pre> <p>**(3) Is it open hardware? **</p> <pre><code>    All the Domino boards are open hardware, which you can find the schematics and layout in [Github](https://github.com/domino-team/domino-hardware).\n    Domino Core is based on Atheros proprietary reference design and is not open hardware.\n\n</code></pre>"},{"location":"domino/#what-is-in-the-whole-kit","title":"What is in the whole kit","text":"<p>Domino is a high-performance 802.11 bgn WiFi hardware platform, with a modular design architecture, unlimited extension capabilities and Arduino compatibility.</p> <p>Domino is designed using <code>Atheros AR9331 WiSoC</code> which is widely used in mini routers and IoT projects.</p> <p></p> <p>The Domino Family has now 11 boards and more extensions will be developed. The tree structure of the boards is as illustrated.</p> <p>At the heart is Domino Core, which can then be extended into Domino Pi and Domino Qi. Domino Pi is a DEV platform for wifi and openwrt, it can be extended with various tile boards. Domino Qi is designed for Arduino compatible. Plug the Domino Qi Mini board onto the Domino Qi baseboard to turn it into a board fully compatible the ubiquitous Arduino Shield form factor.</p>"},{"location":"domino/#domino-core","title":"Domino Core","text":"<p>Domino Core is the heart of Domino.IO. It is designed for makers to easily build their own products based on it. It is compact, <code>only 1.6 square inches with 60 castellated pins (2mm pitch), 3xEthernet, USB2.0, serial port, SPI, I2S, SLIC, SPDIF, JTAG, 9xLEDs and 29 GPIOs</code>. Check the the beautiful pinout diagram below for details.</p> <p></p> <p>Go to the Domino Core hardware for more details of the hardware.</p>"},{"location":"domino/#domino-pi","title":"Domino Pi","text":"<p>Domino Pi is designed both as a Domino Core development board and as an extension. You can develop your own board based on the Domino Pi. See the pinout diagram below. We have seven useful tile boards available, providing easy to use building blocks, enabling you to extend the Pi board as you wish.</p> <p>Domino Pi is with newest <code>OpenWrt</code> BB1407 and CC1505 firmware.</p> <p></p> <p>For more details on how to use the Pi, please check the below sections: -  Domino Pi Baseboard Section  -  Single Ethernet board Section  -  Dual Ethernet board Section  -  3xUSB+MicroSD Combo Section  -  I2S board Section  -  SPI/JTAG Section  -  LED Section </p>"},{"location":"domino/#domino-qi","title":"Domino Qi","text":"<p>Domino Qi Mini is a small board that is a fully compatible derivative of the original <code>Arduino Y\u00f9n</code>, crammed into a tiny form factor. It is a low-cost, compact OpenWRT-based 802.11 bgn WiFi board based on Qualcomm/Atheros AR9331 WiSoC and on the Atmel <code>ATMega32U4 MCU</code>. Communication between the two chips is achieved using Arduino Y\u00f9n-compatible Bridge hardware and software library. Plug the Domino Qi Mini board onto the Domino Qi baseboard to turn it into a board <code>fully compatible with the ubiquitous Arduino Shield form factor</code> and benefit from hundreds of already existing shields for rapid prototyping.</p> <p></p> <p>For more details on how to use the Qi, please check the below sections: -  Domino Qi section  -  Qi Baseboard section  -  Qi Mini section </p>"},{"location":"domino/#where-to-get-help","title":"Where to get help","text":"<p>First you need to read this documentation. We will try our best to make the documentation complete and detailed.</p> <p>Second, we will have our own forum open later, when you will be ask questions there.</p> <p>Third, go the existing community of OpenWrt if you want to explore the embedded Linux system, and go to Arduino if you want to explore the features related to Arduino.</p>"},{"location":"domino/common/weaved/","title":"Weaved","text":"<p>Using Weaved Cloud</p>"},{"location":"domino/common/weaved/#install-weaved","title":"Install Weaved","text":""},{"location":"domino/hardware/core/","title":"Domino Core","text":""},{"location":"domino/hardware/core/#pinout-diagram","title":"Pinout diagram","text":"<p>Domino Core is based on a Atheros AP121 design and protected by a NDA with Qualcomm. So we cannot publish the design. However, we have made comprehensive pinout diagram of the Core board. </p> <p></p> <p>Domino Core Pinout PDF</p>"},{"location":"domino/hardware/core/#domino-di-base-board","title":"Domino Di base board","text":"<p>Domino Di is a bare PCB for playing with Domino Core. You can solder the Domino Core onto the Di board as illustrated in this picture.</p> <p></p> <p>The design of Domino Di in github: https://github.com/domino-team/domino-hardware. Please check out the schematic, layout and BOM. </p>"},{"location":"domino/hardware/core/#the-components-required","title":"The components required","text":"<p>To make it work, here is the components that you should solder onto the Di board:</p> <p></p> <p>The minimum requirements is to solder the <code>AMS1117</code> for power and zero ohm <code>R6</code>.</p> <p></p> <p>It is better to solder <code>C3</code> and <code>C7</code> to make it works better.</p> <p>To make the PCB antenna work, solder 0ohm <code>R8</code> and <code>R10</code>. Otherwise, connect a uFL antenna.</p> <p>To use LED and toggle buttons, solder the other required components. </p>"},{"location":"domino/pi/","title":"Domino Pi","text":"<p>Getting started</p>"},{"location":"domino/pi/#domino-pi-headers","title":"Domino Pi headers","text":"<p>Domino Pi has a Domino Core mounted onboard. When you first get your Pi, you need to learn about its headers.</p> <p></p> <p>When placed as shown in the picture, you can divide the header into a left part and a right part. The left part contains 18pins on each North and South connectors and the right part contains 10 pins from both North and South connectors. </p> <p>The left part can be used to mount Ethernet boards (including Single Ethernet and Dual Ethernet boards) and I2S board. While the right part can be used to mount USB boards (including Single USB and 3xUSB boards) and JTAG/SPI boards. Refer to the hardware section to make sure you mount the right extension boards in the right headers, otherwise you may break your Domino.</p> <p>For a more detailed marking of the headers, refer to this diagram.</p> <p></p> <p></p>"},{"location":"domino/pi/#assembly","title":"Assembly","text":"<p>Put the Ethernet and USB tile boards aligned with Domino Pi as shown, then plug the tile boards to the headers. </p> <p></p> <p>Press the tile board firmly to the Domino Pi board. You can do the same for the Dual Ethernet board and the 3xUSB+MicroSD board.</p> <p></p> <p>For the LED board, just plug in the LED board as in this picture. Please make sure the LED board is plugged into the correct position by checking the header markings on the bottom of Domino Pi.</p> <p></p>"},{"location":"domino/pi/#connections","title":"Connections","text":"<p>Connect your Domino with an Ethernet cable to your router. Then connect power to the MicroUSB connector on Domino Pi board and your board will be powered up!</p> <p></p>"},{"location":"domino/pi/#using-domino-pi","title":"Using Domino Pi","text":"<p>When you see the LEDS (WAN, WLAN) light up, your Domino has booted up. Now using a browser (use Firefox or Chrome) to visit http://domino.local/, you will be able to access the WebUi of Domino.</p> <p>Please visit this page to get more details on how to use the Domino Pi WebUi.</p>"},{"location":"domino/pi/audio/","title":"Playing Audio and music","text":""},{"location":"domino/pi/audio/#the-hardware-setup","title":"The hardware Setup","text":"<p>The I2S tile board connects to the left part of of Domino Pi, Thus you cannot connect Ethernet tiles without stackable headers. You can also connect to the Internet via WiFi without Ethernet.</p> <p></p>"},{"location":"domino/pi/audio/#the-software","title":"The software","text":"<p>The audio module is built into the Domino Pi firmware, but not loaded automatically, to load the module, use <code>insmod glzt_i2s</code>.</p> <pre><code>insmod glzt_i2s\n</code></pre> <p>To enable auto-load of the audio module, build a entry in <code>/etc/modules.d/</code></p> <pre><code>echo glzt_i2s &gt; /etc/modules.d/glzt_i2s\n</code></pre> <p>To play music, you can use <code>mpg123</code>.</p> <p>E.g. to play music in your usb mounted on <code>/mnt/sda1</code>, just do:</p> <pre><code>mpg123 /mnt/sda1/my_music.mp3\n</code></pre> <p>You can play Internet radio the same way:</p> <pre><code>mpg123 http://your-internet-radio.com/your-stream\n</code></pre> <p></p>"},{"location":"domino/pi/compile/","title":"Compile the firmware","text":"<p>It is not difficult to compile your own OpenWrt firmware for Domino. Follow these instructions step by step.</p>"},{"location":"domino/pi/compile/#build-a-clean-openwrt-firmware-for-domino","title":"Build a clean Openwrt firmware for Domino","text":"<p>OpenWrt is a Linux distribution for embedded devices. You can find all the details of OpenWrt from http://openwrt.org To compile an OpenWrt firmware for Domino, first you need to have a Linux environment. We will use Ubuntu as an example in this guide.</p>"},{"location":"domino/pi/compile/#1-build-environment","title":"1. Build environment","text":"<p>First install all the necessary packages:</p> <pre><code>sudo apt-get update \nsudo apt-get install subversion build-essential git-core libncurses5-dev zlib1g-dev gawk flex quilt \nlibssl-dev xsltproc libxml-parser-perl mercurial bzr ecj cvs unzip \n</code></pre>"},{"location":"domino/pi/compile/#2-configure-quilt","title":"2. Configure quilt","text":"<p>Please check http://wiki.openwrt.org/doc/devel/patches to understand how OpenWrt deal with patches. We will need to apply a patch to OpenWrt.</p> <pre><code>cat &gt; ~/.quiltrc &lt;&lt;EOF\nQUILT_DIFF_ARGS=\"--no-timestamps --no-index -p ab --color=auto\"\nQUILT_REFRESH_ARGS=\"--no-timestamps --no-index -p ab\"\nQUILT_PATCH_OPTS=\"--unified\"\nQUILT_DIFF_OPTS=\"-p\"\nEDITOR=\"nano\"\nEOF\n</code></pre>"},{"location":"domino/pi/compile/#3-download-openwrt-1407","title":"3. Download OpenWrt 1407","text":"<p>For domino-Pi, we use OpenWrt release BB1407.</p> <pre><code>git clone git://git.openwrt.org/14.07/openwrt.git openwrt-domino\ncd openwrt-domino\n./scripts/feeds update -a\n./scripts/feeds install -a\n</code></pre>"},{"location":"domino/pi/compile/#3-alternative-download-openwrt-cc1505","title":"3 (alternative). Download OpenWrt CC1505","text":"<p>We upgrade the code to CC1505.</p> <pre><code>https://github.com/domino-team/openwrt-cc.git\ncd openwrt-cc\nmake menuconfig\n</code></pre> <p>You will find Domino in the \"Target Profile\". You can skip step 4 because the pateches are already installed.</p>"},{"location":"domino/pi/compile/#4-download-domino-sources-and-apply-domino-target-patch","title":"4. Download Domino sources and apply Domino Target Patch","text":"<p>If you are using OpenWrt BB1407 version, please apply the patches according to these instructions.</p> <p>Download the Domino Target Patch from here: https://github.com/domino-team/domino-firmware/tree/master/domino-pi/openwrt-patch  Put the patch files in openwrt-domino/patches.</p> <pre><code>cd ..\ngit clone https://github.com/domino-team/domino-firmware.git \ncd openwrt-domino\nmkdir patches\ncp ../domino-firmware/domino-pi/openwrt/patches/domino.patch ./patches\ncp ../domino-firmware/domino-pi/openwrt/patches/series ./patches\nquilt push -a\nrm ./tmp/*\n./scripts/feeds install -a\n</code></pre> <p>Note that if the '-f' option is not specified, when make menuconfig is run, the Domino target will not appear.</p>"},{"location":"domino/pi/compile/#5-make-menuconfig","title":"5. Make menuconfig","text":"<p>Now you need to configure OpenWrt by choosing the correct target.</p> <pre><code>make menuconfig\n</code></pre> <p></p> <p>Select \"Domino Wifi for things\" in the \"Target Profile\". Exit and save the config file. Now you are ready to build the firmware.</p> <pre><code>make \n</code></pre> <p>If you want to use multithread, run <code>make -j x</code>, x is a number.</p> <pre><code>make -j 5\n</code></pre> <p>You will probably encounter some errors and the compiling process will exit without showing you the details. You can run <code>make V=s</code> to show the details. Sometime it may be just a problem of downloading resources.</p> <pre><code>make V=s\n</code></pre> <p>After make finishes, you will find the firmware in the bin folder. The correct one is: <code>openwrt-ar71xx-generic-domino-squashfs-sysupgrade.bin</code></p> <pre><code>ls bin/ar71xx\n</code></pre> <p>Please note that you have built only a very basic firmware without a web UI, and with WiFi disabled. You might get flustrated that it doesn't work as you expected. Now read on to compile more packages.</p>"},{"location":"domino/pi/compile/#built-the-stock-firmware-with-domino-configurations","title":"Built the stock firmware with Domino configurations","text":""},{"location":"domino/pi/compile/#move-domino-sources-to-openwrt-tree","title":"Move domino sources to OpenWrt tree","text":"<p>If you want to build exactly the same firmware as pre-installed in Domino Pi, please copy the sources to openwrt tree, including athplay, domino-pi, iis, mpg123. Put these packages in openwrt-domino/package/domino</p> <pre><code>cd openwrt-domino\nmkdir package/domino\ncp -a ../domino-firmware/domino-pi/audio/* package/domino\ncp -a ../domino-firmware/domino-pi/domino-pi package/domino\ncp -a ../domino-firmware/domino-pi/mpg123 package/domino\nmkdir files\ncp -a ../domino-firmware/domino-pi//root-files/* files\n</code></pre> <p></p> <p>Move the files in \"root-files\" to the \"files\" folder of openwrt. This is a quick and easy way to compile your default config to openwrt.</p> <p></p>"},{"location":"domino/pi/compile/#make-menuconfig","title":"Make menuconfig","text":"<p>Type <code>make menuconfig</code>, select 'domino' on the main menu (midway down), then select the Domino specific packages. These must be selected as compiled-in (*), not modules (M).</p> <p></p> <p>Select the packages by pressing the space key until it shows a '*' before the package name.</p> <p>You will find \"domino-athplay\", \"domino-pi\" and \"kmod-domino-iis\" in \"Domino\" category. Select them all by pressing space key until it shows a * before the package. If you don't want audio, remove \"domino-athplay\" and \"kmod-domino-iis\" from the selction. If you want to play music, you also need to select \"Utilities-&gt;mpg123\". </p> <p>That is all. You don't need to select any other packages because they are already selected automaticly.</p>"},{"location":"domino/pi/compile/#compile","title":"compile","text":"<p>Now compile the firmware by typing <code>make</code></p> <pre><code>make\n</code></pre>"},{"location":"domino/pi/dual_eth/","title":"Domino Dual Ethernet Tile Board","text":""},{"location":"domino/pi/dual_eth/#overview","title":"Overview","text":"<p>When connected to the Domino Pi board, the Domino Dual Ethernet Tile adds 2x standard RJ45 IEEE 802.3 10/100MB Ethernet ports:</p> <ul> <li>1x LAN on port P0, DCE wiring (1=R+, 2=R-, 3=T+, 6=T-), lower RJ45 Jack</li> <li>1x WAN on port P4, DTE wiring (1=T+, 2=T-, 3=R+, 6=R-), upper RJ45 Jack</li> <li>UART connectors</li> </ul> <p>The Domino Dual Ethernet Tile also includes the equivalent of the Domino LED Tile:</p> <ul> <li>1x Blue LED: WLAN (LED0)</li> <li>1x White LED: USB (LED1)</li> <li>4x Green LEDs: LAN1-4 (LED2-5)</li> <li>1x Red LED: WAN (LED6)</li> <li>1x Orange LED: SYS (LED7)</li> <li>1x Yellow LED: WPS (LED8)</li> </ul> <p>The Domino Dual Ethernet Tile connects as a West-side Tile.</p> <p>It is only compatible with the Domino Pi board, as the Domino Qi Mini does not feature 2x Ethernet ports.</p> <p> </p> <pre><code>Photo is not the newest. There is UART connector on the board now!\n</code></pre>"},{"location":"domino/pi/dual_eth/#specifications","title":"Specifications","text":"<p>Weight  21 g Dimensions  45.72 x 33.02 x 35 mm</p>"},{"location":"domino/pi/dual_eth/#pinout","title":"Pinout","text":"<p>Pinout in PDF</p>"},{"location":"domino/pi/flashing/","title":"flashing and debricking","text":"<p>Domino Pi is designed for you to play with OpenWrt and embedded systems. Before you continue to change your firmware, read the Working with serial section first.</p>"},{"location":"domino/pi/flashing/#firmware-compatibilities","title":"Firmware compatibilities","text":"<p>Domino is compatible with some common OpenWrt firmwares for the Atheros 9331 SoC, including the firmware for GL-AR150, Carambola2 and Dragino. Due to size and configuration of the bootloader, Domino cannot boot firmware for TP-Link 703n, 720n without changing the bootloader.</p>"},{"location":"domino/pi/flashing/#flashing-firmware-using-the-webui","title":"Flashing firmware using the WebUI","text":"<p>We encourage you to flash your firmware using the WebUI provided. When viewing in \"System\" page, you will see the UI for you to upgrade/flash your firmware.  </p> <p>If you want to upload your firmware in your disk, just click \"Choose File\" and upload the firmware. After upload you will be prompted with an option to \"keep settings\" or not. Then click \"UPGRADE\" to upgrade your firmware. You can also upgrade your firmware by clicking the \"Download\" button next to \"Newest version\". </p> <p></p> <p>ATTENTION: In firmware version 1.0 and 1.1, there is a bug for Chrome. Please use Firefox or IE for upgrading your firmware.</p>"},{"location":"domino/pi/flashing/#flashing-using-uboot-webui","title":"Flashing using uboot WebUI","text":"<p>In case you accediently brick your Domino firmware, you can debrick using uboot. You don't have to use serial if you want to use the uboot WebUI.</p>"},{"location":"domino/pi/flashing/#step-1-connection","title":"Step 1: Connection","text":"<p>Connect an Ethernet cable from your computer to Domino directly. Set your computer's IP address to <code>192.168.1.2</code> manually. If you are using a Dual-Ethernet tile board, only connect one Ethernet cable to your Domino kit. </p> <p></p>"},{"location":"domino/pi/flashing/#step-2-activate-the-uboot-webui","title":"Step 2: Activate the uboot WebUI","text":"<p>Press and hold the reset button while powering on your Domino. You will see the Blue LED for Wireless flashing. After it flashes 5 times, the WAN led will light up. Now release your finger. The WAN LED will flash quite quickly for some times.</p>"},{"location":"domino/pi/flashing/#step-3-flash-firmware","title":"Step 3: Flash firmware","text":"<p>Now use a web broser and go to http://192.168.1.1. You will then have the uboot WebUI as below.</p> <p></p> <p>Now choose your firmware and click \"Update firmware\". Wait about 3 minutes to allow your board to reset and boot.</p> <p>ATTENTION: DON'T turn off the power during this process.</p> <p>ATTENTION: Uboot wont check the validity of the firmware. Even if you flashed a wrong firmware, it will still write it to flash.</p>"},{"location":"domino/pi/flashing/#flashing-using-uboot-console","title":"Flashing using uboot console","text":"<p>If your firmware still cannot boot up, try this advanced option. To use uboot console, please refer to Working with serial first. </p> <p>ATTENTION: It is better to use a separate USB-UART adapter to use the uboot console. uboot boots very quickly, so you might not have time to enter the uboot console if you are using an integrated USB-UART bridge. Some systems, especially Windows, are slow to load the correct driver for you.</p>"},{"location":"domino/pi/flashing/#enter-the-uboot-console","title":"Enter the uboot console","text":"<p>In your serial term, press <code>anykey</code> when uboot boot and stop it in its console. Some version of uboot will ask your to type <code>gl</code> to enter the console.</p> <p></p>"},{"location":"domino/pi/flashing/#uboot-environment-variables","title":"Uboot environment variables","text":"<p>Type <code>printenv</code> to display the environment variables. Don't modify these variables if you are not sure what you are doing.</p> <p></p>"},{"location":"domino/pi/flashing/#set-up-a-tftp-server","title":"Set up a tftp server","text":"<p>You need to set up a tftp server. In Windows, we recommend <code>tftpd32</code> or <code>tftpd64</code> according to your system architecture. Download them from junin.net.</p> <p>In Linux, we recommend <code>tftpd-hpa</code>. Just search google for a guide to use this tool. </p>"},{"location":"domino/pi/flashing/#update-using-the-stored-procedure","title":"Update using the stored procedure","text":"<p>You can update your firmware or uboot very simply using the procedure stored as environment variables.</p> <p>To update the firmware, name your firmware file as <code>openwrt-domino.bin</code> and put it in your tftp server. Then run <code>run lf</code>. Just wait until this process finish.</p> <p>To update the uboot, name your uboot as <code>uboot_for_domino.bin</code> and run <code>run lu</code> to change the uboot itself.</p> <p>ATTENTION: Changing uboot can be very dangerous. Do this at your own risk.</p>"},{"location":"domino/pi/flashing/#update-using-uboot-command","title":"Update using uboot command","text":"<p>You can also update the firmware and everything else using the uboot command.</p> <p>To update the firmware, use the following command. Replace with your own filename for your firmware.</p> <pre><code>tftp 0x81000000 openwrt-domino.bin\nerase 0x9f050000 +$filesize\ncp.b 0x81000000 0x9f050000 $filesize\n</code></pre> <p>To update the uboot, use the following command. Replace the filename as your real name.</p> <pre><code>tftp 0x81000000 uboot_for_domino.bin\nerase 0x9f000000 0x40000\ncp.b 0x81000000 0x9f000000 0x40000\n</code></pre> <p>ATTENTION: Changing uboot can be very dangerous. Do this at your own risk.</p>"},{"location":"domino/pi/flashing/#debrick-using-spi-tile-board","title":"Debrick using SPI tile board","text":"<p>Please refer to JTAG/SPI tile board for debricking.</p>"},{"location":"domino/pi/i2s/","title":"Domino I2S Audio Tile Board","text":""},{"location":"domino/pi/i2s/#overview","title":"Overview","text":"<p>When connected to the Domino Pi board, the Domino I2S Tile adds audio capabilities and ports:</p> <ul> <li>Wolfson WM8978 Stereo CODEC with Speaker Driver (Datasheet), faturing:</li> <li>DAC SNR 98dB, THD -84dB ('A' weighted @ 48kHz)</li> <li>ADC SNR 95dB, THD -84dB ('A' weighted @ 48kHz)</li> <li>On-chip Headphone Driver with 'capless' option</li> <li>40mW per channel into 16ohm / 3.3V SPKVDD</li> <li>1W output power into 8ohm BTL speaker / 5V SPKVDD</li> <li>Capable of driving piezo speakers</li> <li>Stereo speaker drive configuration</li> <li>Stereo Differential or mono microphone Interfaces</li> <li>Programmable preamp gain</li> <li>Psuedo differential inputs with common mode rejection</li> <li>Programmable ALC / Noise Gate in ADC path</li> <li>Low-noise bias supplied for electret microphones</li> <li>Enhanced 3-D function for improved stereo separation</li> <li>Digital playback limiter</li> <li>5-band Equaliser (record or playback)</li> <li>Programmable ADC High Pass Filter (wind noise reduction)</li> <li>Programmable ADC Notch Filter</li> <li>Aux inputs for stereo analogue input signals or 'beep'</li> <li>On-chip PLL supporting 12, 13, 19.2MHz and other clocks</li> <li>Support for 8, 11.025, 12, 16, 22.05, 24, 32, 44.1 and 48kHz sample rates</li> <li>Low power, low voltage - 2.5V to 3.6V (digital: 1.71V to 3.6V)</li> <li>5x5mm 32-lead QFN package</li> <li>3.5 mm Stereo Audio Jack (Tip: Left / Ring: Right / Sleeve: Ground): LINE OUT / HEADPHONE OUT</li> <li>SPDIF Optical Transmitter: DIGITAL AUDIO OUT</li> <li>On 2x edge header pins: Stereo SPEAKER OUT</li> <li>Integrated ? 4.5 mm Mono Electret Microphone, also available on edge header pins</li> <li>On 2x Pin Header: Stereo AUX IN</li> </ul> <p>The Domino Dual Ethernet Tile connects as a West-side Tile.</p> <p>It is only compatible with the Domino Pi board, as the Domino Qi Mini does not feature I2S interface.</p> <p> </p>"},{"location":"domino/pi/i2s/#specifications","title":"Specifications","text":"Specs Value Weight 10 g Dimensions 50.8 x 33.02 x 24 mm Audio CODEC Wolfson WM8978 LINE OUT / HEADPHONE OUT 3.5 mm Stereo Audio Jack DIGITAL AUDIO OUT SPDIF Optical Transmitter SPEAKER OUT 2x Edge Header Pins Microphone Integrated ? 45 mm Mono Electret Microphone,  2x Edge Header Pins AUX IN 2x Header Pins"},{"location":"domino/pi/i2s/#pinout","title":"Pinout","text":"<p>Pinout in PDF</p>"},{"location":"domino/pi/i2s/#playing-audio-and-music-using-i2s-board","title":"Playing Audio and Music Using I2S board","text":"<p>Play Audio and Musci</p>"},{"location":"domino/pi/led/","title":"Domino LED Tile Board","text":""},{"location":"domino/pi/led/#overview","title":"Overview","text":"<p>When connected to the Domino Pi board, the Domino LED Tile adds the following LEDs:</p> <ul> <li>1x Blue LED: WLAN (LED0)</li> <li>1x White LED: USB (LED1)</li> <li>4x Green LEDs: LAN1-4 (LED2-5)</li> <li>1x Red LED: WAN (LED6)</li> <li>1x Orange LED: SYS (LED7)</li> <li>1x Yellow LEd: WPS (LED8)</li> <li>The Domino LED Tile connects as a West-side Tile.</li> </ul> <p>It is only compatible with the Domino Pi board, as the Domino Qi Mini does not feature LED GPIOs, but instead integrates the standard Arduino Yun<sup>TM</sup> LEDs.</p> <p> </p>"},{"location":"domino/pi/led/#specifications","title":"Specifications","text":"<p>Weight  1 g Dimensions  27.94 x 7.62 x 12 mm</p>"},{"location":"domino/pi/led/#pinout","title":"Pinout","text":"<p>Pinout in PDF</p>"},{"location":"domino/pi/pi/","title":"Domino Pi Hardware","text":""},{"location":"domino/pi/pi/#overview","title":"Overview","text":"<p>Domino Pi is a low-cost, compact OpenWRT-based 802.11 bgn WiFi development board based on Qualcomm/Atheros AR9331 WiSoC.</p> <p></p> <p>The Domino Pi board extends the Domino Core module by adding the following features:</p> <ul> <li>Integrated USB&lt;-&gt;UART bridge for serial port (default to U-Boot / Linux console)</li> <li>Integrated +5 V input / +3.3 V output, 2 A DC/DC power supply</li> <li>Integrated 2.4 GHz WiFi PCB antenna</li> <li>Integrated Jumpstart push button</li> <li>Integrated Power and Wireless LEDs</li> <li>Integrated 2x 28 pin, 2.54 mm pitch headers</li> </ul> <p>The dual edge headers provide:</p> <ul> <li>USB 2.0 (host or slave)</li> <li>2 x 10/100MB Ethernet ports</li> <li>SPI (MOSI, MISO, CLK, CS)</li> <li>I2S (CK, WS, SD, MCK, MICIN)</li> <li>SLIC</li> <li>SPDIF Output</li> <li>JTAG (TMS, TCK, TDI, TDO)</li> <li>9x LEDs (also used for bootstrap settings)</li> <li>Up to 29 x GPIOs (multiplexed with other functions above)</li> </ul>"},{"location":"domino/pi/pi/#specifications","title":"Specifications","text":"Specs Value Weight 16 g Dimensions 71.12 x 33.02 x 10 mm CPU AR9331, 400 MHz Memory 16 MB SPI Flash and 64 MB DDR2 RAM RF Frequency 2.4 GHz band Max Output Power +21 dBm Wireless Standards 802.11 bgn Antenna (port) U.FL connector, built-in PCB antenna Power Supply 5 V, max. power consumption 6.5 W Firmware U-Boot, OpenWRT Available Interfaces USB host/slave, 2 x Ethernet, SPI, I2S, SLIC, SPDIF, JTAG, 9x LEDs, 29 x GPIOs User Interfaces USB UART bridge, Jumpstart push button, Power Led, Wireless LED"},{"location":"domino/pi/pi/#pinout-diagram","title":"Pinout Diagram","text":"<p>Get in PDF format.</p> <p>Domino Pi Pinout</p>"},{"location":"domino/pi/serial/","title":"Working with serial","text":"<p>It is important to have a USB-UART adapter and work with serial if you want to play with Domino. With serial, you will be able to access the console and have full control of the OpenWrt system and bootloader.</p>"},{"location":"domino/pi/serial/#usb-uart-adapter","title":"USB-UART adapter","text":"<p>Domino Pi has a built-in USB-UART bridge. So you have two serial connectors, one is on the MicroUSB power connector and the other is on the Ethernet board, which is connected to the Domino Core. </p> <p></p> <p>Just connect Domino Pi to your computer. It will be powered up and at the same time you will have access to the serial.</p> <p>Sometime you need to connect directly to the Domino Core UART, and you will need a USB-UART adapter.</p> <p>ATTENTION: If you are connecting with an external USB-UART adapter, be sure connect to the correct pins:</p> <p></p>"},{"location":"domino/pi/serial/#in-windows","title":"In Windows","text":"<p>If you want to use connector 1, Windows will automatically detect the USB to UART Bridge and install drivers. </p> <p></p> <p>Find its com number. (Which is <code>COM36</code> in my case.) </p> <p>If you use your own USB UART adapter, you will have a com number also. (Which is <code>COM4</code> in my case.)</p> <p>You need a serial term, we recommend PuTTY and RealTerm. Download them for free.</p> <p>Launch PuTTY and input <code>COM36</code> as the \"Serial line\", <code>115200</code> as speed, check the Connection type as <code>Serial</code>, then click <code>Open</code>. </p> <p></p> <p>Then press <code>Enter</code> you will enter OpenWrt.</p> <p></p> <p>You can also connect to <code>COM4</code> using the same way.</p> <p></p> <p>At the same time, you can also connect to the serial using Connector 2. Execute realterm, fill the currect Baudrate <code>115200</code>, port number <code>36</code> and click <code>Open</code>. </p> <p></p> <p>ATTENTION Only one term can connect to one serial device at the same time.</p>"},{"location":"domino/pi/serial/#working-with-two-serials","title":"Working with two serials","text":"<p>In the above instructions, we used two terms connected to two serial ports: PuTTY connecting to Connector 2 (original uart of Domino Core) and RealTerm connecting to Connector 1 (the build in USB-UART bridge). Once you connect RealTerm, you will find that in PuTTY you cannot input anything, but you can input from RealTerm. </p> <p></p> <p>You can enable input in PuTTY by clearing <code>RTS</code> in RealTerm. Go to the \"Pins\" page and click \"Clear\" in RTS section. Now you will be able to input in PuTTY, but not in RealTerm. To enable input in RealTerm again, click \"Set\" in RTS section.</p>"},{"location":"domino/pi/serial/#in-linux-ubuntu","title":"In Linux (Ubuntu)","text":"<p>We only test in Ubuntu. For any other distro, if you have any questions, pls discuss in the community.</p> <p>In Ubuntu, when connecting Domino Pi to your computer's USB directly, it will be identified as <code>/dev/ttyUSB*</code>, e.g. <code>/dev/ttyUSB0</code> if you only have USB serial device.</p>"},{"location":"domino/pi/serial/#ckermit","title":"ckermit","text":"<p>Download ckermit from http://www.columbia.edu/~kermit/ckermit.html#download or use <code>sudo apt-get install ckermit</code> to install it.</p> <pre><code>$ sudo apt-get install ckermit\n</code></pre> <p>make a file with name <code>.kermrc</code> in your home directory. The content is as following:</p> <pre><code>#cat ~/.kermrc\n\nset line /dev/ttyUSB0\nset speed 115200\nset carrier-watch off\nset handshake none\nset flow-control none\nrobust\nset file type bin\nset file name lit\nset rec pack 1000\nset send pack 1000\nset window 5\n</code></pre> <p>Now execute kermit <code>sudo kermit -c</code> to get access to the console of your Domino Pi.</p> <pre><code>sudo kermit -c\n</code></pre> <p>If you have multiple serial devices, create one configure file for each device, and then put the file name as parameters. For example, for ttyUSB1, use <code>sudo kermit ~/.kermrc_ttyUSB1 -c</code>. </p> <pre><code>sudo kermit ~/.kermrc_ttyUSB1 -c\n</code></pre> <p>The escape key for kermit is <code>Ctrl</code>+<code>\\</code> followed by <code>c</code>.</p>"},{"location":"domino/pi/serial/#other-tools","title":"Other tools","text":"<p>You can also use <code>screen</code> or <code>cu</code> to access the serial.</p>"},{"location":"domino/pi/single_eth/","title":"Domino Single Eth Tile Board","text":""},{"location":"domino/pi/single_eth/#introduction","title":"Introduction","text":"<p>When connected to the Domino Pi or Domino Qi Mini board, the Domino Single Ethernet Tile adds 1x standard RJ45 IEEE 802.3 10/100MB Ethernet port:</p> <ul> <li>1x WAN on port P4, DTE wiring (1=T+, 2=T-, 3=R+, 6=R-)</li> <li>UART connectors</li> </ul> <p>The Domino Single Ethernet Tile also includes the equivalent of the Domino LED Tile:</p> <ul> <li>1x Blue LED: WLAN (LED0)</li> <li>1x White LED: USB (LED1)</li> <li>4x Green LEDs: LAN1-4 (LED2-5)</li> <li>1x Red LED: WAN (LED6)</li> <li>1x Orange LED: SYS (LED7)</li> <li>1x Yellow LED: WPS (LED8)</li> <li>The Domino Single Ethernet Tile connects as a West-side Tile.</li> </ul> <p>It is compatible with the Domino Pi and Domino Qi Mini boards.</p> <p> </p> <pre><code>**The picture is not the newest! The newest is with serial connectors**\n</code></pre>"},{"location":"domino/pi/single_eth/#specifications","title":"Specifications","text":"<p>Weight  11 g Dimensions  45.72 x 33.02 x 25 mm</p>"},{"location":"domino/pi/single_eth/#pinout","title":"Pinout","text":"<p>Pinout in PDF</p>"},{"location":"domino/pi/single_usb/","title":"Domino Single USB Tile Board","text":""},{"location":"domino/pi/single_usb/#overview","title":"Overview","text":"<p>When connected to the Domino Pi or Domino Qi Mini board, the Domino Single USB Tile adds 1x standard USB 2.0 USB Type A Master or Slave port. </p> <p>Features:</p> <ul> <li>Break out the USB pins to physical USB-A</li> <li>USB power controlled by GPIO6</li> </ul> <p>If you USB has no power using your own firmware, most of time, it is because of GPIO6 is set to Low. Set it to high to enable USB power</p> <pre><code>    # Enable the USB power by using GPIO6\n\n    echo \"6\" &gt; /sys/class/gpio/export\n    echo \"out\" &gt; /sys/class/gpio/6/direction\n    echo \"1\" &gt; /sys/class/gpio/gpio6/value\n</code></pre> <p>The Domino Single USB Tile connects as an East-side Tile.</p> <p>It is compatible with the Domino Pi and Domino Qi Mini boards.</p> <p> </p>"},{"location":"domino/pi/single_usb/#specifications","title":"Specifications","text":"<p>Weight 4 g  Dimensions 5.72 x 33.02 x 25 mm</p>"},{"location":"domino/pi/spi/","title":"SPI/JTAG tile","text":""},{"location":"domino/pi/spi/#mounting","title":"Mounting","text":"<p>When using the SPI/JTAG tile board, it is important to mount the tile board in the correct direction. The jtag pins should face outside, as shown in the picture below.</p> <p></p> <p>When connecting the flash adapter, connect it as shown in the picture below. The flash should be mounted on the bottom part of the adapter. Be sure the flash is mounted in the connector properly by chekcing that the dot on the flash chip is in the correct corner.</p> <p></p> <p>ATTENTION: If you mount the flash reversed, it will burn in seconds when powered on.</p>"},{"location":"domino/pi/spi/#debrick-using-spi-tile-board","title":"Debrick using SPI tile board","text":"<p>If you have a problem with uboot and it cannot boot up totally, the only way to fix this is to use the SPI/JTAG tile board. Refer to the following link for info. https://www.kickstarter.com/projects/706167548/dominoio-an-open-hardware-wifi-platform-for-things/posts/1200391</p>"},{"location":"domino/pi/spi_jtag/","title":"Domino SPI/JTAG Tile Board","text":""},{"location":"domino/pi/spi_jtag/#overview","title":"Overview","text":"<p>When connected to the Domino Pi board, the Domino SPI/JTAG Tile adds several interesting features for developers:</p> <ul> <li>Of 25 wide-body SOP8 IC Test Socket / programmer adapter OTS-20 (8X2) 1.27-01 dual position SOP8 adapter SOP8 to DIP8 200mil</li> <li>SOP8 IC footprint</li> <li>Standard MIPS/JTAG 2 x 7 R/A shrouded header</li> <li>RESET push button</li> <li>Jumper to control Flash Write Protection with AR9331 GPIO24</li> <li>The Domino SPI/JTAG Tile connects as an East-side Tile.</li> </ul> <p>It is compatible with the Domino Pi board only.</p> <p> </p>"},{"location":"domino/pi/spi_jtag/#specifications","title":"Specifications","text":"<p>Weight  14 g Dimensions  25.4 x 33.02 x 37 mm</p>"},{"location":"domino/pi/spi_jtag/#debricking-domino-pi-using-spijtag-tile-board","title":"Debricking Domino Pi using SPI/JTAG tile board","text":"<p>Debricking guidance</p>"},{"location":"domino/pi/usb_combo/","title":"Domino 3USB+MicroSD Combo Title Board","text":""},{"location":"domino/pi/usb_combo/#overview","title":"Overview","text":"<p>When connected to the Domino Pi or Domino Qi Mini board, the Domino 3x USB / MicroSD Combo Tile adds:</p> <ul> <li>1x USB-A R/A Horizontal Socket for USB 2.0 Low / Full / High-speed Host Port</li> <li>2x USB 2.0 Low / Full / High-speed Host Ports on standard PC USB front-panel-type 2x5 Header</li> <li>1x MicroSD Card Slot (Push to Lock / Push to Unlock)</li> <li>USB power control by GPIO6 </li> </ul> <p>If you USB has no power using your own firmware, most of time, it is because of GPIO6 is set to Low. Set it to high to enable USB power</p> <pre><code>    # Enable the USB power by using GPIO6\n\n    echo \"6\" &gt; /sys/class/gpio/export\n    echo \"out\" &gt; /sys/class/gpio/6/direction\n    echo \"1\" &gt; /sys/class/gpio/gpio6/value\n</code></pre> <p>The Domino 3x USB / MicroSD Combo Tile connects as an East-side Tile.</p> <p>It is compatible with the Domino Pi and Domino Qi Mini boards.</p> <p> </p>"},{"location":"domino/pi/usb_combo/#specifications","title":"Specifications","text":"<p>Weight 7 g  Dimensions 34.54 x 33.02 x 15 mm</p>"},{"location":"domino/pi/using/","title":"Using Domino Pi","text":""},{"location":"domino/pi/using/#led-and-buttons","title":"LED and buttons","text":"<p>Domino Pi board has two LEDs. The red LED is for Power, which should be always on when powered. The blue LED is for wireless (or WLAN), which will indicate the status of the wireless connection by default, but it can be configured to indicate any other status of the system. </p> <p></p> <p>Beside the WLAN LED, there is a button which connects to <code>GPIO 11</code>. This button can be reconfigured by scripts, but the default action is: </p> <ol> <li>With a short press, it will toggle the status of WiFi, i.e. it will turn on/off the WiFi; </li> <li>With a long press (10 seconds), it will revert the system to factory status.</li> </ol> <p>The ethernet boards have more LEDs. For example, as shown in the photo below, the WAN led and WLAN LED is on.</p> <p></p>"},{"location":"domino/pi/using/#first-time-use","title":"First time use","text":"<p>When Domino power up for the first time, it will connect to the Internet using DHCP and emit a wifi single with ssid: <code>Domino-xxx</code>, where <code>xxx</code> is the last three characters of your MAC address. </p> <p>The default WiFi password is: <code>goodlife</code>.</p> <p>The first time you use Domino, it is suggested that you connect to it directly using WiFi or connect it directly to your router. Then using a browser (firefox or chrome) to visit <code>http://domino.local</code> to get access to it.</p> <p></p> <p>If you are using Windows and cannot find <code>domino.local</code>, you may need to install <code>Bounjor</code> from Apple. Download it from https://support.apple.com/kb/DL999?locale=en_US </p> <p>The first time you use your Domino, it will ask you to setup the name and a password. Then reboot your device.</p> <p></p> <p>ATTENTION: The password is only for the embedded Linux system, not your WiFi. If you want to change your wifi password, you can logon to the system and change it later.</p> <p>ATTENTION: If you change your board's name, for example to \"myboard\", after reboot you will need to use http://myboard.local to find it.</p> <p>Hint: If you don't want to have a reboot, just go to luci (the url is: http://domino.local/cgi-bin/luci) and set up a password. You will be prompted with a login page.</p>"},{"location":"domino/pi/using/#the-homepage","title":"The Homepage","text":"<p>After login, you will have a clean homepage, displaying the status of network and USB devices. You have links on the left side to vairous pages of Domino WebUI.</p> <p>You will also have pie chart displaying your flash usuage.</p> <p></p>"},{"location":"domino/pi/using/#network-settings","title":"Network settings","text":""},{"location":"domino/pi/using/#connect-to-the-internet","title":"Connect to the Internet","text":"<p>The default protocol for WAN is <code>DHCP</code>, but you can change it according to your needs. You have 5 choices, including <code>DHCP, Static, PPPoE, 3G, Tethering and WiFi</code>. The <code>3g</code> protocol lets you connect Domino to the internet via a USB 3g/4g modem. The <code>Tethering</code> protocol lets you connect Domino to the internet via an Android phone. The <code>WiFi</code> choice lets you connect your Domino to an AP (e.g. router) wirelessly.</p> <p></p>"},{"location":"domino/pi/using/#change-wifi-and-lan-settings","title":"Change Wifi and LAN settings","text":"<p>In the same page, you can also change WiFi and LAN settings. You can <code>enable/disable</code> Wifi, change the ssid, security or password. </p> <p>ATTENTION Turning on WiFi (AP) only affects Domino's AP signal without affecting its connection to your router as a client.</p> <p>ATTENTION The default LAN IP of Domino Pi is <code>192.168.1.1</code>. If this is your router's IP as well, please change it to another addres, e.g. <code>192.168.240.1</code>, in order that it can connect to the internet succefully.</p>"},{"location":"domino/pi/using/#working-with-usb-devices","title":"Working with USB devices","text":"<p>You can connect USB devices to Domino with the USB tiles. </p> <p></p> <p>If you connect a USB disk, you will find a pie chart showing its storage usage. By clicking the pi chart, you will be able to list the contents of the storage device.</p> <p>If you connect a USB webcam, you will have a live video streaming charge in your homepage. Please consult the \"Live video streaming\" page for more details.</p>"},{"location":"domino/pi/using/#code-editor","title":"Code editor","text":"<p>By clicking the \"Editor\" link on the homepage or clicking directly on the flash or USB devices on the homepage, you will be able to list the contents of flash or USB storage and edit the contents of their files.</p> <p></p> <p>You can view or edit individual files directly. </p> <p>ATTENTION When editing files, your data is not encrypted.</p> <p>ATTENTION Your Domino board has to be connected to the internet in order to use the web editor, because the browser needs to load some big scripts to display the code nicely!</p>"},{"location":"domino/pi/using/#luci","title":"LUCI","text":"<p>By clicking the Luci link on homepage, you will go to the LUCI webui, which is the default webui of openwrt. The webui is for advanced users and we will not explain in detail here.</p> <p></p> <p>At the bottom right corner of the LUCI webui, you will find a link \"Domino Web Panel\". Click it to go back to the Domino UI.</p>"},{"location":"domino/pi/using/#securities","title":"Securities","text":"<ol> <li> <p>When you change your password, settings, etc, your data is encrypted when trasfered over the network.</p> </li> <li> <p>Wen you view or modify files using the code editor, the data is NOT encrypted. </p> </li> <li> <p>When you use a webcam, the default setting does NOT have a password, i.e. it is OPEN TO THE INTERNET. Everyone will be able to see you if there is no firewall. Please refer to the \"Live video streaming\" are for more info.</p> </li> </ol>"},{"location":"domino/qi/","title":"Getting started with Domino Qi","text":""},{"location":"domino/qi/#qi-mini-interfaces","title":"Qi Mini Interfaces","text":"<p>The heart of Domino Qi is Qi Mini board, which integrates Domino Core and Atmega32U4 MCU. The functions of Qi Mini is compatible with Arduino Yun.</p> <p></p> <p>On Qi Mini, there are four LEDs:</p> <ul> <li>Blue LED for Wireless: when radio (ap or client) is on, it will light up.</li> <li> White LED for USB: when USB is connected, it will light up. When connected to Qi baseboard, it will always on because on Qi baseboard there is a USB hub.</li> <li>Green LED for Power: it will always on when power is connected.</li> <li>Yellow LED for WAN : it will light up when Ethernet cable is connected.</li> </ul> <p></p> <p>On Qi Mini, there are three buttons:</p> <ul> <li>9331 Reset: when pressed, it will perform a hard reset of the 9331 CPU. The OpenWrt Linux will reboot immediately.</li> <li>MCU Reset: when pressed, it will reset the AVR MCU immediately.</li> <li>User Button: This button is configured using script. The default actions are: when pressed for 5 seconds and more, it will reset WiFi mode, encryption, password, LAN IP to factory status; when pressed for 30 seconds and more, it will reset the whole system to factory default. e.g. all your change will be erased.</li> </ul>"},{"location":"domino/qi/#qi-assembly","title":"Qi Assembly","text":"<p>The Qi Mini board use short headers. Put it onto Qi baseboard and press them firmly. On Qi baseboard, the MicroUSB is only for power and we didn't mount it by default. You can just power the kit up using the connector on Qi Mino.</p> <p></p> <p>To disassemble the kit, you need a little force, as the headers are too tight. Use a pencil or plastic pen, inser into the gap between Qi Mini and the baseboard, apply a little force to lever it up. Don't be too brutal to damage the boards. Don't use a metal tools. </p> <p></p>"},{"location":"domino/qi/#using-qi","title":"Using Qi","text":"<p>When using Domino Qi, you can connect the MicroUSB to you computer and connect Cable to your router. When Domino Qi is powered up, it will broadcast with SSID <code>Domino-xxx</code>, where <code>xxx</code> is the last three letters of your MAC address. If you don't use Qi baseboard, you can connect to Qi Mini via WiFi. </p> <p>The default WiFi password is <code>goodlife</code>.</p> <p></p>"},{"location":"domino/qi/#connect-to-the-web-ui","title":"Connect to the Web UI","text":"<p>When your Domino is up, you will find it using <code>http://domino.local</code> in your browser. </p> <p>If you cannot find domino.local in your windows, you need to install <code>Bounjor</code> from Apple. Download it from https://support.apple.com/kb/DL999?locale=en_US</p> <p></p>"},{"location":"domino/qi/#first-time-settings","title":"First time settings","text":"<p>The first time you use your Domino, it will ask you to setup the name and a password. Then reboot your device.</p> <p></p> <p>ATTENTION: The password is only for the embedded Linux system, not your wifi. If you want to change your wifi password, logon the system and change it later.ATTENTION: If you change your boards name, for example to \u201cmyboard\u201d, after reboot, you will need to use http://myboard.local to find it.</p> <p>Hint: If you don\u2019t want to have a reboot, just go to luci (the url is: http://domino.local/cgi-bin/luci) and set up a password, you will be able to prompt with a login page.</p>"},{"location":"domino/qi/#the-homepage","title":"The homepage","text":"<p>After login, you will have a clean homepage, displaying the status of network and USB devices. You have links on the left side to vairous pages of Domino WebUI.</p> <p></p> <p>You will also have pie chart displaying your flash usuage. On the bottom, you can upload your sketch to your AVR. </p>"},{"location":"domino/qi/#network-settings","title":"Network settings","text":"<p>Connect to the Internet</p> <p></p> <p>The default protocol for WAN is DHCP, but you can change it according to your needs. You have 5 choices, including DHCP, Static, PPPoE, 3G, Tethering and WiFi. The 3g protocol let you connect domino to the Internet via a USB 3g/4g modem. The Tethering protocol let you connect Domino to the Internet via an Android phone. The WiFi choice let you connect your Domino to an AP (e.g. router) wirelessly.</p> <p>Change Wifi and LAN settings</p> <p>In the same page, you can also change WiFi and LAN settings. You can <code>enable/disable</code> Wifi, change the ssid, security or password. </p> <p>ATTENTION: Turning on WiFi (AP) only affect Domino\u2019s ap signal without affecting its connection to your router as client.</p> <p>ATTENTION: The default LAN IP of Domino Pi is <code>192.168.240.1</code>. If this is your router\u2019s IP as well, please change it to another submit e.g. 192.168.44.1 in order that it can connect to the Internet succefully.</p>"},{"location":"domino/qi/#working-with-usb-devices","title":"Working with USB devices","text":"<p>You can connect USB devices to Domino via the USB tiles. </p> <p></p> <p>If you connect a USB disk, you will find a pie chart showing its storage usage. By clicking the pi chart, you will be able to list the content of storage.</p> <p>If you connect a USB webcam, you will have a live video streaming charge in your homepage. Please consult the \"Live video streaming\" page for more details.</p>"},{"location":"domino/qi/#code-editor","title":"Code editor","text":"<p>By clicking the \"Editor\" link on or clicking directly the flash or USB devices on the homepage, you will be able to list the contents of flash or USB storage and edit the content of the file.</p> <p></p> <p>You can view or edit individual files directly. </p> <p>ATTENTION When editing files, your data is not encrypted.</p> <p>ATTENTION Your Domino board have to be connected to the Internet in order to use the web editor, because the browser needs to load some big scripts to make a nice view of the code!</p>"},{"location":"domino/qi/#luci","title":"LUCI","text":"<p>By clicking the Luci link on homepage, you will go to the LUCI webui, which is the default webui of openwrt. The webui is for advanced users and we will not explain in detail here.</p> <p></p> <p>At the right bottom corner of the LUCI webui, you will find a link \"Domino Web Panel\", click it and go back to the Domino UI.</p>"},{"location":"domino/qi/#securities","title":"Securities","text":"<ol> <li> <p>When you change your password, settings etc. your data is encrypted when trasfer on the network.</p> </li> <li> <p>Wen you view or modify files using the code editor, data are NOT encrypted. </p> </li> <li> <p>When you use webcam, the default setting does NOT have a password, i.e. it is OPEN TO THE INTERNET. Everyone will be able to see you if there is no firewall. Please refer to the \"Live video streaming\" are for more info.</p> </li> </ol>"},{"location":"domino/qi/#using-arduino","title":"Using Arduino","text":"<p>Domino Qi uses code from Arduino, so it identify itself as Arduino Yun. When connected the MicroUSB to your computer, you will find the device in your system.</p> <p></p> <p>.</p> <p>When you use Arduino IDE, you can also find your Domino board automatically. You will find two devices, one is via USB, i.e. COM37. Another is via WiFi. You can select either one and download sketch to your Domino Directly.</p> <p></p>"},{"location":"domino/qi/arduino-yun/","title":"Qi - Using Arduino or Linino Firmware","text":"<p>Using Arduino Yun Firmware</p> <p>===========================</p> <p>You can use the original Arduino Yun firmware or use Linino Yun firmware. Be sure to flash the Serial hex to your AVR first.</p> <p>Domino Qi uboot can support Arduino and Linino firmware, so you don't risk bricking your device when you try. But please do this carefully and make sure every step works succefully.</p> <p>The original Arduino Yun firmware is here: https://www.arduino.cc/en/Main/Software#toc8</p> <p>The original Linino Yun firmware is here: http://download.linino.org/linino_distro/lininoIO/latest/ </p> <p>Using Arduino Yun Firmware</p>"},{"location":"domino/qi/arduino-yun/#method-1-doing-this-in-uboot-console","title":"Method 1: Doing this in uboot console","text":"<p>Connect to the serial according to these steps.</p> <p>Press the \"Reset\" button to reset the OpenWrt system. Then quickly type <code>gl</code> to enter the uboot console.</p> <p>Change env: <code>setenv bootcmd bootm 0x9fea0000</code></p> <pre><code>setenv bootcmd bootm 0x9fea0000\nsaveenv\n</code></pre> <p>Setup your tftp server and download the kernel, rootfs to your Domino Qi.</p> <p>Kernel</p> <pre><code>tftp 0x80060000 openwrt-ar71xx-generic-yun-16M-kernel.bin;\nerase 0x9fea0000 +0x140000;\ncp.b $fileaddr 0x9fea0000 $filesize;\n</code></pre> <p>rootfs</p> <pre><code>tftp 0x80060000 openwrt-ar71xx-generic-yun-16M-rootfs-squashfs.bin;\nerase 0x9f050000 +0xE50000;\ncp.b $fileaddr 0x9f050000 $filesize;\n</code></pre> <p>Now type <code>reset</code> to reset your board and you will have the original Yun firmware running.</p>"},{"location":"domino/qi/arduino-yun/#method-2-doing-this-in-domino-qi-system","title":"Method 2: Doing this in Domino Qi system","text":"<p>After you boot your Domino Qi system, ssh to your system.</p> <p>check if you can access the environment variables using <code>fw_printenv</code>.</p> <p>If you get the following error message, you have use uboot console to flash the firmware.</p> <pre><code>root@domino:/# fw_printenv \nWarning: Bad CRC, using default environment\nbootcmd=bootp; setenv bootargs root=/dev/nfs nfsroot=${serverip}:${rootpath} ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off; bootm\nbootdelay=5\nbaudrate=115200\n\nDon't continue if you get the above message.\n\n</code></pre> <p>If you don't have a <code>Bad CRC</code> message, continue with the following:</p> <pre><code>fw_setenv bootcmd \"bootm 0x9fea0000\"\nsysupgrade -v -n --force /mnt/sda1/openwrt-ar71xx-generic-yun-16M-squashfs-sysupgrade.bin \n\n</code></pre> <p>If you have a <code>Bad CRC</code> message, don't do this, as this will cause your board not bootable. </p>"},{"location":"domino/qi/arduino-yun/#using-linino-firmware","title":"Using Linino Firmware","text":"<p>You can also use the Linino firmware for Arduino Yun. Linino has two branch, one is master, one is LininoIO.</p> <p>For master branch, download from http://download.linino.org/linino_distro/master/latest/, the file names are:</p> <ul> <li>openwrt-ar71xx-generic-linino-yun-16M-250k-kernel.bin</li> <li>openwrt-ar71xx-generic-linino-yun-16M-250k-rootfs-squashfs.bin</li> <li>openwrt-ar71xx-generic-linino-yun-16M-250k-squashfs-sysupgrade.bin</li> </ul> <p>For LininoIO branch, download from http://download.linino.org/linino_distro/lininoIO/latest/, the file names are:</p> <ul> <li>lininoIO-generic-linino-yun-kernel.bin</li> <li>lininoIO-generic-linino-yun-rootfs-squashfs.bin</li> <li>lininoIO-generic-linino-yun-squashfs-sysupgrade.bin</li> </ul>"},{"location":"domino/qi/arduino-yun/#method-1-doing-this-in-uboot-console_1","title":"Method 1: Doing this in uboot console","text":"<p>Connect to the serial according to these steps.</p> <p>Press the \"Reset\" button to reset the OpenWrt system. Then quickly type <code>gl</code> to enter the uboot console.</p> <p>Change env:</p> <pre><code>setenv bootcmd bootm 0x9fea0000\nsetenv bootargs console=ttyATH0,250000 board=linino-yun mem=64M rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env)ro,14656k(rootfs),1280k(kernel),64k(nvram),64k(art),15936k@0x50000(firmware)\nsaveenv\n</code></pre> <p>Setup your tftp server and download the kernel, rootfs to your Domino Qi.</p> <p>For Linino firmware</p> <p>Kernel</p> <pre><code>tftp 0x80060000 openwrt-ar71xx-generic-linino-yun-16M-250k-kernel.bin;\nerase 0x9fea0000 +0x140000;\ncp.b $fileaddr 0x9fea0000 $filesize;\n\n</code></pre> <p>rootfs</p> <pre><code>tftp 0x80060000 openwrt-ar71xx-generic-linino-yun-16M-250k-rootfs-squashfs.bin;\nerase 0x9f050000 +0xE50000;\ncp.b $fileaddr 0x9f050000 $filesize;\n</code></pre> <p>For LininoIO firmware</p> <p>Kernel</p> <pre><code>tftp 0x80060000 lininoIO-generic-linino-yun-kernel.bin;\nerase 0x9fea0000 +0x140000;\ncp.b $fileaddr 0x9fea0000 $filesize;\n\n</code></pre> <p>rootfs</p> <pre><code>tftp 0x80060000 lininoIO-generic-linino-yun-rootfs-squashfs.bin;\nerase 0x9f050000 +0xE50000;\ncp.b $fileaddr 0x9f050000 $filesize;\n</code></pre> <p>Finally use <code>reset</code> to reset your board and boot the firmware.</p>"},{"location":"domino/qi/arduino-yun/#method-2-doing-this-in-domino-qi-system_1","title":"Method 2: Doing this in Domino Qi system","text":"<p>If you have already boot the Domino Qi system, check if you can access the environment variables using <code>fw_printenv</code>.</p> <p>If you get the following error message, you have to use uboot console to flash the firmware.</p> <pre><code>root@domino:/# fw_printenv \nWarning: Bad CRC, using default environment\nbootcmd=bootp; setenv bootargs root=/dev/nfs nfsroot=${serverip}:${rootpath} ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off; bootm\nbootdelay=5\nbaudrate=115200\n\n</code></pre> <p>If you do NOT have a <code>Bad CRC</code> message, continue with the following. Otherwise use method 1.</p> <pre><code>fw_setenv bootcmd \"bootm 0x9fea0000\"\nfw_setenv bootargs \"console=ttyATH0,250000 board=linino-yun mem=64M rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env)ro,14656k(rootfs),1280k(kernel),64k(nvram),64k(art),15936k@0x50000(firmware)\"\n</code></pre> <p>To upgrade to Linino firmware:</p> <pre><code>cd /tmp\nwget http://download.linino.org/linino_distro/master/latest/openwrt-ar71xx-generic-linino-yun-16M-250k-squashfs-sysupgrade.bin\nsysupgrade -v -n --force openwrt-ar71xx-generic-linino-yun-16M-250k-squashfs-sysupgrade.bin\n</code></pre> <p>To upgrade to LininoIO firmware:</p> <pre><code>cd /tmp\nwget http://download.linino.org/linino_distro/lininoIO/latest/lininoIO-generic-linino-yun-squashfs-sysupgrade.bin\nsysupgrade -v -n --force lininoIO-generic-linino-yun-squashfs-sysupgrade.bin\n</code></pre> <p>Wait until the process finish and reset your board.</p>"},{"location":"domino/qi/base/","title":"Domino Qi Baseboard","text":""},{"location":"domino/qi/base/#overview","title":"Overview","text":"<p>The Domino Qi Base Board is an adapter board for the Domino Mini Board.</p> <p>Plug the Domino Qi Mini Board onto this Domino Qi Base Board in order to be fully compatible with the ubiquitous ArduinoTM Shield form factor and benefit from hundreds of already existing shields for rapid prototyping.</p> <p> </p> <p>The Domino Qi Base Board extends the Domino Qi Mini Board by adding the following features:</p> <ul> <li>3x USB 2.0 Low / Full / High-speed USB Hub + MicroSD Card Reader Combo Chip AU6350-MGL (Datasheet)</li> <li>1x IEEE 802.3 10/100 Ethernet Port</li> <li>1x USB-A R/A Vertical Socket for USB 2.0 Low / Full / High-speed Host Port</li> <li>2x USB 2.0 Low / Full / High-speed Host Ports on standard PC USB front-panel-type 2x5 Header</li> <li>1x MicroSD Card Slot (Push to Lock / Push to Unlock)</li> <li>1x MicroUSB connector for +5V power supply, featuring an onboard +3.3V/2A switching DC/DC converter</li> </ul> <p>The Domino Qi Base Board provides the standard ArduinoTM shield connectors:</p> <ul> <li>ATMega32U4 ICSP (MOSI, MISO, SCK, SS)</li> <li>ATMega32U4 RESET pin</li> <li>ATMega32U4 UART (TXD1, RXD1)</li> <li>ATMega32U4 I2C (SDA, SCL)</li> <li>ATMega32U4 digital (+ PWM) pins (D4-D6 and IO8-13)</li> <li>ATmega Analog pins (A0-5 + AREF)</li> <li>Arduino Yun<sup>TM</sup>-compatible pins (HANDSHAKE, GP6)</li> <li>+5V, +3.3V and GND power supply pins</li> </ul> <p>Note: Domino is not connected to ArduinoTM and the Domino Qi Mini product is a derivative. Any technical support must be directed to us, not to Arduino<sup>TM</sup>.</p>"},{"location":"domino/qi/base/#specifications","title":"Specifications","text":"Specs Value Weight 20 g Dimensions 68.58 x 53.34 x 17 mm Power Supply 5 V, max. power consumption 6.5 W Available Interfaces 3x USB host, 1 x Ethernet, ICSP, ATMega32U4 Digital pins (+ PWM), ATmega32U4 Analog pins, Arduino Yun HANDSHAKE + GP6, Power Supply pins"},{"location":"domino/qi/base/#pinout","title":"Pinout","text":"<p>Qi Pinout in PDF</p>"},{"location":"domino/qi/mini/","title":"Domino Qi Mini","text":""},{"location":"domino/qi/mini/#overview","title":"Overview","text":"<p>Domino Qi Mini is a small-sized board that is a fully compatible derivative of the original Arduino Yun<sup>TM</sup>, crammed into a tiny form factor.</p> <p>Plug it onto the Domino Qi baseboard in order to be fully compatible with the ubiquitous ArduinoTM Shield form factor and benefit from hundreds of already existing shields for rapid prototyping.</p> <p>Domino Qi Mini is a low-cost, compact OpenWRT-based 802.11 bgn WiFi board based on Qualcomm/Atheros AR9331 WiSoC and on the Atmel ATMega32U4 MCU. Communication between the 2 chips is achieved using an Arduino Yun<sup>TM</sup>-compatible Bridge hardware and software library.</p> <p> </p> <p>The Domino Qi Mini board extends the Domino Core module by adding the following features:</p> <ul> <li>Atmel ATMega32U4 MCU</li> <li>Arduino Yun<sup>TM</sup>-compatible Bridge</li> <li>+5 V input / +3.3 V output, 2 A DC/DC power supply</li> <li>2.4 GHz WiFi PCB antenna</li> <li>32U4 Reset, WLAN Reset and User push buttons</li> <li>Power, Wireless, WAN and USB LEDs</li> <li>2x 22 pin, 2.54 mm pitch headers</li> </ul> <p>The dual edge headers provide:</p> <ul> <li>USB 2.0 (host or slave)</li> <li>1x 10/100MB Ethernet port</li> <li>ATMega32U4 ICSP (MOSI, MISO, SCK, SS)</li> <li>ATMega32U4 RESET pin</li> <li>ATMega32U4 UART (TXD1, RXD1)</li> <li>ATMega32U4 I2C (SDA, SCL)</li> <li>ATMega32U4 digital (+ PWM) pins (D4-D6 and IO8-13)</li> <li>ATmega Analog pins (A0-5 + AREF)</li> <li>Arduino Yun<sup>TM</sup>-compatible pins (HANDSHAKE, GP6)</li> <li>+5V, +3.3V and GND power supply pins</li> </ul> <p>Note: Domino is not connected to Arduino<sup>TM</sup> and the Domino Qi Mini product is a derivative. Any technical support must be directed to us, not to Arduino<sup>TM</sup>.</p>"},{"location":"domino/qi/mini/#specifications","title":"Specifications","text":"specs Value Weight 12 g Dimensions 55.88 x 33.02 x 10.8 mm CPU AR9331, 400 MHz + ATMega32U4, 16 MHz Memory 16 MB SPI Flash and 64 MB DDR2 RAM RF Frequency 2.4 GHz band Max Output Power +21 dBm Wireless Standards 802.11 bgn Antenna (port) U.FL connector, built-in PCB antenna Power Supply 5 V, max. power consumption 6.5 W Firmware U-Boot, OpenWRT Available Interfaces USB host/slave, 1 x Ethernet, ICSP, ATMega32U4 Digital pins (+ PWM), ATmega32U4 Analog pins, Arduino Yun HANDSHAKE + GP6, Power Supply pins User Interfaces ATMega32U4 USB UART bridge, 32U4 RESET push button, WLAN RESET push button, USER push button, Power Led, Wireless LED, WAN LED, USB LED"},{"location":"domino/qi/mini/#pinout","title":"Pinout","text":"<p>Qi Mini Pinout in PDF</p>"},{"location":"domino/qi/nodejs/","title":"Using NodeJS and LininoIO","text":"<p>Install NodeJS on Domino Qi is very simple. </p>"},{"location":"domino/qi/nodejs/#install-nodejs","title":"Install NodeJS","text":""},{"location":"domino/qi/nodejs/#1-insert-a-microsd-card","title":"1. Insert a MicroSD card","text":"<p>Install one MicroSD card to the slot on Domino Qi baseboard first in order to install packages that take a lot of space and use a lot of memory.</p>"},{"location":"domino/qi/nodejs/#2-run-installation-script","title":"2. Run installation script","text":"<p>Just execute the installation script: <code>/etc/linino/nodeyun_inst_latest.sh</code>, you will be asked to install fdisk first.</p> <pre><code>$ sh /etc/linino/nodeyun_inst_latest.sh\n\nFdisk is not installed ! ! ! The script will install the package for you...\n\nPress [Enter] key to install fdisk...\n\n</code></pre> <p>After install fdisk, relauch the script: <code>/etc/linino/nodeyun_inst_latest.sh</code></p> <pre><code>#sh /etc/linino/nodeyun_inst_latest.sh\n</code></pre> <p>When you get the prompt</p> <pre><code>Welcome to Linino Node.Js installation script v13\n\nLinino node.js installation menu\n\n1. Prepare SDCard and install node.js\n2. Revert to original settings\n3. Exit and reboot\n4. Kill all node processes\n0. Exit\n\nChoose : \n</code></pre> <p>choose <code>1</code>,  then you will be promted:</p> <pre><code>WARNING : All data on your SDCard Would will be erased, are you sure ? (y/n)\n</code></pre> <p>Several software packages will be downloaded and installed. If you meet some errors (e.g. fuser) but the script continues, just continue.</p> <p>It takes several minutes to install the packages and format the MicroSD card. Then you will be prompt with the menu again:</p> <pre><code>Linino node.js installation menu\n\n1. Prepare SDCard and install node.js\n2. Revert to original settings\n3. Exit and reboot\n4. Kill all node processes\n0. Exit\n</code></pre> <p>Now choose 3 and reboot the system.</p>"},{"location":"domino/qi/nodejs/#3-install-ideino","title":"3. Install ideino","text":"<p>Now you should already nodejs installed. Check using <code>which</code></p> <pre><code>root@domino:~# which node\n/opt/usr/bin/node\n</code></pre> <p>Let's install extra packages including ideino. This takes several minutes.</p> <pre><code>opkg update\nopkg install ideinoIO -d mnt\nnpm install -g node-static\nnpm install node-static enable\n</code></pre> <p>In the default ideinoIO packages, there is no domino_qi layout, create it by copying arduino_yun layout</p> <pre><code>cd /opt/usr/lib/node_modules/ideino-linino-lib/utils/layouts\ncp arduino_yun.json domino_qi.json\n</code></pre>"},{"location":"domino/qi/nodejs/#install-lininoio-the-easy-way","title":"Install LininoIO - The easy way","text":"<p>LinioIO is a framework that let you interact your AVR from openwrt using NodeJS. </p>"},{"location":"domino/qi/nodejs/#check-uboot-environment-variables","title":"Check uboot environment variables","text":"<p>Before you use LininoIO, you need to check uboot environments first. In OpenWrt, do <code>fw_printenv</code>. If you see the following output, it means that uboot env is not saved. DON'T continue before you save uboot env.</p> <p></p> <p>Now enter uboot and save envirment vairables. You need to use do this using serial as intructed here.</p> <p></p>"},{"location":"domino/qi/nodejs/#install-lininoio","title":"Install LininoIO","text":"<p>Then you can reset your board and boot the Linux system. Simply execute <code>lininoio start</code>.</p> <p>You can revert back and disable LininoIO by just executing <code>lininoio stop</code>.</p> <p></p> <p></p>"},{"location":"domino/qi/nodejs/#install-lininoio-the-comprehensive-way","title":"Install LininoIO - The comprehensive way","text":""},{"location":"domino/qi/nodejs/#1-setup-environement-in-openwrt","title":"1. Setup environement in openwrt","text":"<p>In order to let Linino IO start when system start, you need to set several environment variables in uboot. Type <code>fw_printenv</code> to display the uboot env variables.</p> <p>If you got the following error message, it means that the uboot env variables are not stored to flash and you need to go to Step 1. - alternative.</p> <p></p> <p>If you saw correct output as shown below, now set the two variables.</p> <pre><code>root@domino:~# fw_printenv \nbootcmd=bootm 0x9f050000\nbootdelay=2\nipaddr=192.168.1.1\nserverip=192.168.1.2\nbootfile=\"firmware.bin\"\nloadaddr=0x80800000\nncport=6666\nuboot_addr=0x9F000000\nuboot_name=uboot_for_domino.bin\nuboot_size=0x40000\nuboot_backup_size=0x40000\nlu=if ping $serverip; then mw.b $loadaddr 0xFF $uboot_backup_size &amp;&amp; cp.b $uboot_addr $loadaddr $uboot_backup_size &amp;&amp; tftp $loadaddr $uboot_name &amp;&amp; if itest.l $filesize &lt;= $uboot_size; then erase $uboot_addr +$uboot_backup_size &amp;&amp; cp.b $loadaddr $uboot_addr $uboot_backup_size &amp;&amp; echo OK!; else echo ERROR! Wrong file size!; fi; else echo ERROR! Server not reachable!; fi\nfirmware_addr=0x9F050000\nfirmware_name=openwrt-domino.bin\nlf=if ping $serverip; then tftp $loadaddr $firmware_name &amp;&amp; erase $firmware_addr +$filesize &amp;&amp; cp.b $loadaddr $firmware_addr $filesize &amp;&amp; echo OK!; else echo ERROR! Server not reachable!; fi\nlc=tftp 0x81000000 config.bin &amp;&amp;cp.b 0x9fff1000 0x80060000 0xf000 &amp;&amp; cp.b 0x81000000 0x80060002 0x06 &amp;&amp;erase 0x9fff0000 +0x10000 &amp;&amp; cp.b 0x81000000 0x9fff0000 $filesize &amp;&amp; cp.b 0x80060000 0x9fff1000 0xf000\nethact=eth0\nstdin=serial\nstdout=serial\nstderr=serial\nbootargs=console=spicons,250000 board=domino root=31:03 rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env),1280k(kernel),14656k(rootfs),64k(nvram),64k(art)ro,15936k@0x50000(firmware)\nbaudrate=250000\n</code></pre> <p>Now use <code>fw_setenv</code> to set bootargs and baudrate and reboot your openwrt.</p> <pre><code>fw_setenv bootargs \"console=spicons,115200 board=domino root=31:03 rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env),1280k(kernel),14656k(rootfs),64k(nvram),64k(art)ro,15936k@0x50000(firmware)\"\nfw_setenv baudrate 250000\n</code></pre>"},{"location":"domino/qi/nodejs/#1-alternative-setup-environement-in-uboot","title":"1. - alternative. Setup environement in uboot","text":"<p>If your step 1 cannot be done because uboot env is not readable, you need to do this in uboot console. First you need to have the AVR serial installed, if not, by doing <code>run-avrdude /etc/linino/YunSerialTerminal.hex</code></p> <pre><code>run-avrdude /etc/linino/YunSerialTerminal.hex\n</code></pre> <p>After avr is flashed, you need to enter uboot console.  First connect power to the MicroUSB connect of Domino Qi Mini, not Dimono Qi baseboard. Your windows will recognize the device as Arduino Yun.  1. Use putty to connect to the comm port.  2. Press the Openwrt Reset button on Domino Qi Mini 3. type \"gl\" quickly once you see the uboot prompt, and you will enter the uboot console. 4. execut the change env using <code>setenv</code> and <code>saveenv</code> then <code>reset</code> your board</p> <pre><code>setenv bootargs console=ttyATH0,250000 board=domino root=31:03 rootfstype=squashfs,jffs2 noinitrd mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env),1280k(kernel),14656k(rootfs),64k(nvram),64k(art)ro,15936k@0x50000(firmware)\nsetenv baudrate 250000\nsaveenv\nreset\n</code></pre>"},{"location":"domino/qi/nodejs/#2-flash-avr","title":"2. Flash AVR","text":"<p>You need to flash the correct hex to AVR: <code>run-avrdude /etc/linino/bathos-yun.hex</code></p> <pre><code>run-avrdude /etc/linino/bathos-yun.hex\n</code></pre> <p>Attention: You may got error when flashing in the verification step, just ignore it. </p>"},{"location":"domino/qi/nodejs/#3-reboot","title":"3. Reboot","text":"<p>You need to reboot your system to let the system auto-detect the settings and run the LininoIO framework. Just to check if it is running succefully, do a <code>ps</code> to see if there are many processes named mcuio_irq.  If you cannot see them, try <code>/etc/init.d/mcuio enable</code> <code>/etc/init.d/mcuio start</code></p> <pre><code>/etc/init.d/mcuio enable\n/etc/init.d/mcuio start\n\n</code></pre> <p></p>"},{"location":"domino/qi/serial/","title":"Domino Qi Serial","text":"<p>As the UART of OpenWrt is connected to AVR, you have to use the serial console via AVR.</p>"},{"location":"domino/qi/serial/#connection","title":"Connection","text":"<p>Connect Domino Qi Mini to your computer. Don't use the MicroUSB connector in the Qi baseboard (There are footprint, but we don't solder it by default).</p>"},{"location":"domino/qi/serial/#flash-avr","title":"Flash AVR","text":"<p>When you got your Domino Qi for the first time, it may already have flashed the serial terminal to AVR. If not, do it now.</p> <pre><code>run-avrdude /etc/linino/YunSerialTerminal.hex\n</code></pre> <p>The instructions of how to use this is documented here: https://www.arduino.cc/en/Tutorial/YunSerialTerminal</p>"},{"location":"domino/qi/serial/#linux-ubuntu","title":"Linux (Ubuntu)","text":"<p>If you use Linux hosts, you may likely have the devices identified as <code>/dev/ttyACM0</code>, connect to it using kermit.  </p>"},{"location":"domino/qi/serial/#windows","title":"Windows","text":"<p>If you are using Windows system, you may have device identified as <code>Arduino Yun</code>, find its port number and connect it to using <code>putty</code>.</p>"},{"location":"hardware/6416/","title":"GL-iNet6416","text":"<p>Traditional IoT box</p> <p>GL-iNet6416 is our first generation mini router. It is welcomed by makers and hobbyists, widely used in IoT, home automation and wifi control projects.</p> <p>This model is discontinued and replaced by our most welcomed AR150 model.</p>"},{"location":"hardware/6416/#hardware-specification","title":"Hardware Specification","text":"Model GL-iNet6416 CPU Qualcomm Atheros 9331, @400MHz Memory DDRI 64MB Storage 16MB Nor Flash Interfaces 1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button Frequency 2.4GHz Transmission Rate 150Mbps Max. Tx Power 18dBm Protocol 802.11 b/g/n External Drive Format Support FAT32/NTFS/exFAT/EXT4/EXT3/EXT2 Webcam Support MJPEG, YUV DIY Features UART, 5GPIO, 3.3V &amp; 5V power port External Antenna Support No PoE Module Support No Power Input 5V/1A Power Consumption &lt;1W Dimension, Weight 58mmX58mmX25mm, 39g"},{"location":"hardware/6416/#pcb-pinout","title":"PCB Pinout","text":"<p>Note: The pin headers of GPIO is 2mm.</p> <p></p>"},{"location":"hardware/ar150/","title":"GL-AR150 Series","text":"<p>AR150 Series includes AR150, AR150-Ext, AR150-PoE and AR150-Ext-PoE.</p>"},{"location":"hardware/ar150/#hardware-specification","title":"Hardware Specification","text":"Model GL-AR150 CPU Atheros 9331 400MHz Memory DDRII 64MB Storage 16MB flash Interfaces 1 WAN, 1 LAN, 1 USB2.0, 1 Micro USB (power), 1 Reset Button, UART Frequency 2.4GHz Transmission Rate 150Mbps Max. Tx Power 18dBm Protocol 802.11 b/g/n External Drive Format Support FAT32/NTFS/exFAT/EXT4/EXT3/EXT2 Webcam Support MJPEG, YUV (web cam not support any more from firmware v2.27) DIY Features UART, GPIO,  3.3V &amp; 5V power port External Antenna Support Yes (optional) PoE Module Support Yes (optional) Power Input 5V/1A Power Consumption &lt;1.5W Dimension, Weight 58mmX58mmX25mm, 39g"},{"location":"hardware/ar150/#pcb-pinout","title":"PCB Pinout","text":""},{"location":"hardware/ar150/#rtc-setting","title":"RTC Setting","text":"<p>You can use a RTC (Real-time control) module in GL-AR150 mini router.</p> <p></p>"},{"location":"hardware/ar150/#install-kernel-modules","title":"Install kernel modules","text":"<p>If you use our stock firmware, you can just install using <code>opkg</code></p> <pre><code>opkg update\nopkg install kmod-i2c-gpio-custom\nopkg install kmod-rtc-sd2068\n</code></pre> <p>If you want to compile your own firmware, choose these packages:</p> <pre><code>Kernel modules  ---&gt;  I2C support  ---&gt;  kmod-i2c-gpio-custom\nKernel modules  ---&gt;  Other modules  ---&gt;  kmod-rtc-sd2068\n</code></pre>"},{"location":"hardware/ar150/#software","title":"Software","text":"<p>The GPIO used for RTC is below:</p> <p><code>SDA</code> &lt;--&gt; <code>GPIO1</code> <code>SCL</code> &lt;--&gt; <code>GPIO17</code></p> <p>Now you need in insert kernel modules and connect to the module</p> <pre><code>insmod i2c-gpio-custom.ko bus0=0,1,17\necho sd2068 0x32 &gt; /sys/bus/i2c/devices/i2c-0/new_device\n</code></pre> <p>To read the time from RTC module</p> <pre><code>hwclock -r\n</code></pre> <p>To sync the RTC module's time to mini router</p> <pre><code>hwclock -s\n</code></pre> <p>To write mini router's time to RTC module</p> <pre><code>hwclock -w\n</code></pre>"},{"location":"hardware/ar150/#poe-connection","title":"PoE Connection","text":"<p>We have a specific PoE module for GL-AR150 mini routers. You can find it in the PoE version of AR150 router.</p> <p>You can only apply one power supply method at one time, either via PoE (Power over Ethernet) or micro USB Power. The compatible passive or active PoE injector should be 48V 802.3af/at.</p> <p>PoE only works on the WAN Port only</p> <p></p> <p>PoE Setup Sample: </p> <p>The following PoE injector is widely availabe in the market and it is very affordable. You can put you Ineternet cable in the <code>Data In</code> port then connect the <code>Data &amp; Power Out</code> port to AR150-PoE's <code>WAN</code> port.</p> <p>For PoE Version Only</p> <p> </p>"},{"location":"hardware/ar300/","title":"GL-AR300 Router","text":"<p>Business grade home router.</p> <p>AR300 is our first business grade home router. It has signal amplifier which provide the best coverage.</p> <p>Due to is high cost we discontinued this model. Firmware is not updated anymore. </p>"},{"location":"hardware/ar300/#hardware-specification","title":"Hardware Specification","text":"Model GL-AR300 CPU Atheros 9344 560MHz Memory DDRII 128MB Storage 16MB Nor Flash Interfaces 1 WAN, 4 LANs 2 USB2.0, 1 Micro SD Slot (128GB Max.), 1 Reset Button Frequency 2.4GHz Transmission Rate 300Mbps Max. Tx Power 21dBm Protocol 802.11 b/g/n External Drive Format Support FAT32/NTFS/exFAT/EXT4/EXT3/EXT2 Webcam Support MJPEG, YUV DIY Features SPI, JTAG, UART, GPIOs External Antenna Support 2 X 5dBi Antenna PoE Module Support Yes Power Input 12V/2A Power Consumption &lt;6W Dimension, Weight 170mmX130mmX35mm, 105g"},{"location":"hardware/ar300/#pcb-pinout","title":"PCB Pinout","text":""},{"location":"hardware/ar300m/","title":"GL-AR300M Series","text":"<p>Best Mini Router Ever</p> <p>AR300M is the our best mini router. It is small and powerful.</p> <p>It has several sub-models:</p> Sub-model Nor flash Nand flash Antenna 5G wifi USB power control AR300M 16MB 128MB Internal No Yes AR300M-Ext 16MB 128MB External No Yes AR300M16 16MB No Internal No Yes AR300M16-Ext 16MB No External No Yes AR300M-Lite 16MB No Internal No No AR300MD* 16MB 128MB Internal Yes Yes <p>*AR300MD 5Gwifi is suggested only to work at monitoring mode because of power consumption. </p>"},{"location":"hardware/ar300m/#hardware-specification","title":"Hardware Specification","text":"Model GL-AR300M Series CPU QCA9531 650MHz Memory DDRII 128MB Storage 16MB Nor, 128 MB Nand (Optional) Interfaces 1 WAN, 1 LAN, 1 USB2.0, 1 Micro USB (power), 1 Reset Button, PCIe, UART Frequency 2.4GHz Transmission Rate 300Mbps Max. Tx Power 20dBm Protocol 802.11 b/g/n External Drive Format Support FAT32/NTFS/exFAT/EXT4/EXT3/EXT2 Webcam Support MJPEG, YUV (not support from firmware v2.27) DIY Features UART, GPIO, PCIe, 3.3V &amp; 5V power port External Antenna Support Yes (optional) PoE Module Support No Power Input 5V/1A Power Consumption &lt;2W Dimension, Weight 58mmX58mmX25mm, 39g PCIe headers Yes"},{"location":"hardware/ar300m/#pcb-pinout","title":"PCB Pinout","text":"<p>Note: I2C is not working in some early version of the router.</p> <p>By using 128MB Nand flash, space is not a problem and the writing speed is improved greatly. You can compile a firmware with tons of features and writing data is almost instant.</p> <p>By adding PCIe interface, a 5G 802.11a/ac addon module can be connected and you can enjoy the wifi speed on a mini router.</p>"},{"location":"hardware/ar300m/#performance","title":"Performance","text":"<p>By adding a fast Nand flash, you can feel how the performance is improved compared to a Nor flash router.</p> <p>The performance comparision between AR300M (nand) with AR150 is below:</p> <p></p> <p>It only takes 6 seconds to upload and process 250 ovpn files. When installing packages to the router, it takes no more than 20% for the time spent than using nor flash, including the time to download resource from the Internet. So everything just happends in seconds.</p>"},{"location":"hardware/ar300m/#building-firmware","title":"Building Firmware","text":"<p>The router has two flash so we have two firmwares. One firmware is installed on the Nor flash and one is installed on the nand flash. The two firmware is independent from each other. The router will always try to boot from the nand flash. If it fails for 3 times it will boot from the Nor flash.</p> <p>By using two firmwares, businesses can have dual boot options to ensure the system can backup, upgrade and boot without problems.</p>"},{"location":"hardware/ar300m/#building-the-generic-firmware-for-nor-flash","title":"Building the generic firmware for nor flash","text":"<p>The simple instructions of building the firmware can be found here: https://github.com/gl-inet/lede-17.01 You need to have a Linux machine. In this example we use Ubuntu.</p> <pre><code>$ sudo apt-get update\n$ sudo apt-get install subversion build-essential git-core libncurses5-dev zlib1g-dev gawk flex quilt libssl-dev xsltproc libxml-parser-perl mercurial bzr ecj cvs unzip git wget\n$ git clone https://github.com/domino-team/openwrt-cc.git\n$ cd openwrt-cc\n$ ./scripts/feeds update -a\n$ ./scripts/feeds install -a\n$ make menuconfig\n  ..choose your compile target and packages\n$ make\n\n</code></pre> <p>If you want to build the firmware for nor flash, choose <code>GL-AR300M</code> as the target.</p> <p></p>"},{"location":"hardware/ar300m/#build-the-nand-firmware-for-nand-flash","title":"Build the nand firmware for nand flash","text":"<p>If you want to build the firmware for nand flash, first choose subtarget <code>Generic devices with NAND flash</code> then choose <code>GL-AR300M Nand</code> as the target.</p> <p></p> <p>The make process will takes around 1 hour for the first time because it needs to download a lot of data from t he Internet. After compiling finished, you will find the following firmware files in <code>bin/ar71xx/</code></p> <ul> <li>openwrt-ar71xx-generic-gl-ar300m-squashfs-sysupgrade.bin, for nor flash</li> <li>openwrt-ar71xx-nand-gl-ar300m-squashfs-sysupgrade.tar, for nand flash firmware upgrade inside of a working Openwrt firmware</li> <li>openwrt-ar71xx-nand-gl-ar300m-ubi.img, for initial nand flash firmware build, this is used when upgrading using uboot.</li> </ul> <p>Note</p> <p>There is two file for nand firmware. The <code>xxx-ubi.img</code> is used for first time writing to the nand flash. If you are using uboot to upgrade the firmware, please use this one. The <code>xxx-sysupgrade.tar</code> is used for upgrading from openwrt. So if you use our stock firmware or already using an openwrt firmware, choose this one.</p>"},{"location":"hardware/ar300m/#using-firmware","title":"Using Firmware","text":"<p>The firmware has exactly the same UI as our other mini routers. To determine you are using nor flash or nand flash, please check the available space from the UI.</p>"},{"location":"hardware/ar300m/#control-which-firmware-you-are-booting-into","title":"Control which firmware you are booting into","text":"<p>There are two methods to control which firmware you can boot.</p>"},{"location":"hardware/ar300m/#method-1-set-boot-count","title":"Method 1: set boot count","text":"<p>The router will always try to boot into the nand firmware. But if it fails for 3 times it will try to boot into the nor firmware. If you want to boot into the nor firmware, you can tell the router that it failed to boot for 3 times already by setting the uboot env. To do so, you can use the following command in a SSH terminal.</p> <pre><code>$ fw_printenv\n$ fw_setenv bootcount 3\n$ reboot\n</code></pre> <p>You need to do this each time if you want to boot into nor firmware, no matter you which firmware you are using. Otherwise after the firmware boot, it will reset <code>bootcount</code> variable and next boot will always try to boot the nand firmware.</p>"},{"location":"hardware/ar300m/#method-2-using-the-switch","title":"Method 2: using the switch","text":"<p>This is only valid in the new uboot (from Mar 2017).</p> <p>First ssh to the router and set uboot env <code>boot_dev</code></p> <pre><code>$ fw_printenv\n$ fw_setenv boot_dev on\n$ reboot\n</code></pre> <p>Then when the router boot, the router will choose which firmware to boot using the hardware switch. 1. Left side (near the reset button) --&gt; Nand flash 2. Right side  --&gt; Nor flash</p> <p>To disable using the switch to choose firmware function, clear <code>boot_dev</code> variable.</p> <pre><code>$ fw_printenv\n$ fw_setenv boot_dev\n$ reboot\n</code></pre>"},{"location":"hardware/ar300m/#debrick","title":"Debrick","text":"<p>If you brick your router and it cannot boot, you can try to save it using uboot.</p>"},{"location":"hardware/ar300m/#using-uboot-web-ui","title":"Using uboot web UI","text":"<p>Follow this guide for a general instruction to get access of uboot web UI.</p> <p>Here is a video guide for entering AR300M uboot failsafe. </p> <p>In some early version of AR300M, the uboot boot very slowly. So be patient when you press and hold the reset button. The LEDs will start to flash around 5 seconds.</p> <p>There is a bug in AR300M uboot and in some computers the connection will always reset when you upload firmware. Check this post to find the discussion. You can either try chaning the MTU or just try another computer.</p> <p>Note: If you have an older version of uboot, the webUI will only be able to flash NAND flash. This is fixed in newer versions.</p> <p>Note: When flash NAND firmware, only use the firmware with <code>.img</code> in the name, not the one with <code>.rar</code> in the name.</p> <p>The following figure is the web ui of the <code>new</code> uboot.</p> <p></p>"},{"location":"hardware/ar300m/#using-uboot-console","title":"Using uboot console","text":"<p>If you want to use uboot console, you need to open the case and solder the serial connectors.</p> <p>Then you need to set up a tftp server.</p> <p>in uboot console, the command to flash nor flash is <code>run lf</code> to flash nand firmware is <code>run nlf</code></p>"},{"location":"hardware/ar750/","title":"GL-AR750 Travel AC Router","text":"<p>The first dual-band AC travel router. We added one more Ethernet port (totally 3) so that it fit better for fixed usage scenario as well. It has a MicroSD (TF) slot which increase your storage space up to 128GB.</p> <p>It has PoE options which is the best choice for affordable wifi coverage.</p> <p>The 2.4G antenna is on the PCB and don't have a uFL connector. While the 5G antenna has uFL connector.</p>"},{"location":"hardware/ar750/#hardware-specification","title":"Hardware Specification","text":"Model GL-AR750 CPU QCA9531 650MHz Memory DDRII 128MB Storage 16MB Nor Flash Interfaces 1 WAN (100Mbps), 2 LANs (100Mbps), 1 USB2.0, 1 Micro USB (power), 1 Reset Button, UART, TF Card Slot (128GB Max.) Frequency 2.4GHz, 5.8GHz Transmission Rate 300Mbps (2.4GHz) + 433Mbps (5GHz) Max. Tx Power 20dBm (2.4GHz)/20dBm(5GHz) Protocol 802.11 b/g/n/ac External Drive Format Support FAT32/NTFS/exFAT/EXT4/EXT3/EXT2 Webcam Support MJPEG, YUV (not support from firmware v2.27) DIY Features UART, GPIO, 3.3V &amp; 5V power port External Antenna Support No PoE Module Support Yes Power Input 5V/2A Power Consumption &lt;6W Dimension, Weight 88mmX68mmX24mm, 66g"},{"location":"hardware/ar750/#pcb-pinout","title":"PCB Pinout","text":""},{"location":"hardware/b1300/","title":"GL-B1300 Home AC Router","text":"<p>Home WiFi Mesh System </p> <p>B1300 is a powerful home WiFi system. Powered by the newest Qualcomm WiFi SON technology, it provides the best WiFi performances.</p> <p>B1300 has Quad-core CPU which provides very powerful computation. </p> <p>It has a big 32MB Nor flash which provide enough spaces for your customzied firmware.</p> <p>It has a Mesh button which is used to paire routers. You don't need an APP for the mesh router any more.</p>"},{"location":"hardware/b1300/#hardware-specification","title":"Hardware Specification","text":"Model GL-B1300 CPU Atheros IPQ4028, Quad-core ARM,717MHz Memory DDR3L 256MB Storage 32MB Nor Flash Interfaces 1 WAN, 2 LANs 1 USB3.0, 1 Reset Button, 1 Mesh Button Frequency 2.4GHz / 5GHz Transmission Rate 400Mbps(2.4GHz) + 867Mbps(5GHz) Max. Tx Power 20dBm Protocol 802.11 a/b/g/n/ac External Drive Format Support FAT32/NTFS/exFAT/EXT4/EXT3/EXT2 Webcam Support No Ethernet Port 10/100/1000M Power Input 12V/1.5A Power Consumption &lt;7W Dimension, Weight 116mmX116mmX37mm, 270g"},{"location":"hardware/b1300/#pcb-pinout","title":"PCB Pinout","text":"<p>B1300 has an internal USB2.0 connector. You can uses this connect to connect various devices inside of the case.</p> <p> </p>"},{"location":"hardware/mifi/","title":"GL-MiFi","text":"<p>GL-MiFi is an innovative 4G LTE router which separate based band and CPU. By doing this  the carrier cannot issue command and control your devices. When using vpn it secures all your devices while travelling. </p> <p>It has 5000mAh Li-Pol battery inside which works up to 10 hours in 4G mode.</p> <p>It has 20+ GPIO exposed and it is a great IoT box. </p> <p>Please choose the correct 4G module for your region.</p>"},{"location":"hardware/mifi/#hardware-specification","title":"Hardware Specification","text":"Model GL-MiFi CPU Atheros AR9331, @400MHz Memory DDRII 64MB Storage 16MB Nor Flash Interfaces 1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), Micro SIM Card Slot, TF Card Slot(128Gb Max.), 1 Reset Button, 1 On/Off Switch Frequency 2.4GHz Transmission Rate 300Mbps Max. Tx Power 18dBm Protocol 802.11 b/g/n External Drive Format Support FAT32/NTFS/exFAT/EXT4/EXT3/EXT2 Webcam Support MJPEG, YUV (not support any more from firmware v2.27) DIY Features UART, GPIO, 3.3V &amp; 5V power port, 20+ GPIOs External Antenna Support Yes 3G/4G Module Support 3G/4G LTE (Mini PCIe Modem) Power Input 5V/2A, Built-in Battery (5000mAh, Optional) Power Consumption &lt;3W Dimension, Weight 105mmX72mmX27mm, 170g"},{"location":"hardware/mifi/#pcb-pinout","title":"PCB Pinout","text":""},{"location":"hardware/mifi/#pcie-modem-module-list","title":"PCIe Modem Module List","text":""},{"location":"hardware/mifi/#modem-manager","title":"Modem Manager","text":"<p>From firmware v2.27, GL-MiFi has a modem manager in its UI. The functions include:</p> <ul> <li>Detect carrier and configure modem automatically</li> <li>Display signal strength</li> <li>Read and Send SMS</li> <li>Issue AT command and get the result</li> </ul> <p>Please refer to modem manager page</p>"},{"location":"hardware/mt300a/","title":"GL-MT300A Mini Smart Router","text":"<p>MT300A is a mini router which has a MicroSD card slot inside. Its wifi performance and computation power is higher than MT300N.</p>"},{"location":"hardware/mt300a/#hardware-specification","title":"Hardware Specification","text":"Model GL-MT300A CPU MTK 7620A 580MHz Memory DDRII 128MB Storage 16MB Nor Flash Interfaces 1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button, TF Card Slot (128GB Max. integrated on board) Frequency 2.4GHz Transmission Rate 300Mbps Max. Tx Power 20dBm Protocol 802.11 b/g/n External Drive Format Support FAT32/NTFS/exFAT/EXT4/EXT3/EXT2 Webcam Support MJPEG, YUV (not support from firmware v2.27) DIY Features UART, 3.3V &amp; 5V power port External Antenna Support Yes PoE Module Support No Power Input 5V/1A Power Consumption &lt;2W Dimension, Weight 58mmX58mmX25mm, 39g"},{"location":"hardware/mt300a/#pcb-pinout","title":"PCB Pinout","text":"<p>MT300A has headers for EMMC microSD card connector and 5V power pins. </p> <p> </p>"},{"location":"hardware/mt300a/#microsd-card-slot","title":"MicroSD Card Slot","text":"<p>GL-MT300A Router has a SD card slot inside. You need to open the case and insert the MicroSD card.  </p>"},{"location":"hardware/mt300n/","title":"GL-MT300N Mini Smart Router","text":"<p>MT300N was the best selling router due to its performance and prices. It was replaced by MT300N-V2.</p> <p>This model didn't has a external antenna version.</p>"},{"location":"hardware/mt300n/#hardware-specification","title":"Hardware Specification","text":"Model GL-MT300N CPU MTK 7620NN 580MHz Memory DDRI 64MB Storage 16MB Nor Flash Interfaces 1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button Frequency 2.4GHz Transmission Rate 300Mbps Max. Tx Power 20dBm Protocol 802.11 b/g/n External Drive Format Support FAT32/NTFS/exFAT/EXT4/EXT3/EXT2 Webcam Support MJPEG, YUV (not support from firmware v2.27) DIY Features UART, GPIO, 3.3V &amp; 5V power port External Antenna Support No PoE Module Support Yes (optional) Power Input 5V/1A Power Consumption &lt;2W Dimension, Weight 58mmX58mmX25mm, 39g"},{"location":"hardware/mt300n/#pcb-pinout","title":"PCB Pinout","text":"<p>MT300N has options to support PoE.</p> <p> </p>"},{"location":"hardware/mt300n-v2/","title":"GL-MT300N-V2","text":"<p>The best selling mini router.</p> <p>MT300N-V2 is an upgraded version of MT300N. The differences include:</p> <ul> <li>RAM is doubled to 128MB </li> <li>WiFi performance is improved using MTK proprietary driver. This driver doesn't support monitoring mode. But it support layer 2 bridging for all kinds of AP, which is not the case of opensource drivers.</li> <li>Opensource wifi drivers also work but it has some bugs and cause kernel panic. This problem was never solved by the community.  </li> <li>No PoE options.</li> </ul>"},{"location":"hardware/mt300n-v2/#hardware-specification","title":"Hardware Specification","text":"Model GL-MT300N-V2 CPU MTK 7628NN 580MHz Memory DDRII 128MB Storage 16MB Nor Flash Interfaces 1 WAN, 1LAN 1 USB2.0, 1 Micro USB (power), 1 Reset Button Frequency 2.4GHz Transmission Rate 300Mbps Max. Tx Power 20dBm Protocol 802.11 b/g/n External Drive Format Support FAT32/NTFS/exFAT/EXT4/EXT3/EXT2 Webcam Support MJPEG, YUV (not supported from firmware v2.27) DIY Features UART, 4GPIOs, 3.3V &amp; 5V power port External Antenna Support No PoE Module Support No Power Input 5V/1A Power Consumption &lt;2.75W Dimension, Weight 58mmX58mmX25mm, 39g"},{"location":"hardware/mt300n-v2/#pcb-pinout","title":"PCB Pinout","text":"<p>The pins on the left side can be actually used for Ethernet port or EMMC. They cannot be used as GPIO.</p> <p></p>"},{"location":"hardware/usb150/","title":"GL-USB150 Microuter","text":"<p>The smallest travel router ever.</p> <p>GL-USB150 is also named as Microuter. It is the smallest travel router ever. It doesn't has an Ethernet port but it has a USB to Ethernet convetor. So when it is plugged into your PC, it creates a wired network.</p> <p>It is mainly used to replace the wifi card of your PC or work as repeater. It is a firewall, separating your PC from public wifi networks.</p>"},{"location":"hardware/usb150/#hardware-specification","title":"Hardware Specification","text":"Model GL-USB150 CPU QCA 9331, 400MHz Memory DDRII 64MB Storage 16MB Nor Flash Frequency 2.4GHz Transmission Rate 150Mbps Max. Tx Power 20dBm Protocol 802.11 b/g/n Power Input 5V/1A, USB Power Supply Power Consumption &lt;1W Dimension, Weight 84mmX24mmX11mm, 10g"},{"location":"hardware/usb150/#pcb-pinout","title":"PCB Pinout","text":""},{"location":"setup/dns/","title":"Custom DNS Server","text":"<p>You can set up custom DNS server for the router in order to prevent DNS leak or other purposes.</p> <p>Click Internet icon and you will see the Internet Status.</p> <p></p> <p>Click <code>DNS Settings</code> to input custom DNS server IP address. You can input maximum two DNS servers.</p> <p>Check <code>Force all clients to use</code> will capture the DNS request from all connected clients. For example Google Chrome cast. This option does not need to be used with custom DNS server.</p> <p>If you are connecting to a network which requires authentication in Captive Portal page. It may not be able to pop up because of DNS problems. As a result, your browser will show you that the DNS cannot be resolved. In this case, you have to uncheck <code>Rebind Protection</code> in <code>DNS Settings</code>.</p> <p>Note: You may need to reconnect the network in order to activate your DNS settings.</p> <p></p>"},{"location":"setup/firmware/","title":"Upgrade Firmware","text":"<p>This guide includes upgrading firmware from a stock firmware. If you want to check upgrading firmware using uboot web failsafe, please check troubleshooting page.</p>"},{"location":"setup/firmware/#firmware-introduction","title":"Firmware Introduction","text":"<p>The firmware is under continuous development to include new features, fix bugs and improve user experience, etc. We will release new firmware frequently. When you receive the device, you have get a GL.iNet router with an old firmware version. Please upgrade to the latest firmware immediately.</p>"},{"location":"setup/firmware/#new-firmware-notification","title":"New Firmware Notification","text":"<p>A new message will be shown when there is a new firmware available. Click the Firmware icon to check your current firmware version or perform other setting. You can enable the <code>Auto Update</code> option to upgrade automatically if it finds a newer firmware version. </p> <p>Note: Don't turn off the power during upgrade. Otherwise, the router will be bricked</p> <p></p>"},{"location":"setup/firmware/#download-firmware","title":"Download Firmware","text":""},{"location":"setup/firmware/#download-firmware-automatically","title":"Download firmware automatically","text":"<p>You can also download firmware from the web admin page. Click <code>Download</code> to download the firmware. The downloaded file will be verified automatically. Next, you will have a <code>Upgrade</code> button to upgrade the firmware.</p> <p>Note: It is suggested to uncheck the <code>Keep setting</code>. If you keep its settings and encounter problems after the upgrade, please reset the device.</p> <p></p>"},{"location":"setup/firmware/#download-from-our-official-website-manaully","title":"Download from our official website manaully","text":"<p>You can download the firmware file from our website.</p>"},{"location":"setup/firmware/#upload-firmware","title":"Upload Firmware","text":"<p>You can use the <code>Upload Firmware</code> button to upload the firmware file. Simply drag and drop your firmware file to the area indicated in the web admin page.</p> <p></p>"},{"location":"setup/firmware/#compile-firmware","title":"Compile Firmware","text":"<p>You can compile your own firmware or use third-party firmware and upload it to the router. </p> <p>Note: If you uploaded a wrong firmware and bricked the router, please use Uboot to re-install the correct firmware.</p>"},{"location":"setup/first-time_setup/","title":"Getting Start with GL.iNet Router","text":""},{"location":"setup/first-time_setup/#1-power-on","title":"1. Power on","text":"<p>For Mini Router series (MT300N, MT300A, AR150, AR300M), you need to use a standard USB 5V/1A power adapter..</p> <p>For GL-MiFi, GL-AR750, B1300, you have to use a standard 5V/2A power adapter in order to ensure a sufficient power supply.</p>"},{"location":"setup/first-time_setup/#2-connect","title":"2. Connect","text":"<p>You can connect your device to the router via Ethernet cable or Wi-Fi,</p>"},{"location":"setup/first-time_setup/#wired-connection","title":"Wired connection:","text":"<p>Connect your device to the LAN port of the router via Ethernet cable.</p>"},{"location":"setup/first-time_setup/#wireless-connection","title":"Wireless connection:","text":"<p>Search for the SSID of the router in your device and input the default password: goodlife in order to connect.</p> <p>note: The SSID should be printed on the bottom label of the router with the following format:</p> <p><code>GL-iNet-xxx   GL-MT300N-XXX   GL-MT300A-XXX   GL-AR150-XXX   GL-AR300M-XXX   GL-USB150-XXX   GL-AR750-XXX   GL-MIFI-XXX   GL-B1300-XXX</code></p>"},{"location":"setup/first-time_setup/#3-access-the-web-admin-page","title":"3. Access the Web Admin Page","text":"<p>Open a browser (we recommend Chrome, firefox) and visit http://192.168.8.1 You will see the welcome page. </p>"},{"location":"setup/first-time_setup/#1-language-setting","title":"1) Language Setting","text":"<p>You need to select your language. Currently, the web admin page of all our routers only provide Chinese and English.</p> <p>Note: If your browser always redirect to Luci (http://192.168.8.1/cgi-bin/luci), you can visit: http://192.168.8.1/index.html</p>"},{"location":"setup/first-time_setup/#2-timezone-setting","title":"2) Timezone Setting","text":"<p>You need to select your region. You can click on the map or select from the drop-down menu.</p> <p></p>"},{"location":"setup/first-time_setup/#3-admin-password-setting","title":"3) Admin Password Setting","text":"<p>You have to set your own password for this web admin page and click <code>Finish</code>. There is no default password. The password should not less than 8 characters.</p> <p></p> <p>Note: This password is for this web admin page and the embedded Linux system. It doesn't change your Wi-Fi password.</p>"},{"location":"setup/first-time_setup/#3-access-admin-page","title":"3) Access Admin Page","text":"<p>You will be directed to the index of the web admin page.</p> <p></p>"},{"location":"setup/internet_setting/","title":"Internet Setting","text":"<p>There are total 4 different connection methods that you can use to access the Internet:</p> <p>1)  Cable</p> <p>2)   Wireless / Wi-Fi Repeater</p> <p>3)   3G/4G Modem</p> <p>4)   USB Tethering</p> <p></p> <p>You can click <code>New Connection</code> to create an Internet connection.</p>"},{"location":"setup/internet_setting/#cable","title":"Cable","text":""},{"location":"setup/internet_setting/#dhcp","title":"DHCP","text":"<p>DHCP is the default and most common method to connect to the Internet. You just need to choose <code>DHCP</code> and click <code>Submit</code>.</p> <p></p>"},{"location":"setup/internet_setting/#static","title":"Static","text":"<p>Static is required if you want your router have a fixed IP address given by your ISP or in the same subnet of your main router.</p> <p>The current settings will be automatically filled. Change it according to your needs, then click <code>Submit</code>.</p> <p></p>"},{"location":"setup/internet_setting/#pppoe","title":"PPPoE","text":"<p>PPPoE is required by many Internet service providers (ISP). Generally, your ISP will give you a modem and provide you a username and password that you are required to enter so as to access the Internet.</p> <p>Enter your username and password then click <code>Submit</code>.</p> <p></p>"},{"location":"setup/internet_setting/#repeater","title":"Repeater","text":"<p>You can connect to an existing wireless network by setting it as a repeater. However, there are 2 different modes that you can choose. </p>"},{"location":"setup/internet_setting/#wisp","title":"WISP","text":"<p>In WISP (Wireless Internet Service Provider) mode, the router will create its own subnet and act as a firewall which protect you from the public network. Therefore, we highly suggest you to chose WISP if you want to connect to a  public wifi.</p> <p>In the following diagram, your main router has an IP 192.168.1.1. Suppose its netmask is 255.255.255.0, GL.iNet router will have two IP address:</p> <p><code>192.168.1.99</code> which is obtained from your main router</p> <p><code>192.168.8.1</code> which is created by itself</p> <p>So all your devices connected to GL.iNet router will be protected by its firewall.</p> <p></p> <p>To set up repeater in WISP mode, first Click <code>Repeater</code> tab in <code>Internet Settings</code>, the router will search for the available Wi-Fi networks automatically. Then, choose a SSID and enter its password. Choose <code>WISP</code> in mode and click <code>Submit</code>.</p> <p></p>"},{"location":"setup/internet_setting/#wds","title":"WDS","text":"<p>In WDS (Wireless Distribution System), you can connect to an existing wireless network without creating a new subnet. Therefore, the router only act as a device to extend the wireless signal coverage of your main router. There is no firewall between the mini router and the main router.</p> <p>However, to use this mode, your main router has to support WDS. Since WDS has different implementation, you'd be better to use the same GL.iNet router. Check your main router's manual to see if it supports this function.</p> <p>Note: OpenVPN client function of the mini router will not work in bridge mode.</p> <p></p> <p>To set up repeater in WDS mode, first, ensure your main router supports WDS. Click <code>Repeater</code> tab in <code>Internet Settings</code>, the router will search for the available Wi-Fi networks automatically. Then, choose a SSID and enter its password. Choose <code>WDS</code> in mode and you can enter the LAN IP which will be used to access this router.</p> <p>This LAN IP should be within the subnet of your main router, but it cannot conflict with any other devices's IP within the same subnet.</p> <p>If you are not sure, just keep the LAN IP blank so that it will get a IP address from your main router automatically. However, you need to find out this IP in the admin UI of your main router if you want to access the web UI of GL.iNet router again.</p> <p>Relayd</p> <p>In case your main router doesn't support WDS, you can create a WISP connection first, then set up a relayd overlay.</p> <p>Here is the detailed instructions.</p>"},{"location":"setup/internet_setting/#3g4g-modem","title":"3G/4G Modem","text":"<p>You can connect to the Internet using 3G or 4G modem. Plug in your modem and click the <code>3G/4G</code> tab in <code>Internet Settings</code> to enter the 3G/4G setting page. </p> <p>To set up 3G/4G modem in GL-MiFi, you should follow the instructions in Modem Manager.</p> <p></p> <p>The router has pre-configured values. You can choose <code>Country/Region</code>,  <code>Service Provider</code> first. The values below will be filled automatically. But this is not necessary if you know the settings. If you found that the data is not updated, please write to us.</p> <p>To make the correct settings:</p> <ul> <li>Modem device: Please choose <code>/dev/cdc-wdm0</code> if this modem support QMI, otherwise you need to choose <code>ttyUSB*</code>. There may be several <code>ttyUSB</code> from 1 to 3. You need to choose the correct one based on modem spec.</li> <li>Service Type: This is needed for 3G connection only. For 4G connection, this setting is not necessary.</li> <li>APN: This is the most important setting, check your ISP for the correct setting.</li> <li>Dial Number: Generally, it is a default value and you don't need to set it by yourself. However, if you have this info, please input it.</li> <li>Pin, Username and Password: Generally, these informations are not necessary for a unlocked SIM card. However, if you have a locked SIM card, please find these informations from your carrier.</li> </ul> <p>Note: Some modems work in host-less mode. If your modem cannot be detected in this setting page, you can click <code>tethering</code> to find you device.</p>"},{"location":"setup/internet_setting/#example-us-verizon","title":"Example (US Verizon)","text":""},{"location":"setup/internet_setting/#compatible-modems","title":"Compatible Modems","text":"<p>Here is a list of supported modems that we tested before. </p>"},{"location":"setup/internet_setting/#qmi","title":"QMI","text":"<p>This modem supports QMI mode. Please choose <code>/dev/cdc-wdm0</code> in <code>3/4G</code> settings.</p>"},{"location":"setup/internet_setting/#hostless","title":"Hostless","text":"<p>This modem supports tethering mode, please set up by using tethering but not 3/4G.</p> Model 3G/4G Tested Tested by Comments Quectel EC20-E, EC20-A, EC20-C 4G Yes GL.iNet Quectel EC25-E, EC25-A, EC25-V, EC25-C 4G Yes GL.iNet Quectel UC20-E 3G Yes GL.iNet ZTE ME909s-821 4G Yes GL.iNet Huawei E1550 3G Yes GL.iNet Huawei E3276 4G Yes GL.iNet TP-Link MA260 3G Yes GL.iNet ZTE M823 4G Yes Arnas Risqianto ZTE MF190 3G Yes Arnas Risqianto Huawei E3372 4G Yes anonymous Pantech UML290VW (Verizon) 4G Yes GL.iNet/steven QMI Pantech UML295 (Verizon) 4G Yes GL.iNet/steven hostless Novatel USB551L (Verizon) 4G Yes GL.iNet/steven QMI Verizon U620L (Verizon) 4G Yes hostles <p>You can also refer to http://ofmodemsandmen.com/modems.html for a well supported modem list.</p>"},{"location":"setup/internet_setting/#tethering","title":"Tethering","text":"<p>If your modem works in host-less mode or you want to share the data of your smartphone, you can use <code>Tethering</code>. </p> <p>For host-less modem tethering, plug it into the USB port of GL.iNet router. Then, you should be able to find the device under the Phone Device list.</p> <p>For smartphone tethering, connect it to the USB port of GL.iNet router and click Trust to continue when the message pops up in your smartphone. Then, turn on the personal hotspot of your phone. Finally, choose it from the Phone Device list.</p> <p>Note: A newly-added phone of host-less modem will be named beginning with <code>eth</code>or <code>usb</code>. For example, <code>eht2</code>, <code>usb0</code>.</p> <p></p>"},{"location":"setup/internet_setting/#easytether","title":"EasyTether","text":"<p>Some carriers prohibit the sharing of the data and you may not able to use tethering. However, you can try easytethering. </p> <p>Note: Easytether is not a free service and we have no affiliate with them.</p>"},{"location":"setup/lan_ip/","title":"LAN IP Setting","text":"<p>LAN IP is the IP address you will use to connect to this router. If it conflicts with your main router, you can change it in the UI.</p>"},{"location":"setup/lan_ip/#default-lan-ip","title":"Default LAN IP","text":"<p>The default IP address of GL.iNet router is 192.168.8.1. </p>"},{"location":"setup/lan_ip/#change-lan-ip","title":"Change LAN IP","text":"<p>However, you can change the LAN IP address in the web admin page.Most of the routers use IP <code>192.168.0.1</code>, <code>192.168.1,1</code>, <code>192.168.1.254</code>, <code>10.10.1.1</code> etc. and subnet <code>255.255.255.0</code> (<code>/24</code>). If you want to connect GL.iNet router to another network, you have to ensure they have different IP address. Otherwise, you need to change the LAN IP of GL.iNet routers.</p> <p>Click the <code>wireless icon</code> and then <code>LAN IP</code> to change the LAN IP.</p> <p></p>"},{"location":"setup/mac_clone/","title":"MAC Clone","text":"<p>Clone MAC address is used especially in hotels, hotspot etc when the server checks your mac address. For example, if you got your smartphone registered on the network, you can clone your smartphone's mac address to the router so that the router can connect.</p> <p>Clieck the <code>Clone Mac</code> button and you will have the following interface.</p> <p></p> <p>Your current mac address will be displayed in <code>WAN MAC Address</code>. You can click <code>Clone</code> to copy your device's mac address or click <code>Restore</code> to restore the factory set mac.</p> <p>Don't forget clicking <code>Apply</code> and wait some seconds for it to take effect.</p>"},{"location":"setup/modem_manager/","title":"Modem Manager","text":"<p>Modem manager for MiFi</p> <p>Modem manager is the UI to control the modem on MiFi from firmware v2.27. The modem manager can be used to configure modem automatically, read/send SMS or issue AT commands.</p> <p>Please insert Micro SIM card before you turn on the device.</p> <p></p> <p>You will see <code>Modem Connection</code> in <code>Internet Status</code>. You can check different information of your GL-MiFi and configure your 3G/4G modem settings.</p> <p>You can find the following information in <code>Modem Connection</code>:</p> <p>Model: The model of your 3G/4G module.</p> <p>IMEI: A unique number for your GL-MiFi router.</p> <p>Carrier: The service provider of your SIM card.</p> <p></p>"},{"location":"setup/modem_manager/#modem-tools","title":"Modem Tools","text":"<p>We have developed a modem tools for you to configure your 3G/4G modem in GL-MiFi easily. Please click <code>Modem Tools</code>.</p> <p></p>"},{"location":"setup/modem_manager/#data","title":"Data","text":"<p>The configuration of Mobile Data should be auto detected by the modem manager. You can also change these settings manaually.</p> <p>Input the correct information in order to activate the 3/4G modem.</p> <ul> <li>Modem device: Please choose <code>/dev/cdc-wdm0</code> if this modem support QMI, otherwise you need to choose <code>ttyUSB*</code>. There may be several <code>ttyUSB</code> from 1 to 3. You need to choose the correct one based on modem spec.</li> <li>Service Type: This is needed for 3G connection only. For 4G connection, this setting is not necessary.</li> <li>APN: This is the most important setting, check your ISP for the correct setting.</li> <li>Dial Number: Generally, it is a default value and you don't need to set it by yourself. However, if you have this info, please input it.</li> <li>Pin, Username and Password: Generally, these informations are not necessary for a unlocked SIM card. However, if you have a locked SIM card, please find these informations from your carrier.</li> </ul> <p></p>"},{"location":"setup/modem_manager/#send-sms","title":"Send SMS","text":"<p>You will be able to use the SIM card in GL-MiFi to send message to others. </p> <p>**Note: only support English at this moment. ** </p> <p></p>"},{"location":"setup/modem_manager/#read-sms","title":"Read SMS","text":"<p>You will be able to use the SIM card in GL-MiFi. Therefore, if someone send a message to the phone number of your SIM card, you can read it in <code>Read SMS</code>.</p> <p></p>"},{"location":"setup/modem_manager/#at-tools","title":"AT Tools","text":"<p>You can configure the 3G/4G modem by sending AT command to the router via <code>AT Tools</code>. You have to use the port /dev/ttyUSB2 for all 3G/4G modules. We have pre-configured several AT commands that you can use directly in <code>Shortcut</code>.</p> <p></p> <p>Request IMEI: Request International Mobile Equipment Identity of your MiFi</p> <p>Correct result:</p> <pre><code>AT+CIMI 460010529708870 OK\n</code></pre> <p>Wrong result:</p> <pre><code>AT+CIMI ERROR\n</code></pre> <p>Request QCCID: Request the CCID number of your SIM card. If you get a number, it means that the connection of your SIM card is OK.</p> <p>Correct result:</p> <pre><code>AT+QCCID+QCCID: 89860115851079757018 OK\n</code></pre> <p>Wrong result:</p> <pre><code>AT+CCIDI ERROR\n</code></pre> <p>Request IMSI: Request the International Mobile Subscriber Identity associated with your cellular network.</p> <p>Correct result:</p> <pre><code>AT+CIMI 460010529708870 OK\n</code></pre> <p>Wrong result:</p> <pre><code>AT+CIMI ERROR\n</code></pre> <p>Check Signal Quality:</p> <p>Correct result:</p> <pre><code>+CSQ: 21,99 OK \n</code></pre> <p>This first number\u2014\u201c21\u201d is the result. We usually get the value number is 18~23.</p> <p>Wrong result:</p> <pre><code>AT+CSQ ERROR\n</code></pre> <p>Reset Modem: Reset the modem to its default state and erase all Data.</p> <p>Operator Name: Get the Name of current network operator.</p> <p>Correct result:</p> <pre><code>AT+COPS?+COPS: 0,0,\"CHN-UNICOM (Example only)\",6 OK\n</code></pre> <p>Wrong result:</p> <pre><code>AT+COPS? ERROR\n</code></pre> <p>There are other AT commands that you can input manually, please refer to Quectel_EC25&amp;EC21_AT_Commands_Manual_V1.0.</p>"},{"location":"setup/repeater_manager/","title":"Repeater Manager","text":"<p>All GL.iNet routers are equipped with repeater manager. When you use GL.iNet router as a repeater, repeater manager can enable the following features:</p>"},{"location":"setup/repeater_manager/#manage-saved-stations","title":"Manage Saved Stations","text":"<p>All repeater stations (WISP/WDS) you connected to will be saved in the router. You can choose if they will be auto connected to or not.</p> <p></p>"},{"location":"setup/repeater_manager/#auto-search-for-available-saved-stations","title":"Auto Search for Available Saved Stations","text":"<p>The router will search among all saved stations and try to connect a valid station. If none of the saved stations can be connected, the router will disable sta mode to ensure your AP is ON</p> <p></p>"},{"location":"setup/rtc_setting/","title":"Installation","text":"<p>By default, it is missing dependency kernel modules. We should install them firstly. If you use our stock firmware, you can just install the kernel modules via opkg.  </p> <pre><code>opkg update\nopkg install kmod-i2c-gpio-custom\nopkg install kmod-rtc-sd2068\n</code></pre> <p>Otherwise, If you want to compile your own firmware, choose these packages:  </p> <pre><code>Kernel modules  ---&gt;  I2C support  ---&gt;  kmod-i2c-gpio-custom\nKernel modules  ---&gt;  Other modules  ---&gt;  kmod-rtc-sd2068\n</code></pre>"},{"location":"setup/rtc_setting/#rtc-on-gl-ar150","title":"RTC on GL-AR150","text":""},{"location":"setup/rtc_setting/#pinout","title":"Pinout","text":""},{"location":"setup/rtc_setting/#usage","title":"Usage","text":"<p>The GPIO used for RTC is below:</p> <p><code>SDA</code> &lt;--&gt; <code>GPIO1</code> <code>SCL</code> &lt;--&gt; <code>GPIO17</code></p> <p>Now you need in insert kernel modules and connect to the module.  </p> <pre><code>insmod i2c-gpio-custom.ko bus0=0,1,17\necho sd2068 0x32 &gt; /sys/bus/i2c/devices/i2c-0/new_device\n</code></pre> <p>To read the time from RTC module</p> <pre><code>hwclock -r\n</code></pre> <p>To sync the RTC module's time to mini router</p> <pre><code>hwclock -s\n</code></pre> <p>To write mini router's time to RTC module</p> <pre><code>hwclock -w\n</code></pre>"},{"location":"setup/rtc_setting/#rtc-on-gl-mifi","title":"RTC on GL-MIFI","text":""},{"location":"setup/rtc_setting/#rtc-pinout","title":"RTC Pinout","text":""},{"location":"setup/rtc_setting/#usage_1","title":"Usage","text":"<p>The GPIO used for RTC is below:</p> <p><code>SDA</code> &lt;--&gt; <code>GPIO13</code> <code>SCL</code> &lt;--&gt; <code>GPIO17</code></p> <p>Now you need in insert kernel modules and connect to the module.  </p> <pre><code>insmod i2c-gpio-custom.ko bus0=0,13,17\necho sd2068 0x32 &gt; /sys/bus/i2c/devices/i2c-0/new_device\n</code></pre> <p>To read the time from RTC module</p> <pre><code>hwclock -r\n</code></pre> <p>To sync the RTC module's time to mini router</p> <pre><code>hwclock -s\n</code></pre> <p>To write mini router's time to RTC module</p> <pre><code>hwclock -w\n</code></pre>"},{"location":"setup/wifi_setting/","title":"Wireless Settings","text":""},{"location":"setup/wifi_setting/#turn-on-or-off-the-radio","title":"Turn On or Off the Radio","text":"<p>You can turn on or off the radio from the wen admin page by the switch beside the wireless icon.</p> <p></p>"},{"location":"setup/wifi_setting/#wireless-status","title":"Wireless Status","text":"<p>You can click the <code>wireless icon</code> to check the wireless status.</p> <p>There are two parts in the wireless status. The first part is Radio information. The second part is Interface (Virtual AP) information.</p> <p>A single router may have one or more radio and one device can have multiple Virtual interfaces.</p> <p>In this example, the channel is 6 and tx power is 20. We have one AP interface with SSID GL-MT300M-164.</p> <p></p>"},{"location":"setup/wifi_setting/#wireless-settings_1","title":"Wireless Settings","text":"<p>Click the <code>Setting</code> button, you can change the wireless settings:</p> <p>Mode: Change from 802.11 b/g/n, etc.</p> <p>Channel: The router will not choose the best channel itself. You need to choose one channel manually. You will have different choices based on the region you selected. In US, you can choose from 1 to 11. In China and EU, you can choose from 1 to 13. If you are using repeater, the channel will be fixed according to the main router.</p> <p>SSID: Change the name of the Wi-Fi. It is not suggested to use unicode characters such as Chinese.</p> <p>Encryption: You can only choose from WPA, WPA2 or WPA-Mixed. You cannot choose WEP or open because it is insecure. If you want to use WEP or you don't need a password, you can configure in Advanced settings (Luci).</p> <p>Password: If you keep the password value empty, it will use the old password. It must be at least 8 characters. We suggest you to change the Wi-Fi password when you get the router.</p> <p></p>"},{"location":"troubleshooting/debrick/","title":"Using Uboot to Debrick Your Router","text":"<p>You may brick your router if you were doing some DIY projects or flashed a wrong firmware. You are not able to access your router but you can re-install the firmware by using Uboot failsafe.</p> <p>Please follow the procedures below to access the Uboot Web UI and re-install the firmware:</p>"},{"location":"troubleshooting/debrick/#1-connect","title":"1. Connect","text":"<p>Connect only one cable to your router, and leave the other port (LAN or WAN) unconnected.</p>"},{"location":"troubleshooting/debrick/#2-press-and-hold","title":"2. Press and Hold","text":"<p>Press and hold the Reset button firmly first, and then power on your device. Must obey the first and then procedure.</p>"},{"location":"troubleshooting/debrick/#3-lights","title":"3. Lights","text":"<p>The LEDs will start blinking.</p>"},{"location":"troubleshooting/debrick/#4-release","title":"4. Release","text":"<p>Release your finger when you see the LEDs flashing: - 5 times for GL-AR150 and GL-AR300M16</p> <ul> <li>3 times for GL-MT300N, GL-MT300A, and GL-B1300</li> </ul>"},{"location":"troubleshooting/debrick/#5-set-ip","title":"5. Set IP","text":"<p>Set your computer\u2019s IP address to 192.168.1.2 (see the cap-screen of Win 7 below)</p> <p></p>"},{"location":"troubleshooting/debrick/#6-enter-web-ui","title":"6. Enter Web UI","text":"<p>User Firefox or Chrome to visit http://192.168.1.1. Then you will enter Uboot Web UI.</p> <p></p>"},{"location":"troubleshooting/debrick/#7-update","title":"7. Update","text":"<p>Click Choose File to find the firmware. Then click Update firmware. You can download the firmware here</p>"},{"location":"troubleshooting/debrick/#8-upgrading","title":"8. Upgrading","text":"<p>Wait for around 3 minutes. Don\u2019t power off your device while upgrading. Revert the IP setting you did in step 5 and you will be able to access the router via 192.168.8.1 again.</p>"},{"location":"troubleshooting/led/","title":"LED Status Indication","text":""},{"location":"troubleshooting/led/#mini-router","title":"Mini Router","text":"<ul> <li>Power: Solid green LED that indicates the router is powered up.</li> <li>Wireless:  Solid Red LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.</li> <li>Configurable: Can be customized by the user.</li> </ul>"},{"location":"troubleshooting/led/#gl-usb150-microuter","title":"GL-USB150 Microuter","text":"<ul> <li>Power: Solid green LED that indicates the router is powered up.</li> <li>Hotspot:  Solid green LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.</li> </ul>"},{"location":"troubleshooting/led/#gl-mifi-4g-smart-router","title":"GL-MiFi 4G Smart Router","text":"<ul> <li>Battery: Indicate the battery, it will blink when the device is charging until fully charged.</li> <li>Power: This router is powered on</li> <li>WAN: This router is connected to the Internet via Ethernet port.  It will blink when the device has data transmission from Ethernet port</li> <li>LAN: This router is connected to client through LAN cable</li> <li>WI-Fi: Solid LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.</li> <li>3G/4G: This router is connected to the 3G/4G LTE network. It will blink when the device has data transmission from 3G/4G LTE network</li> </ul>"},{"location":"troubleshooting/led/#gl-ar750","title":"GL-AR750","text":"<ul> <li>Power: Solid white LED that indicates the router is powered up.</li> <li>2.4GHz Wi-Fi: Solid white LED that indicates the router is broadcasting 2.4GHz Wi-Fi. It will flash when there is wireless data transfer</li> <li>5GHz Wi-Fi: Solid white LED that indicates the router is broadcasting 5GHz Wi-Fi. It will flash when there is wireless data transfer</li> </ul>"},{"location":"troubleshooting/led/#gl-b1300","title":"GL-B1300","text":"<ul> <li>Power: Solid green LED that indicates the router is powered up.</li> <li>Mesh: Flash green LED indicates that the router is pairing with another router. It will turn solid green when the Mesh network has been created.</li> <li>Wireless: Solid green LED that indicates the router is broadcasting Wi-Fi. It will flash when there is wireless data transfer.</li> </ul>"},{"location":"troubleshooting/led/#led-customization","title":"LED Customization","text":"<p>To configure the LED of GL.iNet routers, please login to Luci by clicking Advanced settings at the top-right corner of the web admin page. </p> <p></p> <p>Then please choose System &gt; LED Configuration.</p>"},{"location":"troubleshooting/reset/","title":"How to Repair / Reset","text":"<p>All GL.iNet Routers have reset buttons, you can use them to repair your network or reset  your routers to factory defult. If you can neither access the web-based setup page nor the router, you can press the <code>reset</code> button:</p>"},{"location":"troubleshooting/reset/#repair","title":"Repair","text":"<p>Press and hold for 3 seconds then release to repair your network.</p>"},{"location":"troubleshooting/reset/#reset","title":"Reset","text":"<p>Press and hold for 10 seconds then release to reset the router to factory settings. All user data will be cleared.</p>"},{"location":"troubleshooting/reset/#reset-button","title":"Reset Button","text":""},{"location":"troubleshooting/reset/#mini-routers","title":"Mini Routers","text":""},{"location":"troubleshooting/reset/#gl-usb150-microuter","title":"GL-USB150 Microuter","text":""},{"location":"troubleshooting/reset/#gl-mifi-4g-smart-router","title":"GL-MiFi 4G Smart Router","text":""},{"location":"troubleshooting/reset/#gl-ar750-travel-ac-router","title":"GL-AR750 Travel AC Router","text":""},{"location":"troubleshooting/reset/#gl-b1300-home-ac-router","title":"GL-B1300 Home AC Router","text":"<p>Note: If factory reset is not working. You might need to follow the Uboot tutorial to debrick your router.</p>"},{"location":"troubleshooting/stop_supporting/","title":"Stop supporting firmware 2.x","text":"<p>_</p> <p>We will stop support for firmware 2.x since September 10, 2020.</p> <p>We recomend to upgrade to firmware 3.x, if you still want to use the affected features, just ssh to router, add a line below to hosts file.</p> <p><code>52.41.190.83 www.gl-inet.com</code></p> <p>The host file is at <code>/etc/hosts</code>.</p> <p>The image below show where to add the line.</p> <p></p> <p>If you don't know how to ssh to router, please refer here.</p> <p>If you are using Windows, you can use WinSCP, please refer here.</p> <p>How do I know it is worked?</p> <p>Try to ping the url <code>www.gl-inet.com</code> after September 10, 2020.</p> <p>If the IP address is <code>52.41.190.83</code>, as the image show below, it worked.</p> <p></p>"},{"location":"video/product_intro/","title":"Product Intro","text":"<p>This page is listing the videos related to product introduction. We have an official YouTube Channel.</p>"},{"location":"video/product_intro/#2017-glinet-product-collection","title":"2017 GL.iNet Product Collection","text":""},{"location":"video/review/","title":"Customer Review","text":"<p>This page is listing the videos related to customer review. We thanks for all the nice reviews from our users. We only select some of them to show here, because the limitation of space.  We will update contents to our official  YouTube Channel time to time.</p>"},{"location":"video/review/#hidden-router-review-the-best-vpn-router","title":"Hidden Router Review: The Best VPN Router?","text":"<p>By Stefan Zanev | Product Mentioned:GL-B1300</p>"},{"location":"video/review/#how-to-repeat-public-wifi-hotspot-wifi-repeaterextender-gl-inet-ar750-review","title":"How to Repeat Public Wifi Hotspot | Wifi Repeater/Extender | GL iNet AR750 Review","text":"<p>By LeverageLifestyle | Product Mentioned: GL-AR750</p>"},{"location":"video/review/#how-to-use-and-setup-a-mini-vpn-router","title":"How to Use and Setup a Mini VPN Router","text":"<p>By Best10VPN | Product Mentioned: GL-AR300M</p>"},{"location":"video/review/#openspot-using-wireless-mini-router-gl-ar150","title":"OpenSpot using Wireless Mini Router GL-AR150","text":"<p>By Artemus714 | Product Mentioned: GL-AR150</p>"},{"location":"video/review/#how-to-setup-the-gli-gl-mt300n-mini-vpn-router-and-review","title":"How-To Setup the GLi GL-MT300N Mini VPN Router and Review","text":"<p>By Jabber Tech | Product Mentioned: GL-MT300N</p>"},{"location":"video/review/#glinet-mini-openwrt-router-with-tor-awesome","title":"GL.iNet Mini OpenWrt Router with TOR! (Awesome)","text":"<p>By Bri Y the PC Guy | Product Mentioned: GL-MT300A</p>"},{"location":"video/review/#anleitung-glinet-vpn-client-router-einrichtung","title":"Anleitung: Gl.iNet VPN-Client Router Einrichtung","text":"<p>By VPN Anbieter Vergleich Test  | Product Mentioned: GL-MT300A</p>"},{"location":"video/tutor/","title":"Tutorials","text":"<p>This page is listing the videos related to product tutorials. We will update contents to our official YouTube Channel time to time.</p>"},{"location":"video/tutor/#gl-ar150-mini-router-repeater-setup","title":"GL-AR150 Mini Router - Repeater Setup","text":""},{"location":"video/tutor/#how-to-recover-gl-ar150-by-u-boot-failsafe","title":"How to Recover GL-AR150 by U-Boot FailSafe","text":""},{"location":"video/tutor/#create-your-private-network-with-microuter-gl-usb150","title":"Create your private network with Microuter GL-USB150","text":""},{"location":"video/tutor/#how-to-open-the-case-of-glinet-mini-routers","title":"How to open the case of GL.iNet mini routers","text":""}]}